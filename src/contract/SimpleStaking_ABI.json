{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"stake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\\n/**\\n * @title SimpleStaking\\n * @dev A contract with tokenB staking and tokenA/tokenB swap functionality\\n */\\ncontract SimpleStaking {\\n    // Token addresses\\n    address public tokenA;\\n    address public tokenB;\\n    \\n    // Mapping to track each user's staked tokenB balance\\n    mapping(address => uint256) public stakedBalance;\\n    \\n    // Mapping to track each user's deposited tokenB balance (for swap liquidity)\\n    mapping(address => uint256) public depositedBalance;\\n    \\n    // Total amount of tokenB staked\\n    uint256 public totalStaked;\\n    \\n    // Total amount of tokenB deposited for swaps\\n    uint256 public totalDeposited;\\n    \\n    // Events\\n    event Staked(address indexed user, uint256 amount);\\n    event Withdrawn(address indexed user, uint256 amount);\\n    event Deposited(address indexed user, uint256 amount);\\n    event Swapped(address indexed user, uint256 amountIn, uint256 amountOut);\\n    \\n    /**\\n     * @dev Constructor to set token addresses\\n     * @param _tokenA Address of token A\\n     * @param _tokenB Address of token B\\n     */\\n    constructor(address _tokenA, address _tokenB) {\\n        require(_tokenA != address(0), \\\"Invalid tokenA address\\\");\\n        require(_tokenB != address(0), \\\"Invalid tokenB address\\\");\\n        tokenA = _tokenA;\\n        tokenB = _tokenB;\\n    }\\n    \\n    /**\\n     * @dev Deposit tokenB into the contract to provide swap liquidity\\n     * @param amount The amount of tokenB to deposit\\n     */\\n    function deposit(uint256 amount) external {\\n        require(amount > 0, \\\"Must deposit more than 0\\\");\\n        \\n        // Transfer tokenB from user to contract\\n        require(\\n            IERC20(tokenB).transferFrom(msg.sender, address(this), amount),\\n            \\\"TokenB transfer failed\\\"\\n        );\\n        \\n        depositedBalance[msg.sender] += amount;\\n        totalDeposited += amount;\\n        \\n        emit Deposited(msg.sender, amount);\\n    }\\n    \\n    /**\\n     * @dev Stake tokenB into the contract\\n     * @param amount The amount of tokenB to stake\\n     */\\n    function stake(uint256 amount) external {\\n        require(amount > 0, \\\"Must stake more than 0\\\");\\n        \\n        // Transfer tokenB from user to contract\\n        require(\\n            IERC20(tokenB).transferFrom(msg.sender, address(this), amount),\\n            \\\"TokenB transfer failed\\\"\\n        );\\n        \\n        stakedBalance[msg.sender] += amount;\\n        totalStaked += amount;\\n        \\n        emit Staked(msg.sender, amount);\\n    }\\n    \\n    /**\\n     * @dev Withdraw staked tokenB\\n     * @param amount The amount to withdraw\\n     */\\n    function withdraw(uint256 amount) external {\\n        require(amount > 0, \\\"Must withdraw more than 0\\\");\\n        require(stakedBalance[msg.sender] >= amount, \\\"Insufficient staked balance\\\");\\n        \\n        stakedBalance[msg.sender] -= amount;\\n        totalStaked -= amount;\\n        \\n        // Transfer tokenB from contract back to user\\n        require(\\n            IERC20(tokenB).transfer(msg.sender, amount),\\n            \\\"TokenB transfer failed\\\"\\n        );\\n        \\n        emit Withdrawn(msg.sender, amount);\\n    }\\n    \\n    /**\\n     * @dev Swap tokenA for tokenB (1:1 ratio)\\n     * User sends tokenA and receives tokenB from deposited liquidity\\n     * @param amount The amount of tokens to swap\\n     */\\n    function swap(uint256 amount) external {\\n        require(amount > 0, \\\"Must swap more than 0\\\");\\n        \\n        // Check contract has enough tokenB in deposited pool\\n        require(totalDeposited >= amount, \\\"Insufficient tokenB liquidity\\\");\\n        \\n        // Transfer tokenA from user to contract\\n        require(\\n            IERC20(tokenA).transferFrom(msg.sender, address(this), amount),\\n            \\\"TokenA transfer failed\\\"\\n        );\\n        \\n        // Transfer tokenB from contract to user\\n        require(\\n            IERC20(tokenB).transfer(msg.sender, amount),\\n            \\\"TokenB transfer failed\\\"\\n        );\\n        \\n        // Reduce total deposited since tokenB was sent out\\n        totalDeposited -= amount;\\n        \\n        emit Swapped(msg.sender, amount, amount);\\n    }\\n    \\n    /**\\n     * @dev Get the staked balance of a user\\n     * @param user The address to check\\n     * @return The staked tokenB balance\\n     */\\n    function getStakedBalance(address user) external view returns (uint256) {\\n        return stakedBalance[user];\\n    }\\n    \\n    /**\\n     * @dev Get the deposited balance of a user\\n     * @param user The address to check\\n     * @return The deposited tokenB balance\\n     */\\n    function getDepositedBalance(address user) external view returns (uint256) {\\n        return depositedBalance[user];\\n    }\\n    \\n    /**\\n     * @dev Get the contract's token balance\\n     * @param token The token address to check\\n     * @return The token balance\\n     */\\n    function getTokenBalance(address token) external view returns (uint256) {\\n        return IERC20(token).balanceOf(address(this));\\n    }\\n}\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "SimpleStaking",
	"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getDepositedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A contract with tokenB staking and tokenA/tokenB swap functionality\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to set token addresses\",\"params\":{\"_tokenA\":\"Address of token A\",\"_tokenB\":\"Address of token B\"}},\"deposit(uint256)\":{\"details\":\"Deposit tokenB into the contract to provide swap liquidity\",\"params\":{\"amount\":\"The amount of tokenB to deposit\"}},\"getDepositedBalance(address)\":{\"details\":\"Get the deposited balance of a user\",\"params\":{\"user\":\"The address to check\"},\"returns\":{\"_0\":\"The deposited tokenB balance\"}},\"getStakedBalance(address)\":{\"details\":\"Get the staked balance of a user\",\"params\":{\"user\":\"The address to check\"},\"returns\":{\"_0\":\"The staked tokenB balance\"}},\"getTokenBalance(address)\":{\"details\":\"Get the contract's token balance\",\"params\":{\"token\":\"The token address to check\"},\"returns\":{\"_0\":\"The token balance\"}},\"stake(uint256)\":{\"details\":\"Stake tokenB into the contract\",\"params\":{\"amount\":\"The amount of tokenB to stake\"}},\"swap(uint256)\":{\"details\":\"Swap tokenA for tokenB (1:1 ratio) User sends tokenA and receives tokenB from deposited liquidity\",\"params\":{\"amount\":\"The amount of tokens to swap\"}},\"withdraw(uint256)\":{\"details\":\"Withdraw staked tokenB\",\"params\":{\"amount\":\"The amount to withdraw\"}}},\"title\":\"SimpleStaking\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stake.sol\":\"SimpleStaking\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"stake.sol\":{\"keccak256\":\"0x69b6d62adbec3a4820bc5b7db98ad489cab3fab00f6b6cf7b3517936ce2fc6a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14b4a1c51d07cf726fddc83250de29864bd97a77c9d7c228ada31e8c8298d3e8\",\"dweb:/ipfs/QmQkv3N2x3mdgh84px23h5LSz6GiTnQNwiSm59mSVxP3Dp\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_109": {
				"entryPoint": null,
				"id": 109,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_decode_t_address_fromMemory": {
				"entryPoint": 477,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_address_fromMemory": {
				"entryPoint": 497,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_encode_t_stringliteral_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 719,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 615,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 753,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 649,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 559,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 438,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 407,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 403,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"store_literal_in_memory_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1": {
				"entryPoint": 679,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069": {
				"entryPoint": 575,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_address": {
				"entryPoint": 455,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:3480:1",
					"nodeType": "YulBlock",
					"src": "0:3480:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "47:35:1",
								"nodeType": "YulBlock",
								"src": "47:35:1",
								"statements": [
									{
										"nativeSrc": "57:19:1",
										"nodeType": "YulAssignment",
										"src": "57:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "73:2:1",
													"nodeType": "YulLiteral",
													"src": "73:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "67:5:1",
												"nodeType": "YulIdentifier",
												"src": "67:5:1"
											},
											"nativeSrc": "67:9:1",
											"nodeType": "YulFunctionCall",
											"src": "67:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "57:6:1",
												"nodeType": "YulIdentifier",
												"src": "57:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "7:75:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "40:6:1",
									"nodeType": "YulTypedName",
									"src": "40:6:1",
									"type": ""
								}
							],
							"src": "7:75:1"
						},
						{
							"body": {
								"nativeSrc": "177:28:1",
								"nodeType": "YulBlock",
								"src": "177:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "194:1:1",
													"nodeType": "YulLiteral",
													"src": "194:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "197:1:1",
													"nodeType": "YulLiteral",
													"src": "197:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "187:6:1",
												"nodeType": "YulIdentifier",
												"src": "187:6:1"
											},
											"nativeSrc": "187:12:1",
											"nodeType": "YulFunctionCall",
											"src": "187:12:1"
										},
										"nativeSrc": "187:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "187:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "88:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "88:117:1"
						},
						{
							"body": {
								"nativeSrc": "300:28:1",
								"nodeType": "YulBlock",
								"src": "300:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "317:1:1",
													"nodeType": "YulLiteral",
													"src": "317:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "320:1:1",
													"nodeType": "YulLiteral",
													"src": "320:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "310:6:1",
												"nodeType": "YulIdentifier",
												"src": "310:6:1"
											},
											"nativeSrc": "310:12:1",
											"nodeType": "YulFunctionCall",
											"src": "310:12:1"
										},
										"nativeSrc": "310:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "310:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "211:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "211:117:1"
						},
						{
							"body": {
								"nativeSrc": "379:81:1",
								"nodeType": "YulBlock",
								"src": "379:81:1",
								"statements": [
									{
										"nativeSrc": "389:65:1",
										"nodeType": "YulAssignment",
										"src": "389:65:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "404:5:1",
													"nodeType": "YulIdentifier",
													"src": "404:5:1"
												},
												{
													"kind": "number",
													"nativeSrc": "411:42:1",
													"nodeType": "YulLiteral",
													"src": "411:42:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "400:3:1",
												"nodeType": "YulIdentifier",
												"src": "400:3:1"
											},
											"nativeSrc": "400:54:1",
											"nodeType": "YulFunctionCall",
											"src": "400:54:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "389:7:1",
												"nodeType": "YulIdentifier",
												"src": "389:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "334:126:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "361:5:1",
									"nodeType": "YulTypedName",
									"src": "361:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "371:7:1",
									"nodeType": "YulTypedName",
									"src": "371:7:1",
									"type": ""
								}
							],
							"src": "334:126:1"
						},
						{
							"body": {
								"nativeSrc": "511:51:1",
								"nodeType": "YulBlock",
								"src": "511:51:1",
								"statements": [
									{
										"nativeSrc": "521:35:1",
										"nodeType": "YulAssignment",
										"src": "521:35:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "550:5:1",
													"nodeType": "YulIdentifier",
													"src": "550:5:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "532:17:1",
												"nodeType": "YulIdentifier",
												"src": "532:17:1"
											},
											"nativeSrc": "532:24:1",
											"nodeType": "YulFunctionCall",
											"src": "532:24:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "521:7:1",
												"nodeType": "YulIdentifier",
												"src": "521:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "466:96:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "493:5:1",
									"nodeType": "YulTypedName",
									"src": "493:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "503:7:1",
									"nodeType": "YulTypedName",
									"src": "503:7:1",
									"type": ""
								}
							],
							"src": "466:96:1"
						},
						{
							"body": {
								"nativeSrc": "611:79:1",
								"nodeType": "YulBlock",
								"src": "611:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "668:16:1",
											"nodeType": "YulBlock",
											"src": "668:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "677:1:1",
																"nodeType": "YulLiteral",
																"src": "677:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "680:1:1",
																"nodeType": "YulLiteral",
																"src": "680:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "670:6:1",
															"nodeType": "YulIdentifier",
															"src": "670:6:1"
														},
														"nativeSrc": "670:12:1",
														"nodeType": "YulFunctionCall",
														"src": "670:12:1"
													},
													"nativeSrc": "670:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "670:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "634:5:1",
															"nodeType": "YulIdentifier",
															"src": "634:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "659:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "659:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nativeSrc": "641:17:1",
																"nodeType": "YulIdentifier",
																"src": "641:17:1"
															},
															"nativeSrc": "641:24:1",
															"nodeType": "YulFunctionCall",
															"src": "641:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "631:2:1",
														"nodeType": "YulIdentifier",
														"src": "631:2:1"
													},
													"nativeSrc": "631:35:1",
													"nodeType": "YulFunctionCall",
													"src": "631:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "624:6:1",
												"nodeType": "YulIdentifier",
												"src": "624:6:1"
											},
											"nativeSrc": "624:43:1",
											"nodeType": "YulFunctionCall",
											"src": "624:43:1"
										},
										"nativeSrc": "621:63:1",
										"nodeType": "YulIf",
										"src": "621:63:1"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nativeSrc": "568:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "604:5:1",
									"nodeType": "YulTypedName",
									"src": "604:5:1",
									"type": ""
								}
							],
							"src": "568:122:1"
						},
						{
							"body": {
								"nativeSrc": "759:80:1",
								"nodeType": "YulBlock",
								"src": "759:80:1",
								"statements": [
									{
										"nativeSrc": "769:22:1",
										"nodeType": "YulAssignment",
										"src": "769:22:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "784:6:1",
													"nodeType": "YulIdentifier",
													"src": "784:6:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "778:5:1",
												"nodeType": "YulIdentifier",
												"src": "778:5:1"
											},
											"nativeSrc": "778:13:1",
											"nodeType": "YulFunctionCall",
											"src": "778:13:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "769:5:1",
												"nodeType": "YulIdentifier",
												"src": "769:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "827:5:1",
													"nodeType": "YulIdentifier",
													"src": "827:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nativeSrc": "800:26:1",
												"nodeType": "YulIdentifier",
												"src": "800:26:1"
											},
											"nativeSrc": "800:33:1",
											"nodeType": "YulFunctionCall",
											"src": "800:33:1"
										},
										"nativeSrc": "800:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "800:33:1"
									}
								]
							},
							"name": "abi_decode_t_address_fromMemory",
							"nativeSrc": "696:143:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "737:6:1",
									"nodeType": "YulTypedName",
									"src": "737:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "745:3:1",
									"nodeType": "YulTypedName",
									"src": "745:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "753:5:1",
									"nodeType": "YulTypedName",
									"src": "753:5:1",
									"type": ""
								}
							],
							"src": "696:143:1"
						},
						{
							"body": {
								"nativeSrc": "939:413:1",
								"nodeType": "YulBlock",
								"src": "939:413:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "985:83:1",
											"nodeType": "YulBlock",
											"src": "985:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "987:77:1",
															"nodeType": "YulIdentifier",
															"src": "987:77:1"
														},
														"nativeSrc": "987:79:1",
														"nodeType": "YulFunctionCall",
														"src": "987:79:1"
													},
													"nativeSrc": "987:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "987:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "960:7:1",
															"nodeType": "YulIdentifier",
															"src": "960:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "969:9:1",
															"nodeType": "YulIdentifier",
															"src": "969:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "956:3:1",
														"nodeType": "YulIdentifier",
														"src": "956:3:1"
													},
													"nativeSrc": "956:23:1",
													"nodeType": "YulFunctionCall",
													"src": "956:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "981:2:1",
													"nodeType": "YulLiteral",
													"src": "981:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "952:3:1",
												"nodeType": "YulIdentifier",
												"src": "952:3:1"
											},
											"nativeSrc": "952:32:1",
											"nodeType": "YulFunctionCall",
											"src": "952:32:1"
										},
										"nativeSrc": "949:119:1",
										"nodeType": "YulIf",
										"src": "949:119:1"
									},
									{
										"nativeSrc": "1078:128:1",
										"nodeType": "YulBlock",
										"src": "1078:128:1",
										"statements": [
											{
												"nativeSrc": "1093:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1093:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1107:1:1",
													"nodeType": "YulLiteral",
													"src": "1107:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:1",
														"nodeType": "YulTypedName",
														"src": "1097:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1122:74:1",
												"nodeType": "YulAssignment",
												"src": "1122:74:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1168:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1168:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1179:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1164:3:1",
																"nodeType": "YulIdentifier",
																"src": "1164:3:1"
															},
															"nativeSrc": "1164:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1164:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1188:7:1",
															"nodeType": "YulIdentifier",
															"src": "1188:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address_fromMemory",
														"nativeSrc": "1132:31:1",
														"nodeType": "YulIdentifier",
														"src": "1132:31:1"
													},
													"nativeSrc": "1132:64:1",
													"nodeType": "YulFunctionCall",
													"src": "1132:64:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "1122:6:1",
														"nodeType": "YulIdentifier",
														"src": "1122:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "1216:129:1",
										"nodeType": "YulBlock",
										"src": "1216:129:1",
										"statements": [
											{
												"nativeSrc": "1231:16:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1231:16:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1245:2:1",
													"nodeType": "YulLiteral",
													"src": "1245:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1235:6:1",
														"nodeType": "YulTypedName",
														"src": "1235:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1261:74:1",
												"nodeType": "YulAssignment",
												"src": "1261:74:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1307:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1307:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1318:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1303:3:1",
																"nodeType": "YulIdentifier",
																"src": "1303:3:1"
															},
															"nativeSrc": "1303:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1303:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1327:7:1",
															"nodeType": "YulIdentifier",
															"src": "1327:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address_fromMemory",
														"nativeSrc": "1271:31:1",
														"nodeType": "YulIdentifier",
														"src": "1271:31:1"
													},
													"nativeSrc": "1271:64:1",
													"nodeType": "YulFunctionCall",
													"src": "1271:64:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "1261:6:1",
														"nodeType": "YulIdentifier",
														"src": "1261:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_address_fromMemory",
							"nativeSrc": "845:507:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "901:9:1",
									"nodeType": "YulTypedName",
									"src": "901:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "912:7:1",
									"nodeType": "YulTypedName",
									"src": "912:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "924:6:1",
									"nodeType": "YulTypedName",
									"src": "924:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "932:6:1",
									"nodeType": "YulTypedName",
									"src": "932:6:1",
									"type": ""
								}
							],
							"src": "845:507:1"
						},
						{
							"body": {
								"nativeSrc": "1454:73:1",
								"nodeType": "YulBlock",
								"src": "1454:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1471:3:1",
													"nodeType": "YulIdentifier",
													"src": "1471:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "1476:6:1",
													"nodeType": "YulIdentifier",
													"src": "1476:6:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1464:6:1",
												"nodeType": "YulIdentifier",
												"src": "1464:6:1"
											},
											"nativeSrc": "1464:19:1",
											"nodeType": "YulFunctionCall",
											"src": "1464:19:1"
										},
										"nativeSrc": "1464:19:1",
										"nodeType": "YulExpressionStatement",
										"src": "1464:19:1"
									},
									{
										"nativeSrc": "1492:29:1",
										"nodeType": "YulAssignment",
										"src": "1492:29:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1511:3:1",
													"nodeType": "YulIdentifier",
													"src": "1511:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1516:4:1",
													"nodeType": "YulLiteral",
													"src": "1516:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1507:3:1",
												"nodeType": "YulIdentifier",
												"src": "1507:3:1"
											},
											"nativeSrc": "1507:14:1",
											"nodeType": "YulFunctionCall",
											"src": "1507:14:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "1492:11:1",
												"nodeType": "YulIdentifier",
												"src": "1492:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "1358:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "1426:3:1",
									"nodeType": "YulTypedName",
									"src": "1426:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "1431:6:1",
									"nodeType": "YulTypedName",
									"src": "1431:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "1442:11:1",
									"nodeType": "YulTypedName",
									"src": "1442:11:1",
									"type": ""
								}
							],
							"src": "1358:169:1"
						},
						{
							"body": {
								"nativeSrc": "1639:66:1",
								"nodeType": "YulBlock",
								"src": "1639:66:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "1661:6:1",
															"nodeType": "YulIdentifier",
															"src": "1661:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1669:1:1",
															"nodeType": "YulLiteral",
															"src": "1669:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1657:3:1",
														"nodeType": "YulIdentifier",
														"src": "1657:3:1"
													},
													"nativeSrc": "1657:14:1",
													"nodeType": "YulFunctionCall",
													"src": "1657:14:1"
												},
												{
													"hexValue": "496e76616c696420746f6b656e412061646472657373",
													"kind": "string",
													"nativeSrc": "1673:24:1",
													"nodeType": "YulLiteral",
													"src": "1673:24:1",
													"type": "",
													"value": "Invalid tokenA address"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1650:6:1",
												"nodeType": "YulIdentifier",
												"src": "1650:6:1"
											},
											"nativeSrc": "1650:48:1",
											"nodeType": "YulFunctionCall",
											"src": "1650:48:1"
										},
										"nativeSrc": "1650:48:1",
										"nodeType": "YulExpressionStatement",
										"src": "1650:48:1"
									}
								]
							},
							"name": "store_literal_in_memory_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069",
							"nativeSrc": "1533:172:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "1631:6:1",
									"nodeType": "YulTypedName",
									"src": "1631:6:1",
									"type": ""
								}
							],
							"src": "1533:172:1"
						},
						{
							"body": {
								"nativeSrc": "1857:220:1",
								"nodeType": "YulBlock",
								"src": "1857:220:1",
								"statements": [
									{
										"nativeSrc": "1867:74:1",
										"nodeType": "YulAssignment",
										"src": "1867:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1933:3:1",
													"nodeType": "YulIdentifier",
													"src": "1933:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1938:2:1",
													"nodeType": "YulLiteral",
													"src": "1938:2:1",
													"type": "",
													"value": "22"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1874:58:1",
												"nodeType": "YulIdentifier",
												"src": "1874:58:1"
											},
											"nativeSrc": "1874:67:1",
											"nodeType": "YulFunctionCall",
											"src": "1874:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "1867:3:1",
												"nodeType": "YulIdentifier",
												"src": "1867:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2039:3:1",
													"nodeType": "YulIdentifier",
													"src": "2039:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069",
												"nativeSrc": "1950:88:1",
												"nodeType": "YulIdentifier",
												"src": "1950:88:1"
											},
											"nativeSrc": "1950:93:1",
											"nodeType": "YulFunctionCall",
											"src": "1950:93:1"
										},
										"nativeSrc": "1950:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "1950:93:1"
									},
									{
										"nativeSrc": "2052:19:1",
										"nodeType": "YulAssignment",
										"src": "2052:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2063:3:1",
													"nodeType": "YulIdentifier",
													"src": "2063:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2068:2:1",
													"nodeType": "YulLiteral",
													"src": "2068:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2059:3:1",
												"nodeType": "YulIdentifier",
												"src": "2059:3:1"
											},
											"nativeSrc": "2059:12:1",
											"nodeType": "YulFunctionCall",
											"src": "2059:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "2052:3:1",
												"nodeType": "YulIdentifier",
												"src": "2052:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "1711:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "1845:3:1",
									"nodeType": "YulTypedName",
									"src": "1845:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "1853:3:1",
									"nodeType": "YulTypedName",
									"src": "1853:3:1",
									"type": ""
								}
							],
							"src": "1711:366:1"
						},
						{
							"body": {
								"nativeSrc": "2254:248:1",
								"nodeType": "YulBlock",
								"src": "2254:248:1",
								"statements": [
									{
										"nativeSrc": "2264:26:1",
										"nodeType": "YulAssignment",
										"src": "2264:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2276:9:1",
													"nodeType": "YulIdentifier",
													"src": "2276:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2287:2:1",
													"nodeType": "YulLiteral",
													"src": "2287:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2272:3:1",
												"nodeType": "YulIdentifier",
												"src": "2272:3:1"
											},
											"nativeSrc": "2272:18:1",
											"nodeType": "YulFunctionCall",
											"src": "2272:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2264:4:1",
												"nodeType": "YulIdentifier",
												"src": "2264:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "2311:9:1",
															"nodeType": "YulIdentifier",
															"src": "2311:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "2322:1:1",
															"nodeType": "YulLiteral",
															"src": "2322:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2307:3:1",
														"nodeType": "YulIdentifier",
														"src": "2307:3:1"
													},
													"nativeSrc": "2307:17:1",
													"nodeType": "YulFunctionCall",
													"src": "2307:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "2330:4:1",
															"nodeType": "YulIdentifier",
															"src": "2330:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "2336:9:1",
															"nodeType": "YulIdentifier",
															"src": "2336:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2326:3:1",
														"nodeType": "YulIdentifier",
														"src": "2326:3:1"
													},
													"nativeSrc": "2326:20:1",
													"nodeType": "YulFunctionCall",
													"src": "2326:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2300:6:1",
												"nodeType": "YulIdentifier",
												"src": "2300:6:1"
											},
											"nativeSrc": "2300:47:1",
											"nodeType": "YulFunctionCall",
											"src": "2300:47:1"
										},
										"nativeSrc": "2300:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "2300:47:1"
									},
									{
										"nativeSrc": "2356:139:1",
										"nodeType": "YulAssignment",
										"src": "2356:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "2490:4:1",
													"nodeType": "YulIdentifier",
													"src": "2490:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2364:124:1",
												"nodeType": "YulIdentifier",
												"src": "2364:124:1"
											},
											"nativeSrc": "2364:131:1",
											"nodeType": "YulFunctionCall",
											"src": "2364:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2356:4:1",
												"nodeType": "YulIdentifier",
												"src": "2356:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "2083:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2234:9:1",
									"nodeType": "YulTypedName",
									"src": "2234:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "2249:4:1",
									"nodeType": "YulTypedName",
									"src": "2249:4:1",
									"type": ""
								}
							],
							"src": "2083:419:1"
						},
						{
							"body": {
								"nativeSrc": "2614:66:1",
								"nodeType": "YulBlock",
								"src": "2614:66:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "2636:6:1",
															"nodeType": "YulIdentifier",
															"src": "2636:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "2644:1:1",
															"nodeType": "YulLiteral",
															"src": "2644:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2632:3:1",
														"nodeType": "YulIdentifier",
														"src": "2632:3:1"
													},
													"nativeSrc": "2632:14:1",
													"nodeType": "YulFunctionCall",
													"src": "2632:14:1"
												},
												{
													"hexValue": "496e76616c696420746f6b656e422061646472657373",
													"kind": "string",
													"nativeSrc": "2648:24:1",
													"nodeType": "YulLiteral",
													"src": "2648:24:1",
													"type": "",
													"value": "Invalid tokenB address"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2625:6:1",
												"nodeType": "YulIdentifier",
												"src": "2625:6:1"
											},
											"nativeSrc": "2625:48:1",
											"nodeType": "YulFunctionCall",
											"src": "2625:48:1"
										},
										"nativeSrc": "2625:48:1",
										"nodeType": "YulExpressionStatement",
										"src": "2625:48:1"
									}
								]
							},
							"name": "store_literal_in_memory_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1",
							"nativeSrc": "2508:172:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "2606:6:1",
									"nodeType": "YulTypedName",
									"src": "2606:6:1",
									"type": ""
								}
							],
							"src": "2508:172:1"
						},
						{
							"body": {
								"nativeSrc": "2832:220:1",
								"nodeType": "YulBlock",
								"src": "2832:220:1",
								"statements": [
									{
										"nativeSrc": "2842:74:1",
										"nodeType": "YulAssignment",
										"src": "2842:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2908:3:1",
													"nodeType": "YulIdentifier",
													"src": "2908:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2913:2:1",
													"nodeType": "YulLiteral",
													"src": "2913:2:1",
													"type": "",
													"value": "22"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2849:58:1",
												"nodeType": "YulIdentifier",
												"src": "2849:58:1"
											},
											"nativeSrc": "2849:67:1",
											"nodeType": "YulFunctionCall",
											"src": "2849:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "2842:3:1",
												"nodeType": "YulIdentifier",
												"src": "2842:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3014:3:1",
													"nodeType": "YulIdentifier",
													"src": "3014:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1",
												"nativeSrc": "2925:88:1",
												"nodeType": "YulIdentifier",
												"src": "2925:88:1"
											},
											"nativeSrc": "2925:93:1",
											"nodeType": "YulFunctionCall",
											"src": "2925:93:1"
										},
										"nativeSrc": "2925:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "2925:93:1"
									},
									{
										"nativeSrc": "3027:19:1",
										"nodeType": "YulAssignment",
										"src": "3027:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3038:3:1",
													"nodeType": "YulIdentifier",
													"src": "3038:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3043:2:1",
													"nodeType": "YulLiteral",
													"src": "3043:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3034:3:1",
												"nodeType": "YulIdentifier",
												"src": "3034:3:1"
											},
											"nativeSrc": "3034:12:1",
											"nodeType": "YulFunctionCall",
											"src": "3034:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "3027:3:1",
												"nodeType": "YulIdentifier",
												"src": "3027:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "2686:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "2820:3:1",
									"nodeType": "YulTypedName",
									"src": "2820:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "2828:3:1",
									"nodeType": "YulTypedName",
									"src": "2828:3:1",
									"type": ""
								}
							],
							"src": "2686:366:1"
						},
						{
							"body": {
								"nativeSrc": "3229:248:1",
								"nodeType": "YulBlock",
								"src": "3229:248:1",
								"statements": [
									{
										"nativeSrc": "3239:26:1",
										"nodeType": "YulAssignment",
										"src": "3239:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3251:9:1",
													"nodeType": "YulIdentifier",
													"src": "3251:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3262:2:1",
													"nodeType": "YulLiteral",
													"src": "3262:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3247:3:1",
												"nodeType": "YulIdentifier",
												"src": "3247:3:1"
											},
											"nativeSrc": "3247:18:1",
											"nodeType": "YulFunctionCall",
											"src": "3247:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3239:4:1",
												"nodeType": "YulIdentifier",
												"src": "3239:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3286:9:1",
															"nodeType": "YulIdentifier",
															"src": "3286:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3297:1:1",
															"nodeType": "YulLiteral",
															"src": "3297:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3282:3:1",
														"nodeType": "YulIdentifier",
														"src": "3282:3:1"
													},
													"nativeSrc": "3282:17:1",
													"nodeType": "YulFunctionCall",
													"src": "3282:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "3305:4:1",
															"nodeType": "YulIdentifier",
															"src": "3305:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "3311:9:1",
															"nodeType": "YulIdentifier",
															"src": "3311:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3301:3:1",
														"nodeType": "YulIdentifier",
														"src": "3301:3:1"
													},
													"nativeSrc": "3301:20:1",
													"nodeType": "YulFunctionCall",
													"src": "3301:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3275:6:1",
												"nodeType": "YulIdentifier",
												"src": "3275:6:1"
											},
											"nativeSrc": "3275:47:1",
											"nodeType": "YulFunctionCall",
											"src": "3275:47:1"
										},
										"nativeSrc": "3275:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "3275:47:1"
									},
									{
										"nativeSrc": "3331:139:1",
										"nodeType": "YulAssignment",
										"src": "3331:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "3465:4:1",
													"nodeType": "YulIdentifier",
													"src": "3465:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3339:124:1",
												"nodeType": "YulIdentifier",
												"src": "3339:124:1"
											},
											"nativeSrc": "3339:131:1",
											"nodeType": "YulFunctionCall",
											"src": "3339:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3331:4:1",
												"nodeType": "YulIdentifier",
												"src": "3331:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "3058:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3209:9:1",
									"nodeType": "YulTypedName",
									"src": "3209:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3224:4:1",
									"nodeType": "YulTypedName",
									"src": "3224:4:1",
									"type": ""
								}
							],
							"src": "3058:419:1"
						}
					]
				},
				"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid tokenA address\")\n\n    }\n\n    function abi_encode_t_stringliteral_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_afca9aba83c777ce619f3053a733ae1e95b03a492a6db15dac52ae7ed4bab069_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid tokenB address\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a87b36c051af966185570b2380f8ce0fd0252d6ee0701ec8aa8a3cd94f26bc1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "608060405234801561000f575f5ffd5b5060405161167a38038061167a833981810160405281019061003191906101f1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361009f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009690610289565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610104906102f1565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061030f565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101c082610197565b9050919050565b6101d0816101b6565b81146101da575f5ffd5b50565b5f815190506101eb816101c7565b92915050565b5f5f6040838503121561020757610206610193565b5b5f610214858286016101dd565b9250506020610225858286016101dd565b9150509250929050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e412061646472657373000000000000000000005f82015250565b5f61027360168361022f565b915061027e8261023f565b602082019050919050565b5f6020820190508181035f8301526102a081610267565b9050919050565b7f496e76616c696420746f6b656e422061646472657373000000000000000000005f82015250565b5f6102db60168361022f565b91506102e6826102a7565b602082019050919050565b5f6020820190508181035f830152610308816102cf565b9050919050565b61135e8061031c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c8063602172671161008a578063a694fc3a11610064578063a694fc3a14610223578063b6b55f251461023f578063cfe69a051461025b578063ff50abdc1461028b576100cd565b806360217267146101b9578063817b1cd2146101e957806394b918de14610207576100cd565b80630fc63d10146100d15780632a973daf146100ef5780632e1a7d4d1461011f5780633a02a42d1461013b5780633aecd0e31461016b5780635f64b55b1461019b575b5f5ffd5b6100d96102a9565b6040516100e69190610d2b565b60405180910390f35b61010960048036038101906101049190610d72565b6102cd565b6040516101169190610db5565b60405180910390f35b61013960048036038101906101349190610df8565b610313565b005b61015560048036038101906101509190610d72565b61056c565b6040516101629190610db5565b60405180910390f35b61018560048036038101906101809190610d72565b6105b2565b6040516101929190610db5565b60405180910390f35b6101a3610632565b6040516101b09190610d2b565b60405180910390f35b6101d360048036038101906101ce9190610d72565b610657565b6040516101e09190610db5565b60405180910390f35b6101f161066c565b6040516101fe9190610db5565b60405180910390f35b610221600480360381019061021c9190610df8565b610672565b005b61023d60048036038101906102389190610df8565b61091b565b005b61025960048036038101906102549190610df8565b610af6565b005b61027560048036038101906102709190610d72565b610cd1565b6040516102829190610db5565b60405180910390f35b610293610ce6565b6040516102a09190610db5565b60405180910390f35b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8111610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c90610e7d565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156103d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cc90610ee5565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104219190610f30565b925050819055508060045f8282546104399190610f30565b9250508190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161049c929190610f63565b6020604051808303815f875af11580156104b8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104dc9190610fbf565b61051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290611034565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516105619190610db5565b60405180910390a250565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ec9190610d2b565b602060405180830381865afa158015610607573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062b9190611066565b9050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f915090505481565b60045481565b5f81116106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab906110db565b60405180910390fd5b8060055410156106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090611143565b60405180910390fd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161075693929190611161565b6020604051808303815f875af1158015610772573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107969190610fbf565b6107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc906111e0565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610831929190610f63565b6020604051808303815f875af115801561084d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108719190610fbf565b6108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a790611034565b60405180910390fd5b8060055f8282546108c19190610f30565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f3a9a9f34f5831e9c8ecb66ab3aa308b2ff31eaca434615f6c9cadc656a9af71c82836040516109109291906111fe565b60405180910390a250565b5f811161095d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109549061126f565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109bb93929190611161565b6020604051808303815f875af11580156109d7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109fb9190610fbf565b610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3190611034565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a86919061128d565b925050819055508060045f828254610a9e919061128d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d82604051610aeb9190610db5565b60405180910390a250565b5f8111610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f9061130a565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610b9693929190611161565b6020604051808303815f875af1158015610bb2573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bd69190610fbf565b610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90611034565b60405180910390fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c61919061128d565b925050819055508060055f828254610c79919061128d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c482604051610cc69190610db5565b60405180910390a250565b6003602052805f5260405f205f915090505481565b60055481565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d1582610cec565b9050919050565b610d2581610d0b565b82525050565b5f602082019050610d3e5f830184610d1c565b92915050565b5f5ffd5b610d5181610d0b565b8114610d5b575f5ffd5b50565b5f81359050610d6c81610d48565b92915050565b5f60208284031215610d8757610d86610d44565b5b5f610d9484828501610d5e565b91505092915050565b5f819050919050565b610daf81610d9d565b82525050565b5f602082019050610dc85f830184610da6565b92915050565b610dd781610d9d565b8114610de1575f5ffd5b50565b5f81359050610df281610dce565b92915050565b5f60208284031215610e0d57610e0c610d44565b5b5f610e1a84828501610de4565b91505092915050565b5f82825260208201905092915050565b7f4d757374207769746864726177206d6f7265207468616e2030000000000000005f82015250565b5f610e67601983610e23565b9150610e7282610e33565b602082019050919050565b5f6020820190508181035f830152610e9481610e5b565b9050919050565b7f496e73756666696369656e74207374616b65642062616c616e636500000000005f82015250565b5f610ecf601b83610e23565b9150610eda82610e9b565b602082019050919050565b5f6020820190508181035f830152610efc81610ec3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f3a82610d9d565b9150610f4583610d9d565b9250828203905081811115610f5d57610f5c610f03565b5b92915050565b5f604082019050610f765f830185610d1c565b610f836020830184610da6565b9392505050565b5f8115159050919050565b610f9e81610f8a565b8114610fa8575f5ffd5b50565b5f81519050610fb981610f95565b92915050565b5f60208284031215610fd457610fd3610d44565b5b5f610fe184828501610fab565b91505092915050565b7f546f6b656e42207472616e73666572206661696c6564000000000000000000005f82015250565b5f61101e601683610e23565b915061102982610fea565b602082019050919050565b5f6020820190508181035f83015261104b81611012565b9050919050565b5f8151905061106081610dce565b92915050565b5f6020828403121561107b5761107a610d44565b5b5f61108884828501611052565b91505092915050565b7f4d7573742073776170206d6f7265207468616e203000000000000000000000005f82015250565b5f6110c5601583610e23565b91506110d082611091565b602082019050919050565b5f6020820190508181035f8301526110f2816110b9565b9050919050565b7f496e73756666696369656e7420746f6b656e42206c69717569646974790000005f82015250565b5f61112d601d83610e23565b9150611138826110f9565b602082019050919050565b5f6020820190508181035f83015261115a81611121565b9050919050565b5f6060820190506111745f830186610d1c565b6111816020830185610d1c565b61118e6040830184610da6565b949350505050565b7f546f6b656e41207472616e73666572206661696c6564000000000000000000005f82015250565b5f6111ca601683610e23565b91506111d582611196565b602082019050919050565b5f6020820190508181035f8301526111f7816111be565b9050919050565b5f6040820190506112115f830185610da6565b61121e6020830184610da6565b9392505050565b7f4d757374207374616b65206d6f7265207468616e2030000000000000000000005f82015250565b5f611259601683610e23565b915061126482611225565b602082019050919050565b5f6020820190508181035f8301526112868161124d565b9050919050565b5f61129782610d9d565b91506112a283610d9d565b92508282019050808211156112ba576112b9610f03565b5b92915050565b7f4d757374206465706f736974206d6f7265207468616e203000000000000000005f82015250565b5f6112f4601883610e23565b91506112ff826112c0565b602082019050919050565b5f6020820190508181035f830152611321816112e8565b905091905056fea26469706673582212206090dd2d841aaaf3095baf2986ec13c0e82627e8ecc82bc6986f9ad9d257561a64736f6c634300081e0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x167A CODESIZE SUB DUP1 PUSH2 0x167A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1F1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96 SWAP1 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104 SWAP1 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x30F JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C0 DUP3 PUSH2 0x197 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0 DUP2 PUSH2 0x1B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EB DUP2 PUSH2 0x1C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x207 JUMPI PUSH2 0x206 PUSH2 0x193 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x214 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x225 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E41206164647265737300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x273 PUSH1 0x16 DUP4 PUSH2 0x22F JUMP JUMPDEST SWAP2 POP PUSH2 0x27E DUP3 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A0 DUP2 PUSH2 0x267 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E42206164647265737300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DB PUSH1 0x16 DUP4 PUSH2 0x22F JUMP JUMPDEST SWAP2 POP PUSH2 0x2E6 DUP3 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x308 DUP2 PUSH2 0x2CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135E DUP1 PUSH2 0x31C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60217267 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xCFE69A05 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xFF50ABDC EQ PUSH2 0x28B JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x60217267 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x94B918DE EQ PUSH2 0x207 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2A973DAF EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x3A02A42D EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x3AECD0E3 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x19B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CC SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x439 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP3 SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 SLOAD LT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x772 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x796 SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP3 SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x871 SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A7 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8C1 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3A9A9F34F5831E9C8ECB66AB3AA308B2FF31EACA434615F6C9CADC656A9AF71C DUP3 DUP4 PUSH1 0x40 MLOAD PUSH2 0x910 SWAP3 SWAP2 SWAP1 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP1 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FB SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA31 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2F SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0C SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC61 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCC6 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD15 DUP3 PUSH2 0xCEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD25 DUP2 PUSH2 0xD0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3E PUSH0 DUP4 ADD DUP5 PUSH2 0xD1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD51 DUP2 PUSH2 0xD0B JUMP JUMPDEST DUP2 EQ PUSH2 0xD5B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6C DUP2 PUSH2 0xD48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD87 JUMPI PUSH2 0xD86 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD94 DUP5 DUP3 DUP6 ADD PUSH2 0xD5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDAF DUP2 PUSH2 0xD9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC8 PUSH0 DUP4 ADD DUP5 PUSH2 0xDA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDD7 DUP2 PUSH2 0xD9D JUMP JUMPDEST DUP2 EQ PUSH2 0xDE1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDF2 DUP2 PUSH2 0xDCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE1A DUP5 DUP3 DUP6 ADD PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D757374207769746864726177206D6F7265207468616E203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE67 PUSH1 0x19 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0xE72 DUP3 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE94 DUP2 PUSH2 0xE5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xECF PUSH1 0x1B DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDA DUP3 PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEFC DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF3A DUP3 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xF45 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF5D JUMPI PUSH2 0xF5C PUSH2 0xF03 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF76 PUSH0 DUP4 ADD DUP6 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xF83 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9E DUP2 PUSH2 0xF8A JUMP JUMPDEST DUP2 EQ PUSH2 0xFA8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFB9 DUP2 PUSH2 0xF95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFE1 DUP5 DUP3 DUP6 ADD PUSH2 0xFAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E42207472616E73666572206661696C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x101E PUSH1 0x16 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1029 DUP3 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x104B DUP2 PUSH2 0x1012 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1060 DUP2 PUSH2 0xDCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH2 0x107A PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1088 DUP5 DUP3 DUP6 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073776170206D6F7265207468616E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10C5 PUSH1 0x15 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D0 DUP3 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F2 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E42206C6971756964697479000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x112D PUSH1 0x1D DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1138 DUP3 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x115A DUP2 PUSH2 0x1121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1174 PUSH0 DUP4 ADD DUP7 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x1181 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x118E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDA6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E41207472616E73666572206661696C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11CA PUSH1 0x16 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D5 DUP3 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11F7 DUP2 PUSH2 0x11BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1211 PUSH0 DUP4 ADD DUP6 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x121E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D757374207374616B65206D6F7265207468616E203000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1259 PUSH1 0x16 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1264 DUP3 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1286 DUP2 PUSH2 0x124D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1297 DUP3 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0x12A2 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12BA JUMPI PUSH2 0x12B9 PUSH2 0xF03 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D757374206465706F736974206D6F7265207468616E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F4 PUSH1 0x18 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FF DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1321 DUP2 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x90 0xDD 0x2D DUP5 BYTE 0xAA RETURN MULMOD JUMPDEST 0xAF 0x29 DUP7 EOFCREATE 0x13 0xC0 0xE8 0x26 0x27 0xE8 EOFCREATE 0xC8 0x2B 0xC6 SWAP9 PUSH16 0x9AD9D257561A64736F6C634300081E00 CALLER ",
		"sourceMap": "445:4779:0:-:0;;;1397:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1480:1;1461:21;;:7;:21;;;1453:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1546:1;1527:21;;:7;:21;;;1519:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1594:7;1585:6;;:16;;;;;;;;;;;;;;;;;;1620:7;1611:6;;:16;;;;;;;;;;;;;;;;;;1397:237;;445:4779;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:172::-;1673:24;1669:1;1661:6;1657:14;1650:48;1533:172;:::o;1711:366::-;1853:3;1874:67;1938:2;1933:3;1874:67;:::i;:::-;1867:74;;1950:93;2039:3;1950:93;:::i;:::-;2068:2;2063:3;2059:12;2052:19;;1711:366;;;:::o;2083:419::-;2249:4;2287:2;2276:9;2272:18;2264:26;;2336:9;2330:4;2326:20;2322:1;2311:9;2307:17;2300:47;2364:131;2490:4;2364:131;:::i;:::-;2356:139;;2083:419;;;:::o;2508:172::-;2648:24;2644:1;2636:6;2632:14;2625:48;2508:172;:::o;2686:366::-;2828:3;2849:67;2913:2;2908:3;2849:67;:::i;:::-;2842:74;;2925:93;3014:3;2925:93;:::i;:::-;3043:2;3038:3;3034:12;3027:19;;2686:366;;;:::o;3058:419::-;3224:4;3262:2;3251:9;3247:18;3239:26;;3311:9;3305:4;3301:20;3297:1;3286:9;3282:17;3275:47;3339:131;3465:4;3339:131;:::i;:::-;3331:139;;3058:419;;;:::o;445:4779:0:-;;;;;;;"
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "deposit",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_tokenA",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_tokenB",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "user",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "Deposited",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "stake",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "user",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "Staked",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "swap",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "user",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amountIn",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amountOut",
					"type": "uint256"
				}
			],
			"name": "Swapped",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "withdraw",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "user",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "Withdrawn",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "depositedBalance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "user",
					"type": "address"
				}
			],
			"name": "getDepositedBalance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "user",
					"type": "address"
				}
			],
			"name": "getStakedBalance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "token",
					"type": "address"
				}
			],
			"name": "getTokenBalance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "stakedBalance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "tokenA",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "tokenB",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalDeposited",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalStaked",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 32,
				"contract": "stake.sol:SimpleStaking",
				"label": "tokenA",
				"offset": 0,
				"slot": "0",
				"type": "t_address"
			},
			{
				"astId": 34,
				"contract": "stake.sol:SimpleStaking",
				"label": "tokenB",
				"offset": 0,
				"slot": "1",
				"type": "t_address"
			},
			{
				"astId": 38,
				"contract": "stake.sol:SimpleStaking",
				"label": "stakedBalance",
				"offset": 0,
				"slot": "2",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 42,
				"contract": "stake.sol:SimpleStaking",
				"label": "depositedBalance",
				"offset": 0,
				"slot": "3",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 44,
				"contract": "stake.sol:SimpleStaking",
				"label": "totalStaked",
				"offset": 0,
				"slot": "4",
				"type": "t_uint256"
			},
			{
				"astId": 46,
				"contract": "stake.sol:SimpleStaking",
				"label": "totalDeposited",
				"offset": 0,
				"slot": "5",
				"type": "t_uint256"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var _tokenA = /* var of type address here */ ;\nvar _tokenB = /* var of type address here */ ;\nvar simplestakingContract = new web3.eth.Contract([{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getDepositedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]);\nvar simplestaking = simplestakingContract.deploy({\n     data: '0x608060405234801561000f575f5ffd5b5060405161167a38038061167a833981810160405281019061003191906101f1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361009f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009690610289565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610104906102f1565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061030f565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101c082610197565b9050919050565b6101d0816101b6565b81146101da575f5ffd5b50565b5f815190506101eb816101c7565b92915050565b5f5f6040838503121561020757610206610193565b5b5f610214858286016101dd565b9250506020610225858286016101dd565b9150509250929050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e412061646472657373000000000000000000005f82015250565b5f61027360168361022f565b915061027e8261023f565b602082019050919050565b5f6020820190508181035f8301526102a081610267565b9050919050565b7f496e76616c696420746f6b656e422061646472657373000000000000000000005f82015250565b5f6102db60168361022f565b91506102e6826102a7565b602082019050919050565b5f6020820190508181035f830152610308816102cf565b9050919050565b61135e8061031c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c8063602172671161008a578063a694fc3a11610064578063a694fc3a14610223578063b6b55f251461023f578063cfe69a051461025b578063ff50abdc1461028b576100cd565b806360217267146101b9578063817b1cd2146101e957806394b918de14610207576100cd565b80630fc63d10146100d15780632a973daf146100ef5780632e1a7d4d1461011f5780633a02a42d1461013b5780633aecd0e31461016b5780635f64b55b1461019b575b5f5ffd5b6100d96102a9565b6040516100e69190610d2b565b60405180910390f35b61010960048036038101906101049190610d72565b6102cd565b6040516101169190610db5565b60405180910390f35b61013960048036038101906101349190610df8565b610313565b005b61015560048036038101906101509190610d72565b61056c565b6040516101629190610db5565b60405180910390f35b61018560048036038101906101809190610d72565b6105b2565b6040516101929190610db5565b60405180910390f35b6101a3610632565b6040516101b09190610d2b565b60405180910390f35b6101d360048036038101906101ce9190610d72565b610657565b6040516101e09190610db5565b60405180910390f35b6101f161066c565b6040516101fe9190610db5565b60405180910390f35b610221600480360381019061021c9190610df8565b610672565b005b61023d60048036038101906102389190610df8565b61091b565b005b61025960048036038101906102549190610df8565b610af6565b005b61027560048036038101906102709190610d72565b610cd1565b6040516102829190610db5565b60405180910390f35b610293610ce6565b6040516102a09190610db5565b60405180910390f35b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8111610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c90610e7d565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156103d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cc90610ee5565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104219190610f30565b925050819055508060045f8282546104399190610f30565b9250508190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161049c929190610f63565b6020604051808303815f875af11580156104b8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104dc9190610fbf565b61051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290611034565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516105619190610db5565b60405180910390a250565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ec9190610d2b565b602060405180830381865afa158015610607573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062b9190611066565b9050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f915090505481565b60045481565b5f81116106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab906110db565b60405180910390fd5b8060055410156106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090611143565b60405180910390fd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161075693929190611161565b6020604051808303815f875af1158015610772573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107969190610fbf565b6107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc906111e0565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610831929190610f63565b6020604051808303815f875af115801561084d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108719190610fbf565b6108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a790611034565b60405180910390fd5b8060055f8282546108c19190610f30565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f3a9a9f34f5831e9c8ecb66ab3aa308b2ff31eaca434615f6c9cadc656a9af71c82836040516109109291906111fe565b60405180910390a250565b5f811161095d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109549061126f565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109bb93929190611161565b6020604051808303815f875af11580156109d7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109fb9190610fbf565b610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3190611034565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a86919061128d565b925050819055508060045f828254610a9e919061128d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d82604051610aeb9190610db5565b60405180910390a250565b5f8111610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f9061130a565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610b9693929190611161565b6020604051808303815f875af1158015610bb2573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bd69190610fbf565b610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90611034565b60405180910390fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c61919061128d565b925050819055508060055f828254610c79919061128d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c482604051610cc69190610db5565b60405180910390a250565b6003602052805f5260405f205f915090505481565b60055481565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d1582610cec565b9050919050565b610d2581610d0b565b82525050565b5f602082019050610d3e5f830184610d1c565b92915050565b5f5ffd5b610d5181610d0b565b8114610d5b575f5ffd5b50565b5f81359050610d6c81610d48565b92915050565b5f60208284031215610d8757610d86610d44565b5b5f610d9484828501610d5e565b91505092915050565b5f819050919050565b610daf81610d9d565b82525050565b5f602082019050610dc85f830184610da6565b92915050565b610dd781610d9d565b8114610de1575f5ffd5b50565b5f81359050610df281610dce565b92915050565b5f60208284031215610e0d57610e0c610d44565b5b5f610e1a84828501610de4565b91505092915050565b5f82825260208201905092915050565b7f4d757374207769746864726177206d6f7265207468616e2030000000000000005f82015250565b5f610e67601983610e23565b9150610e7282610e33565b602082019050919050565b5f6020820190508181035f830152610e9481610e5b565b9050919050565b7f496e73756666696369656e74207374616b65642062616c616e636500000000005f82015250565b5f610ecf601b83610e23565b9150610eda82610e9b565b602082019050919050565b5f6020820190508181035f830152610efc81610ec3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f3a82610d9d565b9150610f4583610d9d565b9250828203905081811115610f5d57610f5c610f03565b5b92915050565b5f604082019050610f765f830185610d1c565b610f836020830184610da6565b9392505050565b5f8115159050919050565b610f9e81610f8a565b8114610fa8575f5ffd5b50565b5f81519050610fb981610f95565b92915050565b5f60208284031215610fd457610fd3610d44565b5b5f610fe184828501610fab565b91505092915050565b7f546f6b656e42207472616e73666572206661696c6564000000000000000000005f82015250565b5f61101e601683610e23565b915061102982610fea565b602082019050919050565b5f6020820190508181035f83015261104b81611012565b9050919050565b5f8151905061106081610dce565b92915050565b5f6020828403121561107b5761107a610d44565b5b5f61108884828501611052565b91505092915050565b7f4d7573742073776170206d6f7265207468616e203000000000000000000000005f82015250565b5f6110c5601583610e23565b91506110d082611091565b602082019050919050565b5f6020820190508181035f8301526110f2816110b9565b9050919050565b7f496e73756666696369656e7420746f6b656e42206c69717569646974790000005f82015250565b5f61112d601d83610e23565b9150611138826110f9565b602082019050919050565b5f6020820190508181035f83015261115a81611121565b9050919050565b5f6060820190506111745f830186610d1c565b6111816020830185610d1c565b61118e6040830184610da6565b949350505050565b7f546f6b656e41207472616e73666572206661696c6564000000000000000000005f82015250565b5f6111ca601683610e23565b91506111d582611196565b602082019050919050565b5f6020820190508181035f8301526111f7816111be565b9050919050565b5f6040820190506112115f830185610da6565b61121e6020830184610da6565b9392505050565b7f4d757374207374616b65206d6f7265207468616e2030000000000000000000005f82015250565b5f611259601683610e23565b915061126482611225565b602082019050919050565b5f6020820190508181035f8301526112868161124d565b9050919050565b5f61129782610d9d565b91506112a283610d9d565b92508282019050808211156112ba576112b9610f03565b5b92915050565b7f4d757374206465706f736974206d6f7265207468616e203000000000000000005f82015250565b5f6112f4601883610e23565b91506112ff826112c0565b602082019050919050565b5f6020820190508181035f830152611321816112e8565b905091905056fea26469706673582212206090dd2d841aaaf3095baf2986ec13c0e82627e8ecc82bc6986f9ad9d257561a64736f6c634300081e0033', \n     arguments: [\n          _tokenA,\n          _tokenB,\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"60217267": "stakedBalance(address)",
		"b6b55f25": "deposit(uint256)",
		"cfe69a05": "depositedBalance(address)",
		"2a973daf": "getDepositedBalance(address)",
		"3a02a42d": "getStakedBalance(address)",
		"3aecd0e3": "getTokenBalance(address)",
		"a694fc3a": "stake(uint256)",
		"94b918de": "swap(uint256)",
		"0fc63d10": "tokenA()",
		"5f64b55b": "tokenB()",
		"ff50abdc": "totalDeposited()",
		"817b1cd2": "totalStaked()",
		"2e1a7d4d": "withdraw(uint256)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "991600",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"deposit(uint256)": "infinite",
			"depositedBalance(address)": "2868",
			"getDepositedBalance(address)": "2852",
			"getStakedBalance(address)": "2896",
			"getTokenBalance(address)": "infinite",
			"stake(uint256)": "infinite",
			"stakedBalance(address)": "2825",
			"swap(uint256)": "infinite",
			"tokenA()": "2508",
			"tokenB()": "2619",
			"totalDeposited()": "2513",
			"totalStaked()": "2470",
			"withdraw(uint256)": "infinite"
		}
	},
	"devdoc": {
		"details": "A contract with tokenB staking and tokenA/tokenB swap functionality",
		"kind": "dev",
		"methods": {
			"constructor": {
				"details": "Constructor to set token addresses",
				"params": {
					"_tokenA": "Address of token A",
					"_tokenB": "Address of token B"
				}
			},
			"deposit(uint256)": {
				"details": "Deposit tokenB into the contract to provide swap liquidity",
				"params": {
					"amount": "The amount of tokenB to deposit"
				}
			},
			"getDepositedBalance(address)": {
				"details": "Get the deposited balance of a user",
				"params": {
					"user": "The address to check"
				},
				"returns": {
					"_0": "The deposited tokenB balance"
				}
			},
			"getStakedBalance(address)": {
				"details": "Get the staked balance of a user",
				"params": {
					"user": "The address to check"
				},
				"returns": {
					"_0": "The staked tokenB balance"
				}
			},
			"getTokenBalance(address)": {
				"details": "Get the contract's token balance",
				"params": {
					"token": "The token address to check"
				},
				"returns": {
					"_0": "The token balance"
				}
			},
			"stake(uint256)": {
				"details": "Stake tokenB into the contract",
				"params": {
					"amount": "The amount of tokenB to stake"
				}
			},
			"swap(uint256)": {
				"details": "Swap tokenA for tokenB (1:1 ratio) User sends tokenA and receives tokenB from deposited liquidity",
				"params": {
					"amount": "The amount of tokens to swap"
				}
			},
			"withdraw(uint256)": {
				"details": "Withdraw staked tokenB",
				"params": {
					"amount": "The amount to withdraw"
				}
			}
		},
		"title": "SimpleStaking",
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@deposit_156": {
				"entryPoint": 2806,
				"id": 156,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@depositedBalance_42": {
				"entryPoint": 3281,
				"id": 42,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@getDepositedBalance_342": {
				"entryPoint": 717,
				"id": 342,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@getStakedBalance_329": {
				"entryPoint": 1388,
				"id": 329,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@getTokenBalance_361": {
				"entryPoint": 1458,
				"id": 361,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@stake_203": {
				"entryPoint": 2331,
				"id": 203,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@stakedBalance_38": {
				"entryPoint": 1623,
				"id": 38,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@swap_316": {
				"entryPoint": 1650,
				"id": 316,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@tokenA_32": {
				"entryPoint": 681,
				"id": 32,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@tokenB_34": {
				"entryPoint": 1586,
				"id": 34,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@totalDeposited_46": {
				"entryPoint": 3302,
				"id": 46,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@totalStaked_44": {
				"entryPoint": 1644,
				"id": 44,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@withdraw_256": {
				"entryPoint": 787,
				"id": 256,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"abi_decode_t_address": {
				"entryPoint": 3422,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_bool_fromMemory": {
				"entryPoint": 4011,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_uint256": {
				"entryPoint": 3556,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_uint256_fromMemory": {
				"entryPoint": 4178,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 3442,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_bool_fromMemory": {
				"entryPoint": 4031,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256": {
				"entryPoint": 3576,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256_fromMemory": {
				"entryPoint": 4198,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_address_to_t_address_fromStack": {
				"entryPoint": 3356,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_stringliteral_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4385,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4685,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 3779,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4114,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4281,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4542,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 3675,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4840,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 3494,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": 3371,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": 4449,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": 3939,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4419,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4719,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 3813,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4148,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4315,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4576,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 3709,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4874,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 3509,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": 4606,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 3619,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 4749,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_sub_t_uint256": {
				"entryPoint": 3888,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 3339,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_bool": {
				"entryPoint": 3978,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 3308,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 3485,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 3843,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 3396,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"store_literal_in_memory_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce": {
				"entryPoint": 4345,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd": {
				"entryPoint": 4645,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2": {
				"entryPoint": 3739,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db": {
				"entryPoint": 4074,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0": {
				"entryPoint": 4241,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3": {
				"entryPoint": 4502,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e": {
				"entryPoint": 3635,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032": {
				"entryPoint": 4800,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_address": {
				"entryPoint": 3400,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_bool": {
				"entryPoint": 3989,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_uint256": {
				"entryPoint": 3534,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:13484:1",
					"nodeType": "YulBlock",
					"src": "0:13484:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "52:81:1",
								"nodeType": "YulBlock",
								"src": "52:81:1",
								"statements": [
									{
										"nativeSrc": "62:65:1",
										"nodeType": "YulAssignment",
										"src": "62:65:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "77:5:1",
													"nodeType": "YulIdentifier",
													"src": "77:5:1"
												},
												{
													"kind": "number",
													"nativeSrc": "84:42:1",
													"nodeType": "YulLiteral",
													"src": "84:42:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "73:3:1",
												"nodeType": "YulIdentifier",
												"src": "73:3:1"
											},
											"nativeSrc": "73:54:1",
											"nodeType": "YulFunctionCall",
											"src": "73:54:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "62:7:1",
												"nodeType": "YulIdentifier",
												"src": "62:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "7:126:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "34:5:1",
									"nodeType": "YulTypedName",
									"src": "34:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "44:7:1",
									"nodeType": "YulTypedName",
									"src": "44:7:1",
									"type": ""
								}
							],
							"src": "7:126:1"
						},
						{
							"body": {
								"nativeSrc": "184:51:1",
								"nodeType": "YulBlock",
								"src": "184:51:1",
								"statements": [
									{
										"nativeSrc": "194:35:1",
										"nodeType": "YulAssignment",
										"src": "194:35:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "223:5:1",
													"nodeType": "YulIdentifier",
													"src": "223:5:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "205:17:1",
												"nodeType": "YulIdentifier",
												"src": "205:17:1"
											},
											"nativeSrc": "205:24:1",
											"nodeType": "YulFunctionCall",
											"src": "205:24:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "194:7:1",
												"nodeType": "YulIdentifier",
												"src": "194:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "139:96:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "166:5:1",
									"nodeType": "YulTypedName",
									"src": "166:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "176:7:1",
									"nodeType": "YulTypedName",
									"src": "176:7:1",
									"type": ""
								}
							],
							"src": "139:96:1"
						},
						{
							"body": {
								"nativeSrc": "306:53:1",
								"nodeType": "YulBlock",
								"src": "306:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "323:3:1",
													"nodeType": "YulIdentifier",
													"src": "323:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "346:5:1",
															"nodeType": "YulIdentifier",
															"src": "346:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_address",
														"nativeSrc": "328:17:1",
														"nodeType": "YulIdentifier",
														"src": "328:17:1"
													},
													"nativeSrc": "328:24:1",
													"nodeType": "YulFunctionCall",
													"src": "328:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "316:6:1",
												"nodeType": "YulIdentifier",
												"src": "316:6:1"
											},
											"nativeSrc": "316:37:1",
											"nodeType": "YulFunctionCall",
											"src": "316:37:1"
										},
										"nativeSrc": "316:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "316:37:1"
									}
								]
							},
							"name": "abi_encode_t_address_to_t_address_fromStack",
							"nativeSrc": "241:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "294:5:1",
									"nodeType": "YulTypedName",
									"src": "294:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "301:3:1",
									"nodeType": "YulTypedName",
									"src": "301:3:1",
									"type": ""
								}
							],
							"src": "241:118:1"
						},
						{
							"body": {
								"nativeSrc": "463:124:1",
								"nodeType": "YulBlock",
								"src": "463:124:1",
								"statements": [
									{
										"nativeSrc": "473:26:1",
										"nodeType": "YulAssignment",
										"src": "473:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "485:9:1",
													"nodeType": "YulIdentifier",
													"src": "485:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "496:2:1",
													"nodeType": "YulLiteral",
													"src": "496:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "481:3:1",
												"nodeType": "YulIdentifier",
												"src": "481:3:1"
											},
											"nativeSrc": "481:18:1",
											"nodeType": "YulFunctionCall",
											"src": "481:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "473:4:1",
												"nodeType": "YulIdentifier",
												"src": "473:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "553:6:1",
													"nodeType": "YulIdentifier",
													"src": "553:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "566:9:1",
															"nodeType": "YulIdentifier",
															"src": "566:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "577:1:1",
															"nodeType": "YulLiteral",
															"src": "577:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "562:3:1",
														"nodeType": "YulIdentifier",
														"src": "562:3:1"
													},
													"nativeSrc": "562:17:1",
													"nodeType": "YulFunctionCall",
													"src": "562:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "509:43:1",
												"nodeType": "YulIdentifier",
												"src": "509:43:1"
											},
											"nativeSrc": "509:71:1",
											"nodeType": "YulFunctionCall",
											"src": "509:71:1"
										},
										"nativeSrc": "509:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "509:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "365:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "435:9:1",
									"nodeType": "YulTypedName",
									"src": "435:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "447:6:1",
									"nodeType": "YulTypedName",
									"src": "447:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "458:4:1",
									"nodeType": "YulTypedName",
									"src": "458:4:1",
									"type": ""
								}
							],
							"src": "365:222:1"
						},
						{
							"body": {
								"nativeSrc": "633:35:1",
								"nodeType": "YulBlock",
								"src": "633:35:1",
								"statements": [
									{
										"nativeSrc": "643:19:1",
										"nodeType": "YulAssignment",
										"src": "643:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "659:2:1",
													"nodeType": "YulLiteral",
													"src": "659:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "653:5:1",
												"nodeType": "YulIdentifier",
												"src": "653:5:1"
											},
											"nativeSrc": "653:9:1",
											"nodeType": "YulFunctionCall",
											"src": "653:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "643:6:1",
												"nodeType": "YulIdentifier",
												"src": "643:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "593:75:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "626:6:1",
									"nodeType": "YulTypedName",
									"src": "626:6:1",
									"type": ""
								}
							],
							"src": "593:75:1"
						},
						{
							"body": {
								"nativeSrc": "763:28:1",
								"nodeType": "YulBlock",
								"src": "763:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "780:1:1",
													"nodeType": "YulLiteral",
													"src": "780:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "783:1:1",
													"nodeType": "YulLiteral",
													"src": "783:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "773:6:1",
												"nodeType": "YulIdentifier",
												"src": "773:6:1"
											},
											"nativeSrc": "773:12:1",
											"nodeType": "YulFunctionCall",
											"src": "773:12:1"
										},
										"nativeSrc": "773:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "773:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "674:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "674:117:1"
						},
						{
							"body": {
								"nativeSrc": "886:28:1",
								"nodeType": "YulBlock",
								"src": "886:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "903:1:1",
													"nodeType": "YulLiteral",
													"src": "903:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "906:1:1",
													"nodeType": "YulLiteral",
													"src": "906:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "896:6:1",
												"nodeType": "YulIdentifier",
												"src": "896:6:1"
											},
											"nativeSrc": "896:12:1",
											"nodeType": "YulFunctionCall",
											"src": "896:12:1"
										},
										"nativeSrc": "896:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "896:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "797:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "797:117:1"
						},
						{
							"body": {
								"nativeSrc": "963:79:1",
								"nodeType": "YulBlock",
								"src": "963:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "1020:16:1",
											"nodeType": "YulBlock",
											"src": "1020:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1029:1:1",
																"nodeType": "YulLiteral",
																"src": "1029:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1032:1:1",
																"nodeType": "YulLiteral",
																"src": "1032:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1022:6:1",
															"nodeType": "YulIdentifier",
															"src": "1022:6:1"
														},
														"nativeSrc": "1022:12:1",
														"nodeType": "YulFunctionCall",
														"src": "1022:12:1"
													},
													"nativeSrc": "1022:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "1022:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "986:5:1",
															"nodeType": "YulIdentifier",
															"src": "986:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1011:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nativeSrc": "993:17:1",
																"nodeType": "YulIdentifier",
																"src": "993:17:1"
															},
															"nativeSrc": "993:24:1",
															"nodeType": "YulFunctionCall",
															"src": "993:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "983:2:1",
														"nodeType": "YulIdentifier",
														"src": "983:2:1"
													},
													"nativeSrc": "983:35:1",
													"nodeType": "YulFunctionCall",
													"src": "983:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "976:6:1",
												"nodeType": "YulIdentifier",
												"src": "976:6:1"
											},
											"nativeSrc": "976:43:1",
											"nodeType": "YulFunctionCall",
											"src": "976:43:1"
										},
										"nativeSrc": "973:63:1",
										"nodeType": "YulIf",
										"src": "973:63:1"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nativeSrc": "920:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "956:5:1",
									"nodeType": "YulTypedName",
									"src": "956:5:1",
									"type": ""
								}
							],
							"src": "920:122:1"
						},
						{
							"body": {
								"nativeSrc": "1100:87:1",
								"nodeType": "YulBlock",
								"src": "1100:87:1",
								"statements": [
									{
										"nativeSrc": "1110:29:1",
										"nodeType": "YulAssignment",
										"src": "1110:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "1132:6:1",
													"nodeType": "YulIdentifier",
													"src": "1132:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "1119:12:1",
												"nodeType": "YulIdentifier",
												"src": "1119:12:1"
											},
											"nativeSrc": "1119:20:1",
											"nodeType": "YulFunctionCall",
											"src": "1119:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1110:5:1",
												"nodeType": "YulIdentifier",
												"src": "1110:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1175:5:1",
													"nodeType": "YulIdentifier",
													"src": "1175:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nativeSrc": "1148:26:1",
												"nodeType": "YulIdentifier",
												"src": "1148:26:1"
											},
											"nativeSrc": "1148:33:1",
											"nodeType": "YulFunctionCall",
											"src": "1148:33:1"
										},
										"nativeSrc": "1148:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "1148:33:1"
									}
								]
							},
							"name": "abi_decode_t_address",
							"nativeSrc": "1048:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "1078:6:1",
									"nodeType": "YulTypedName",
									"src": "1078:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "1086:3:1",
									"nodeType": "YulTypedName",
									"src": "1086:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "1094:5:1",
									"nodeType": "YulTypedName",
									"src": "1094:5:1",
									"type": ""
								}
							],
							"src": "1048:139:1"
						},
						{
							"body": {
								"nativeSrc": "1259:263:1",
								"nodeType": "YulBlock",
								"src": "1259:263:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "1305:83:1",
											"nodeType": "YulBlock",
											"src": "1305:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "1307:77:1",
															"nodeType": "YulIdentifier",
															"src": "1307:77:1"
														},
														"nativeSrc": "1307:79:1",
														"nodeType": "YulFunctionCall",
														"src": "1307:79:1"
													},
													"nativeSrc": "1307:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "1307:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "1280:7:1",
															"nodeType": "YulIdentifier",
															"src": "1280:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "1289:9:1",
															"nodeType": "YulIdentifier",
															"src": "1289:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1276:3:1",
														"nodeType": "YulIdentifier",
														"src": "1276:3:1"
													},
													"nativeSrc": "1276:23:1",
													"nodeType": "YulFunctionCall",
													"src": "1276:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1301:2:1",
													"nodeType": "YulLiteral",
													"src": "1301:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "1272:3:1",
												"nodeType": "YulIdentifier",
												"src": "1272:3:1"
											},
											"nativeSrc": "1272:32:1",
											"nodeType": "YulFunctionCall",
											"src": "1272:32:1"
										},
										"nativeSrc": "1269:119:1",
										"nodeType": "YulIf",
										"src": "1269:119:1"
									},
									{
										"nativeSrc": "1398:117:1",
										"nodeType": "YulBlock",
										"src": "1398:117:1",
										"statements": [
											{
												"nativeSrc": "1413:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1413:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1427:1:1",
													"nodeType": "YulLiteral",
													"src": "1427:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1417:6:1",
														"nodeType": "YulTypedName",
														"src": "1417:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1442:63:1",
												"nodeType": "YulAssignment",
												"src": "1442:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1477:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1488:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1473:3:1",
																"nodeType": "YulIdentifier",
																"src": "1473:3:1"
															},
															"nativeSrc": "1473:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1473:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1497:7:1",
															"nodeType": "YulIdentifier",
															"src": "1497:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "1452:20:1",
														"nodeType": "YulIdentifier",
														"src": "1452:20:1"
													},
													"nativeSrc": "1452:53:1",
													"nodeType": "YulFunctionCall",
													"src": "1452:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "1442:6:1",
														"nodeType": "YulIdentifier",
														"src": "1442:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nativeSrc": "1193:329:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1229:9:1",
									"nodeType": "YulTypedName",
									"src": "1229:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "1240:7:1",
									"nodeType": "YulTypedName",
									"src": "1240:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "1252:6:1",
									"nodeType": "YulTypedName",
									"src": "1252:6:1",
									"type": ""
								}
							],
							"src": "1193:329:1"
						},
						{
							"body": {
								"nativeSrc": "1573:32:1",
								"nodeType": "YulBlock",
								"src": "1573:32:1",
								"statements": [
									{
										"nativeSrc": "1583:16:1",
										"nodeType": "YulAssignment",
										"src": "1583:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "1594:5:1",
											"nodeType": "YulIdentifier",
											"src": "1594:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1583:7:1",
												"nodeType": "YulIdentifier",
												"src": "1583:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "1528:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1555:5:1",
									"nodeType": "YulTypedName",
									"src": "1555:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1565:7:1",
									"nodeType": "YulTypedName",
									"src": "1565:7:1",
									"type": ""
								}
							],
							"src": "1528:77:1"
						},
						{
							"body": {
								"nativeSrc": "1676:53:1",
								"nodeType": "YulBlock",
								"src": "1676:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1693:3:1",
													"nodeType": "YulIdentifier",
													"src": "1693:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1716:5:1",
															"nodeType": "YulIdentifier",
															"src": "1716:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "1698:17:1",
														"nodeType": "YulIdentifier",
														"src": "1698:17:1"
													},
													"nativeSrc": "1698:24:1",
													"nodeType": "YulFunctionCall",
													"src": "1698:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1686:6:1",
												"nodeType": "YulIdentifier",
												"src": "1686:6:1"
											},
											"nativeSrc": "1686:37:1",
											"nodeType": "YulFunctionCall",
											"src": "1686:37:1"
										},
										"nativeSrc": "1686:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "1686:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "1611:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1664:5:1",
									"nodeType": "YulTypedName",
									"src": "1664:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "1671:3:1",
									"nodeType": "YulTypedName",
									"src": "1671:3:1",
									"type": ""
								}
							],
							"src": "1611:118:1"
						},
						{
							"body": {
								"nativeSrc": "1833:124:1",
								"nodeType": "YulBlock",
								"src": "1833:124:1",
								"statements": [
									{
										"nativeSrc": "1843:26:1",
										"nodeType": "YulAssignment",
										"src": "1843:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1855:9:1",
													"nodeType": "YulIdentifier",
													"src": "1855:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1866:2:1",
													"nodeType": "YulLiteral",
													"src": "1866:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1851:3:1",
												"nodeType": "YulIdentifier",
												"src": "1851:3:1"
											},
											"nativeSrc": "1851:18:1",
											"nodeType": "YulFunctionCall",
											"src": "1851:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1843:4:1",
												"nodeType": "YulIdentifier",
												"src": "1843:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "1923:6:1",
													"nodeType": "YulIdentifier",
													"src": "1923:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1936:9:1",
															"nodeType": "YulIdentifier",
															"src": "1936:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1947:1:1",
															"nodeType": "YulLiteral",
															"src": "1947:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1932:3:1",
														"nodeType": "YulIdentifier",
														"src": "1932:3:1"
													},
													"nativeSrc": "1932:17:1",
													"nodeType": "YulFunctionCall",
													"src": "1932:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1879:43:1",
												"nodeType": "YulIdentifier",
												"src": "1879:43:1"
											},
											"nativeSrc": "1879:71:1",
											"nodeType": "YulFunctionCall",
											"src": "1879:71:1"
										},
										"nativeSrc": "1879:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "1879:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "1735:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1805:9:1",
									"nodeType": "YulTypedName",
									"src": "1805:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1817:6:1",
									"nodeType": "YulTypedName",
									"src": "1817:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1828:4:1",
									"nodeType": "YulTypedName",
									"src": "1828:4:1",
									"type": ""
								}
							],
							"src": "1735:222:1"
						},
						{
							"body": {
								"nativeSrc": "2006:79:1",
								"nodeType": "YulBlock",
								"src": "2006:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "2063:16:1",
											"nodeType": "YulBlock",
											"src": "2063:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "2072:1:1",
																"nodeType": "YulLiteral",
																"src": "2072:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "2075:1:1",
																"nodeType": "YulLiteral",
																"src": "2075:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "2065:6:1",
															"nodeType": "YulIdentifier",
															"src": "2065:6:1"
														},
														"nativeSrc": "2065:12:1",
														"nodeType": "YulFunctionCall",
														"src": "2065:12:1"
													},
													"nativeSrc": "2065:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "2065:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "2029:5:1",
															"nodeType": "YulIdentifier",
															"src": "2029:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "2054:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2054:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "2036:17:1",
																"nodeType": "YulIdentifier",
																"src": "2036:17:1"
															},
															"nativeSrc": "2036:24:1",
															"nodeType": "YulFunctionCall",
															"src": "2036:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "2026:2:1",
														"nodeType": "YulIdentifier",
														"src": "2026:2:1"
													},
													"nativeSrc": "2026:35:1",
													"nodeType": "YulFunctionCall",
													"src": "2026:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "2019:6:1",
												"nodeType": "YulIdentifier",
												"src": "2019:6:1"
											},
											"nativeSrc": "2019:43:1",
											"nodeType": "YulFunctionCall",
											"src": "2019:43:1"
										},
										"nativeSrc": "2016:63:1",
										"nodeType": "YulIf",
										"src": "2016:63:1"
									}
								]
							},
							"name": "validator_revert_t_uint256",
							"nativeSrc": "1963:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1999:5:1",
									"nodeType": "YulTypedName",
									"src": "1999:5:1",
									"type": ""
								}
							],
							"src": "1963:122:1"
						},
						{
							"body": {
								"nativeSrc": "2143:87:1",
								"nodeType": "YulBlock",
								"src": "2143:87:1",
								"statements": [
									{
										"nativeSrc": "2153:29:1",
										"nodeType": "YulAssignment",
										"src": "2153:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "2175:6:1",
													"nodeType": "YulIdentifier",
													"src": "2175:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2162:12:1",
												"nodeType": "YulIdentifier",
												"src": "2162:12:1"
											},
											"nativeSrc": "2162:20:1",
											"nodeType": "YulFunctionCall",
											"src": "2162:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "2153:5:1",
												"nodeType": "YulIdentifier",
												"src": "2153:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "2218:5:1",
													"nodeType": "YulIdentifier",
													"src": "2218:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2191:26:1",
												"nodeType": "YulIdentifier",
												"src": "2191:26:1"
											},
											"nativeSrc": "2191:33:1",
											"nodeType": "YulFunctionCall",
											"src": "2191:33:1"
										},
										"nativeSrc": "2191:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "2191:33:1"
									}
								]
							},
							"name": "abi_decode_t_uint256",
							"nativeSrc": "2091:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "2121:6:1",
									"nodeType": "YulTypedName",
									"src": "2121:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "2129:3:1",
									"nodeType": "YulTypedName",
									"src": "2129:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "2137:5:1",
									"nodeType": "YulTypedName",
									"src": "2137:5:1",
									"type": ""
								}
							],
							"src": "2091:139:1"
						},
						{
							"body": {
								"nativeSrc": "2302:263:1",
								"nodeType": "YulBlock",
								"src": "2302:263:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "2348:83:1",
											"nodeType": "YulBlock",
											"src": "2348:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "2350:77:1",
															"nodeType": "YulIdentifier",
															"src": "2350:77:1"
														},
														"nativeSrc": "2350:79:1",
														"nodeType": "YulFunctionCall",
														"src": "2350:79:1"
													},
													"nativeSrc": "2350:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "2350:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "2323:7:1",
															"nodeType": "YulIdentifier",
															"src": "2323:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "2332:9:1",
															"nodeType": "YulIdentifier",
															"src": "2332:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2319:3:1",
														"nodeType": "YulIdentifier",
														"src": "2319:3:1"
													},
													"nativeSrc": "2319:23:1",
													"nodeType": "YulFunctionCall",
													"src": "2319:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2344:2:1",
													"nodeType": "YulLiteral",
													"src": "2344:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "2315:3:1",
												"nodeType": "YulIdentifier",
												"src": "2315:3:1"
											},
											"nativeSrc": "2315:32:1",
											"nodeType": "YulFunctionCall",
											"src": "2315:32:1"
										},
										"nativeSrc": "2312:119:1",
										"nodeType": "YulIf",
										"src": "2312:119:1"
									},
									{
										"nativeSrc": "2441:117:1",
										"nodeType": "YulBlock",
										"src": "2441:117:1",
										"statements": [
											{
												"nativeSrc": "2456:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "2456:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "2470:1:1",
													"nodeType": "YulLiteral",
													"src": "2470:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "2460:6:1",
														"nodeType": "YulTypedName",
														"src": "2460:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "2485:63:1",
												"nodeType": "YulAssignment",
												"src": "2485:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "2520:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2520:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "2531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2531:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2516:3:1",
																"nodeType": "YulIdentifier",
																"src": "2516:3:1"
															},
															"nativeSrc": "2516:22:1",
															"nodeType": "YulFunctionCall",
															"src": "2516:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "2540:7:1",
															"nodeType": "YulIdentifier",
															"src": "2540:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "2495:20:1",
														"nodeType": "YulIdentifier",
														"src": "2495:20:1"
													},
													"nativeSrc": "2495:53:1",
													"nodeType": "YulFunctionCall",
													"src": "2495:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "2485:6:1",
														"nodeType": "YulIdentifier",
														"src": "2485:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256",
							"nativeSrc": "2236:329:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2272:9:1",
									"nodeType": "YulTypedName",
									"src": "2272:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "2283:7:1",
									"nodeType": "YulTypedName",
									"src": "2283:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "2295:6:1",
									"nodeType": "YulTypedName",
									"src": "2295:6:1",
									"type": ""
								}
							],
							"src": "2236:329:1"
						},
						{
							"body": {
								"nativeSrc": "2667:73:1",
								"nodeType": "YulBlock",
								"src": "2667:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2684:3:1",
													"nodeType": "YulIdentifier",
													"src": "2684:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "2689:6:1",
													"nodeType": "YulIdentifier",
													"src": "2689:6:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2677:6:1",
												"nodeType": "YulIdentifier",
												"src": "2677:6:1"
											},
											"nativeSrc": "2677:19:1",
											"nodeType": "YulFunctionCall",
											"src": "2677:19:1"
										},
										"nativeSrc": "2677:19:1",
										"nodeType": "YulExpressionStatement",
										"src": "2677:19:1"
									},
									{
										"nativeSrc": "2705:29:1",
										"nodeType": "YulAssignment",
										"src": "2705:29:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2724:3:1",
													"nodeType": "YulIdentifier",
													"src": "2724:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2729:4:1",
													"nodeType": "YulLiteral",
													"src": "2729:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2720:3:1",
												"nodeType": "YulIdentifier",
												"src": "2720:3:1"
											},
											"nativeSrc": "2720:14:1",
											"nodeType": "YulFunctionCall",
											"src": "2720:14:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "2705:11:1",
												"nodeType": "YulIdentifier",
												"src": "2705:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "2571:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "2639:3:1",
									"nodeType": "YulTypedName",
									"src": "2639:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "2644:6:1",
									"nodeType": "YulTypedName",
									"src": "2644:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "2655:11:1",
									"nodeType": "YulTypedName",
									"src": "2655:11:1",
									"type": ""
								}
							],
							"src": "2571:169:1"
						},
						{
							"body": {
								"nativeSrc": "2852:69:1",
								"nodeType": "YulBlock",
								"src": "2852:69:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "2874:6:1",
															"nodeType": "YulIdentifier",
															"src": "2874:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "2882:1:1",
															"nodeType": "YulLiteral",
															"src": "2882:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2870:3:1",
														"nodeType": "YulIdentifier",
														"src": "2870:3:1"
													},
													"nativeSrc": "2870:14:1",
													"nodeType": "YulFunctionCall",
													"src": "2870:14:1"
												},
												{
													"hexValue": "4d757374207769746864726177206d6f7265207468616e2030",
													"kind": "string",
													"nativeSrc": "2886:27:1",
													"nodeType": "YulLiteral",
													"src": "2886:27:1",
													"type": "",
													"value": "Must withdraw more than 0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2863:6:1",
												"nodeType": "YulIdentifier",
												"src": "2863:6:1"
											},
											"nativeSrc": "2863:51:1",
											"nodeType": "YulFunctionCall",
											"src": "2863:51:1"
										},
										"nativeSrc": "2863:51:1",
										"nodeType": "YulExpressionStatement",
										"src": "2863:51:1"
									}
								]
							},
							"name": "store_literal_in_memory_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e",
							"nativeSrc": "2746:175:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "2844:6:1",
									"nodeType": "YulTypedName",
									"src": "2844:6:1",
									"type": ""
								}
							],
							"src": "2746:175:1"
						},
						{
							"body": {
								"nativeSrc": "3073:220:1",
								"nodeType": "YulBlock",
								"src": "3073:220:1",
								"statements": [
									{
										"nativeSrc": "3083:74:1",
										"nodeType": "YulAssignment",
										"src": "3083:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3149:3:1",
													"nodeType": "YulIdentifier",
													"src": "3149:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3154:2:1",
													"nodeType": "YulLiteral",
													"src": "3154:2:1",
													"type": "",
													"value": "25"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3090:58:1",
												"nodeType": "YulIdentifier",
												"src": "3090:58:1"
											},
											"nativeSrc": "3090:67:1",
											"nodeType": "YulFunctionCall",
											"src": "3090:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "3083:3:1",
												"nodeType": "YulIdentifier",
												"src": "3083:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3255:3:1",
													"nodeType": "YulIdentifier",
													"src": "3255:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e",
												"nativeSrc": "3166:88:1",
												"nodeType": "YulIdentifier",
												"src": "3166:88:1"
											},
											"nativeSrc": "3166:93:1",
											"nodeType": "YulFunctionCall",
											"src": "3166:93:1"
										},
										"nativeSrc": "3166:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "3166:93:1"
									},
									{
										"nativeSrc": "3268:19:1",
										"nodeType": "YulAssignment",
										"src": "3268:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3279:3:1",
													"nodeType": "YulIdentifier",
													"src": "3279:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3284:2:1",
													"nodeType": "YulLiteral",
													"src": "3284:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3275:3:1",
												"nodeType": "YulIdentifier",
												"src": "3275:3:1"
											},
											"nativeSrc": "3275:12:1",
											"nodeType": "YulFunctionCall",
											"src": "3275:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "3268:3:1",
												"nodeType": "YulIdentifier",
												"src": "3268:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "2927:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "3061:3:1",
									"nodeType": "YulTypedName",
									"src": "3061:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "3069:3:1",
									"nodeType": "YulTypedName",
									"src": "3069:3:1",
									"type": ""
								}
							],
							"src": "2927:366:1"
						},
						{
							"body": {
								"nativeSrc": "3470:248:1",
								"nodeType": "YulBlock",
								"src": "3470:248:1",
								"statements": [
									{
										"nativeSrc": "3480:26:1",
										"nodeType": "YulAssignment",
										"src": "3480:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3492:9:1",
													"nodeType": "YulIdentifier",
													"src": "3492:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3503:2:1",
													"nodeType": "YulLiteral",
													"src": "3503:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3488:3:1",
												"nodeType": "YulIdentifier",
												"src": "3488:3:1"
											},
											"nativeSrc": "3488:18:1",
											"nodeType": "YulFunctionCall",
											"src": "3488:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3480:4:1",
												"nodeType": "YulIdentifier",
												"src": "3480:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3527:9:1",
															"nodeType": "YulIdentifier",
															"src": "3527:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3538:1:1",
															"nodeType": "YulLiteral",
															"src": "3538:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3523:3:1",
														"nodeType": "YulIdentifier",
														"src": "3523:3:1"
													},
													"nativeSrc": "3523:17:1",
													"nodeType": "YulFunctionCall",
													"src": "3523:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "3546:4:1",
															"nodeType": "YulIdentifier",
															"src": "3546:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "3552:9:1",
															"nodeType": "YulIdentifier",
															"src": "3552:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3542:3:1",
														"nodeType": "YulIdentifier",
														"src": "3542:3:1"
													},
													"nativeSrc": "3542:20:1",
													"nodeType": "YulFunctionCall",
													"src": "3542:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3516:6:1",
												"nodeType": "YulIdentifier",
												"src": "3516:6:1"
											},
											"nativeSrc": "3516:47:1",
											"nodeType": "YulFunctionCall",
											"src": "3516:47:1"
										},
										"nativeSrc": "3516:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "3516:47:1"
									},
									{
										"nativeSrc": "3572:139:1",
										"nodeType": "YulAssignment",
										"src": "3572:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "3706:4:1",
													"nodeType": "YulIdentifier",
													"src": "3706:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3580:124:1",
												"nodeType": "YulIdentifier",
												"src": "3580:124:1"
											},
											"nativeSrc": "3580:131:1",
											"nodeType": "YulFunctionCall",
											"src": "3580:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3572:4:1",
												"nodeType": "YulIdentifier",
												"src": "3572:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "3299:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3450:9:1",
									"nodeType": "YulTypedName",
									"src": "3450:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3465:4:1",
									"nodeType": "YulTypedName",
									"src": "3465:4:1",
									"type": ""
								}
							],
							"src": "3299:419:1"
						},
						{
							"body": {
								"nativeSrc": "3830:71:1",
								"nodeType": "YulBlock",
								"src": "3830:71:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "3852:6:1",
															"nodeType": "YulIdentifier",
															"src": "3852:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3860:1:1",
															"nodeType": "YulLiteral",
															"src": "3860:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3848:3:1",
														"nodeType": "YulIdentifier",
														"src": "3848:3:1"
													},
													"nativeSrc": "3848:14:1",
													"nodeType": "YulFunctionCall",
													"src": "3848:14:1"
												},
												{
													"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
													"kind": "string",
													"nativeSrc": "3864:29:1",
													"nodeType": "YulLiteral",
													"src": "3864:29:1",
													"type": "",
													"value": "Insufficient staked balance"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3841:6:1",
												"nodeType": "YulIdentifier",
												"src": "3841:6:1"
											},
											"nativeSrc": "3841:53:1",
											"nodeType": "YulFunctionCall",
											"src": "3841:53:1"
										},
										"nativeSrc": "3841:53:1",
										"nodeType": "YulExpressionStatement",
										"src": "3841:53:1"
									}
								]
							},
							"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
							"nativeSrc": "3724:177:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "3822:6:1",
									"nodeType": "YulTypedName",
									"src": "3822:6:1",
									"type": ""
								}
							],
							"src": "3724:177:1"
						},
						{
							"body": {
								"nativeSrc": "4053:220:1",
								"nodeType": "YulBlock",
								"src": "4053:220:1",
								"statements": [
									{
										"nativeSrc": "4063:74:1",
										"nodeType": "YulAssignment",
										"src": "4063:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "4129:3:1",
													"nodeType": "YulIdentifier",
													"src": "4129:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4134:2:1",
													"nodeType": "YulLiteral",
													"src": "4134:2:1",
													"type": "",
													"value": "27"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4070:58:1",
												"nodeType": "YulIdentifier",
												"src": "4070:58:1"
											},
											"nativeSrc": "4070:67:1",
											"nodeType": "YulFunctionCall",
											"src": "4070:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "4063:3:1",
												"nodeType": "YulIdentifier",
												"src": "4063:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "4235:3:1",
													"nodeType": "YulIdentifier",
													"src": "4235:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
												"nativeSrc": "4146:88:1",
												"nodeType": "YulIdentifier",
												"src": "4146:88:1"
											},
											"nativeSrc": "4146:93:1",
											"nodeType": "YulFunctionCall",
											"src": "4146:93:1"
										},
										"nativeSrc": "4146:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "4146:93:1"
									},
									{
										"nativeSrc": "4248:19:1",
										"nodeType": "YulAssignment",
										"src": "4248:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "4259:3:1",
													"nodeType": "YulIdentifier",
													"src": "4259:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4264:2:1",
													"nodeType": "YulLiteral",
													"src": "4264:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "4255:3:1",
												"nodeType": "YulIdentifier",
												"src": "4255:3:1"
											},
											"nativeSrc": "4255:12:1",
											"nodeType": "YulFunctionCall",
											"src": "4255:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "4248:3:1",
												"nodeType": "YulIdentifier",
												"src": "4248:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "3907:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "4041:3:1",
									"nodeType": "YulTypedName",
									"src": "4041:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "4049:3:1",
									"nodeType": "YulTypedName",
									"src": "4049:3:1",
									"type": ""
								}
							],
							"src": "3907:366:1"
						},
						{
							"body": {
								"nativeSrc": "4450:248:1",
								"nodeType": "YulBlock",
								"src": "4450:248:1",
								"statements": [
									{
										"nativeSrc": "4460:26:1",
										"nodeType": "YulAssignment",
										"src": "4460:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4472:9:1",
													"nodeType": "YulIdentifier",
													"src": "4472:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4483:2:1",
													"nodeType": "YulLiteral",
													"src": "4483:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "4468:3:1",
												"nodeType": "YulIdentifier",
												"src": "4468:3:1"
											},
											"nativeSrc": "4468:18:1",
											"nodeType": "YulFunctionCall",
											"src": "4468:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4460:4:1",
												"nodeType": "YulIdentifier",
												"src": "4460:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "4507:9:1",
															"nodeType": "YulIdentifier",
															"src": "4507:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "4518:1:1",
															"nodeType": "YulLiteral",
															"src": "4518:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "4503:3:1",
														"nodeType": "YulIdentifier",
														"src": "4503:3:1"
													},
													"nativeSrc": "4503:17:1",
													"nodeType": "YulFunctionCall",
													"src": "4503:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "4526:4:1",
															"nodeType": "YulIdentifier",
															"src": "4526:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "4532:9:1",
															"nodeType": "YulIdentifier",
															"src": "4532:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "4522:3:1",
														"nodeType": "YulIdentifier",
														"src": "4522:3:1"
													},
													"nativeSrc": "4522:20:1",
													"nodeType": "YulFunctionCall",
													"src": "4522:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4496:6:1",
												"nodeType": "YulIdentifier",
												"src": "4496:6:1"
											},
											"nativeSrc": "4496:47:1",
											"nodeType": "YulFunctionCall",
											"src": "4496:47:1"
										},
										"nativeSrc": "4496:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "4496:47:1"
									},
									{
										"nativeSrc": "4552:139:1",
										"nodeType": "YulAssignment",
										"src": "4552:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "4686:4:1",
													"nodeType": "YulIdentifier",
													"src": "4686:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4560:124:1",
												"nodeType": "YulIdentifier",
												"src": "4560:124:1"
											},
											"nativeSrc": "4560:131:1",
											"nodeType": "YulFunctionCall",
											"src": "4560:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4552:4:1",
												"nodeType": "YulIdentifier",
												"src": "4552:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "4279:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4430:9:1",
									"nodeType": "YulTypedName",
									"src": "4430:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "4445:4:1",
									"nodeType": "YulTypedName",
									"src": "4445:4:1",
									"type": ""
								}
							],
							"src": "4279:419:1"
						},
						{
							"body": {
								"nativeSrc": "4732:152:1",
								"nodeType": "YulBlock",
								"src": "4732:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "4749:1:1",
													"nodeType": "YulLiteral",
													"src": "4749:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "4752:77:1",
													"nodeType": "YulLiteral",
													"src": "4752:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4742:6:1",
												"nodeType": "YulIdentifier",
												"src": "4742:6:1"
											},
											"nativeSrc": "4742:88:1",
											"nodeType": "YulFunctionCall",
											"src": "4742:88:1"
										},
										"nativeSrc": "4742:88:1",
										"nodeType": "YulExpressionStatement",
										"src": "4742:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "4846:1:1",
													"nodeType": "YulLiteral",
													"src": "4846:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "4849:4:1",
													"nodeType": "YulLiteral",
													"src": "4849:4:1",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4839:6:1",
												"nodeType": "YulIdentifier",
												"src": "4839:6:1"
											},
											"nativeSrc": "4839:15:1",
											"nodeType": "YulFunctionCall",
											"src": "4839:15:1"
										},
										"nativeSrc": "4839:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "4839:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "4870:1:1",
													"nodeType": "YulLiteral",
													"src": "4870:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "4873:4:1",
													"nodeType": "YulLiteral",
													"src": "4873:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "4863:6:1",
												"nodeType": "YulIdentifier",
												"src": "4863:6:1"
											},
											"nativeSrc": "4863:15:1",
											"nodeType": "YulFunctionCall",
											"src": "4863:15:1"
										},
										"nativeSrc": "4863:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "4863:15:1"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "4704:180:1",
							"nodeType": "YulFunctionDefinition",
							"src": "4704:180:1"
						},
						{
							"body": {
								"nativeSrc": "4935:149:1",
								"nodeType": "YulBlock",
								"src": "4935:149:1",
								"statements": [
									{
										"nativeSrc": "4945:25:1",
										"nodeType": "YulAssignment",
										"src": "4945:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "4968:1:1",
													"nodeType": "YulIdentifier",
													"src": "4968:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "4950:17:1",
												"nodeType": "YulIdentifier",
												"src": "4950:17:1"
											},
											"nativeSrc": "4950:20:1",
											"nodeType": "YulFunctionCall",
											"src": "4950:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "4945:1:1",
												"nodeType": "YulIdentifier",
												"src": "4945:1:1"
											}
										]
									},
									{
										"nativeSrc": "4979:25:1",
										"nodeType": "YulAssignment",
										"src": "4979:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "5002:1:1",
													"nodeType": "YulIdentifier",
													"src": "5002:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "4984:17:1",
												"nodeType": "YulIdentifier",
												"src": "4984:17:1"
											},
											"nativeSrc": "4984:20:1",
											"nodeType": "YulFunctionCall",
											"src": "4984:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "4979:1:1",
												"nodeType": "YulIdentifier",
												"src": "4979:1:1"
											}
										]
									},
									{
										"nativeSrc": "5013:17:1",
										"nodeType": "YulAssignment",
										"src": "5013:17:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "5025:1:1",
													"nodeType": "YulIdentifier",
													"src": "5025:1:1"
												},
												{
													"name": "y",
													"nativeSrc": "5028:1:1",
													"nodeType": "YulIdentifier",
													"src": "5028:1:1"
												}
											],
											"functionName": {
												"name": "sub",
												"nativeSrc": "5021:3:1",
												"nodeType": "YulIdentifier",
												"src": "5021:3:1"
											},
											"nativeSrc": "5021:9:1",
											"nodeType": "YulFunctionCall",
											"src": "5021:9:1"
										},
										"variableNames": [
											{
												"name": "diff",
												"nativeSrc": "5013:4:1",
												"nodeType": "YulIdentifier",
												"src": "5013:4:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "5055:22:1",
											"nodeType": "YulBlock",
											"src": "5055:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "5057:16:1",
															"nodeType": "YulIdentifier",
															"src": "5057:16:1"
														},
														"nativeSrc": "5057:18:1",
														"nodeType": "YulFunctionCall",
														"src": "5057:18:1"
													},
													"nativeSrc": "5057:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "5057:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "diff",
													"nativeSrc": "5046:4:1",
													"nodeType": "YulIdentifier",
													"src": "5046:4:1"
												},
												{
													"name": "x",
													"nativeSrc": "5052:1:1",
													"nodeType": "YulIdentifier",
													"src": "5052:1:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "5043:2:1",
												"nodeType": "YulIdentifier",
												"src": "5043:2:1"
											},
											"nativeSrc": "5043:11:1",
											"nodeType": "YulFunctionCall",
											"src": "5043:11:1"
										},
										"nativeSrc": "5040:37:1",
										"nodeType": "YulIf",
										"src": "5040:37:1"
									}
								]
							},
							"name": "checked_sub_t_uint256",
							"nativeSrc": "4890:194:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "4921:1:1",
									"nodeType": "YulTypedName",
									"src": "4921:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "4924:1:1",
									"nodeType": "YulTypedName",
									"src": "4924:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "diff",
									"nativeSrc": "4930:4:1",
									"nodeType": "YulTypedName",
									"src": "4930:4:1",
									"type": ""
								}
							],
							"src": "4890:194:1"
						},
						{
							"body": {
								"nativeSrc": "5216:206:1",
								"nodeType": "YulBlock",
								"src": "5216:206:1",
								"statements": [
									{
										"nativeSrc": "5226:26:1",
										"nodeType": "YulAssignment",
										"src": "5226:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "5238:9:1",
													"nodeType": "YulIdentifier",
													"src": "5238:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "5249:2:1",
													"nodeType": "YulLiteral",
													"src": "5249:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "5234:3:1",
												"nodeType": "YulIdentifier",
												"src": "5234:3:1"
											},
											"nativeSrc": "5234:18:1",
											"nodeType": "YulFunctionCall",
											"src": "5234:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "5226:4:1",
												"nodeType": "YulIdentifier",
												"src": "5226:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "5306:6:1",
													"nodeType": "YulIdentifier",
													"src": "5306:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "5319:9:1",
															"nodeType": "YulIdentifier",
															"src": "5319:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "5330:1:1",
															"nodeType": "YulLiteral",
															"src": "5330:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5315:3:1",
														"nodeType": "YulIdentifier",
														"src": "5315:3:1"
													},
													"nativeSrc": "5315:17:1",
													"nodeType": "YulFunctionCall",
													"src": "5315:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5262:43:1",
												"nodeType": "YulIdentifier",
												"src": "5262:43:1"
											},
											"nativeSrc": "5262:71:1",
											"nodeType": "YulFunctionCall",
											"src": "5262:71:1"
										},
										"nativeSrc": "5262:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "5262:71:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "5387:6:1",
													"nodeType": "YulIdentifier",
													"src": "5387:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "5400:9:1",
															"nodeType": "YulIdentifier",
															"src": "5400:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "5411:2:1",
															"nodeType": "YulLiteral",
															"src": "5411:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5396:3:1",
														"nodeType": "YulIdentifier",
														"src": "5396:3:1"
													},
													"nativeSrc": "5396:18:1",
													"nodeType": "YulFunctionCall",
													"src": "5396:18:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5343:43:1",
												"nodeType": "YulIdentifier",
												"src": "5343:43:1"
											},
											"nativeSrc": "5343:72:1",
											"nodeType": "YulFunctionCall",
											"src": "5343:72:1"
										},
										"nativeSrc": "5343:72:1",
										"nodeType": "YulExpressionStatement",
										"src": "5343:72:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
							"nativeSrc": "5090:332:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5180:9:1",
									"nodeType": "YulTypedName",
									"src": "5180:9:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "5192:6:1",
									"nodeType": "YulTypedName",
									"src": "5192:6:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "5200:6:1",
									"nodeType": "YulTypedName",
									"src": "5200:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "5211:4:1",
									"nodeType": "YulTypedName",
									"src": "5211:4:1",
									"type": ""
								}
							],
							"src": "5090:332:1"
						},
						{
							"body": {
								"nativeSrc": "5470:48:1",
								"nodeType": "YulBlock",
								"src": "5470:48:1",
								"statements": [
									{
										"nativeSrc": "5480:32:1",
										"nodeType": "YulAssignment",
										"src": "5480:32:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "5505:5:1",
															"nodeType": "YulIdentifier",
															"src": "5505:5:1"
														}
													],
													"functionName": {
														"name": "iszero",
														"nativeSrc": "5498:6:1",
														"nodeType": "YulIdentifier",
														"src": "5498:6:1"
													},
													"nativeSrc": "5498:13:1",
													"nodeType": "YulFunctionCall",
													"src": "5498:13:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "5491:6:1",
												"nodeType": "YulIdentifier",
												"src": "5491:6:1"
											},
											"nativeSrc": "5491:21:1",
											"nodeType": "YulFunctionCall",
											"src": "5491:21:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "5480:7:1",
												"nodeType": "YulIdentifier",
												"src": "5480:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_bool",
							"nativeSrc": "5428:90:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5452:5:1",
									"nodeType": "YulTypedName",
									"src": "5452:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "5462:7:1",
									"nodeType": "YulTypedName",
									"src": "5462:7:1",
									"type": ""
								}
							],
							"src": "5428:90:1"
						},
						{
							"body": {
								"nativeSrc": "5564:76:1",
								"nodeType": "YulBlock",
								"src": "5564:76:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "5618:16:1",
											"nodeType": "YulBlock",
											"src": "5618:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "5627:1:1",
																"nodeType": "YulLiteral",
																"src": "5627:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "5630:1:1",
																"nodeType": "YulLiteral",
																"src": "5630:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "5620:6:1",
															"nodeType": "YulIdentifier",
															"src": "5620:6:1"
														},
														"nativeSrc": "5620:12:1",
														"nodeType": "YulFunctionCall",
														"src": "5620:12:1"
													},
													"nativeSrc": "5620:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "5620:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "5587:5:1",
															"nodeType": "YulIdentifier",
															"src": "5587:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "5609:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5609:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_bool",
																"nativeSrc": "5594:14:1",
																"nodeType": "YulIdentifier",
																"src": "5594:14:1"
															},
															"nativeSrc": "5594:21:1",
															"nodeType": "YulFunctionCall",
															"src": "5594:21:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "5584:2:1",
														"nodeType": "YulIdentifier",
														"src": "5584:2:1"
													},
													"nativeSrc": "5584:32:1",
													"nodeType": "YulFunctionCall",
													"src": "5584:32:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "5577:6:1",
												"nodeType": "YulIdentifier",
												"src": "5577:6:1"
											},
											"nativeSrc": "5577:40:1",
											"nodeType": "YulFunctionCall",
											"src": "5577:40:1"
										},
										"nativeSrc": "5574:60:1",
										"nodeType": "YulIf",
										"src": "5574:60:1"
									}
								]
							},
							"name": "validator_revert_t_bool",
							"nativeSrc": "5524:116:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5557:5:1",
									"nodeType": "YulTypedName",
									"src": "5557:5:1",
									"type": ""
								}
							],
							"src": "5524:116:1"
						},
						{
							"body": {
								"nativeSrc": "5706:77:1",
								"nodeType": "YulBlock",
								"src": "5706:77:1",
								"statements": [
									{
										"nativeSrc": "5716:22:1",
										"nodeType": "YulAssignment",
										"src": "5716:22:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "5731:6:1",
													"nodeType": "YulIdentifier",
													"src": "5731:6:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "5725:5:1",
												"nodeType": "YulIdentifier",
												"src": "5725:5:1"
											},
											"nativeSrc": "5725:13:1",
											"nodeType": "YulFunctionCall",
											"src": "5725:13:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "5716:5:1",
												"nodeType": "YulIdentifier",
												"src": "5716:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "5771:5:1",
													"nodeType": "YulIdentifier",
													"src": "5771:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_bool",
												"nativeSrc": "5747:23:1",
												"nodeType": "YulIdentifier",
												"src": "5747:23:1"
											},
											"nativeSrc": "5747:30:1",
											"nodeType": "YulFunctionCall",
											"src": "5747:30:1"
										},
										"nativeSrc": "5747:30:1",
										"nodeType": "YulExpressionStatement",
										"src": "5747:30:1"
									}
								]
							},
							"name": "abi_decode_t_bool_fromMemory",
							"nativeSrc": "5646:137:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "5684:6:1",
									"nodeType": "YulTypedName",
									"src": "5684:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "5692:3:1",
									"nodeType": "YulTypedName",
									"src": "5692:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "5700:5:1",
									"nodeType": "YulTypedName",
									"src": "5700:5:1",
									"type": ""
								}
							],
							"src": "5646:137:1"
						},
						{
							"body": {
								"nativeSrc": "5863:271:1",
								"nodeType": "YulBlock",
								"src": "5863:271:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "5909:83:1",
											"nodeType": "YulBlock",
											"src": "5909:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "5911:77:1",
															"nodeType": "YulIdentifier",
															"src": "5911:77:1"
														},
														"nativeSrc": "5911:79:1",
														"nodeType": "YulFunctionCall",
														"src": "5911:79:1"
													},
													"nativeSrc": "5911:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "5911:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "5884:7:1",
															"nodeType": "YulIdentifier",
															"src": "5884:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "5893:9:1",
															"nodeType": "YulIdentifier",
															"src": "5893:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "5880:3:1",
														"nodeType": "YulIdentifier",
														"src": "5880:3:1"
													},
													"nativeSrc": "5880:23:1",
													"nodeType": "YulFunctionCall",
													"src": "5880:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "5905:2:1",
													"nodeType": "YulLiteral",
													"src": "5905:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "5876:3:1",
												"nodeType": "YulIdentifier",
												"src": "5876:3:1"
											},
											"nativeSrc": "5876:32:1",
											"nodeType": "YulFunctionCall",
											"src": "5876:32:1"
										},
										"nativeSrc": "5873:119:1",
										"nodeType": "YulIf",
										"src": "5873:119:1"
									},
									{
										"nativeSrc": "6002:125:1",
										"nodeType": "YulBlock",
										"src": "6002:125:1",
										"statements": [
											{
												"nativeSrc": "6017:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "6017:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "6031:1:1",
													"nodeType": "YulLiteral",
													"src": "6031:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "6021:6:1",
														"nodeType": "YulTypedName",
														"src": "6021:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "6046:71:1",
												"nodeType": "YulAssignment",
												"src": "6046:71:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "6089:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "6089:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "6100:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6100:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "6085:3:1",
																"nodeType": "YulIdentifier",
																"src": "6085:3:1"
															},
															"nativeSrc": "6085:22:1",
															"nodeType": "YulFunctionCall",
															"src": "6085:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "6109:7:1",
															"nodeType": "YulIdentifier",
															"src": "6109:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_bool_fromMemory",
														"nativeSrc": "6056:28:1",
														"nodeType": "YulIdentifier",
														"src": "6056:28:1"
													},
													"nativeSrc": "6056:61:1",
													"nodeType": "YulFunctionCall",
													"src": "6056:61:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "6046:6:1",
														"nodeType": "YulIdentifier",
														"src": "6046:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_bool_fromMemory",
							"nativeSrc": "5789:345:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5833:9:1",
									"nodeType": "YulTypedName",
									"src": "5833:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "5844:7:1",
									"nodeType": "YulTypedName",
									"src": "5844:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "5856:6:1",
									"nodeType": "YulTypedName",
									"src": "5856:6:1",
									"type": ""
								}
							],
							"src": "5789:345:1"
						},
						{
							"body": {
								"nativeSrc": "6246:66:1",
								"nodeType": "YulBlock",
								"src": "6246:66:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "6268:6:1",
															"nodeType": "YulIdentifier",
															"src": "6268:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "6276:1:1",
															"nodeType": "YulLiteral",
															"src": "6276:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "6264:3:1",
														"nodeType": "YulIdentifier",
														"src": "6264:3:1"
													},
													"nativeSrc": "6264:14:1",
													"nodeType": "YulFunctionCall",
													"src": "6264:14:1"
												},
												{
													"hexValue": "546f6b656e42207472616e73666572206661696c6564",
													"kind": "string",
													"nativeSrc": "6280:24:1",
													"nodeType": "YulLiteral",
													"src": "6280:24:1",
													"type": "",
													"value": "TokenB transfer failed"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6257:6:1",
												"nodeType": "YulIdentifier",
												"src": "6257:6:1"
											},
											"nativeSrc": "6257:48:1",
											"nodeType": "YulFunctionCall",
											"src": "6257:48:1"
										},
										"nativeSrc": "6257:48:1",
										"nodeType": "YulExpressionStatement",
										"src": "6257:48:1"
									}
								]
							},
							"name": "store_literal_in_memory_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db",
							"nativeSrc": "6140:172:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "6238:6:1",
									"nodeType": "YulTypedName",
									"src": "6238:6:1",
									"type": ""
								}
							],
							"src": "6140:172:1"
						},
						{
							"body": {
								"nativeSrc": "6464:220:1",
								"nodeType": "YulBlock",
								"src": "6464:220:1",
								"statements": [
									{
										"nativeSrc": "6474:74:1",
										"nodeType": "YulAssignment",
										"src": "6474:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "6540:3:1",
													"nodeType": "YulIdentifier",
													"src": "6540:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "6545:2:1",
													"nodeType": "YulLiteral",
													"src": "6545:2:1",
													"type": "",
													"value": "22"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6481:58:1",
												"nodeType": "YulIdentifier",
												"src": "6481:58:1"
											},
											"nativeSrc": "6481:67:1",
											"nodeType": "YulFunctionCall",
											"src": "6481:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "6474:3:1",
												"nodeType": "YulIdentifier",
												"src": "6474:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "6646:3:1",
													"nodeType": "YulIdentifier",
													"src": "6646:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db",
												"nativeSrc": "6557:88:1",
												"nodeType": "YulIdentifier",
												"src": "6557:88:1"
											},
											"nativeSrc": "6557:93:1",
											"nodeType": "YulFunctionCall",
											"src": "6557:93:1"
										},
										"nativeSrc": "6557:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "6557:93:1"
									},
									{
										"nativeSrc": "6659:19:1",
										"nodeType": "YulAssignment",
										"src": "6659:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "6670:3:1",
													"nodeType": "YulIdentifier",
													"src": "6670:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "6675:2:1",
													"nodeType": "YulLiteral",
													"src": "6675:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "6666:3:1",
												"nodeType": "YulIdentifier",
												"src": "6666:3:1"
											},
											"nativeSrc": "6666:12:1",
											"nodeType": "YulFunctionCall",
											"src": "6666:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "6659:3:1",
												"nodeType": "YulIdentifier",
												"src": "6659:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "6318:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "6452:3:1",
									"nodeType": "YulTypedName",
									"src": "6452:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "6460:3:1",
									"nodeType": "YulTypedName",
									"src": "6460:3:1",
									"type": ""
								}
							],
							"src": "6318:366:1"
						},
						{
							"body": {
								"nativeSrc": "6861:248:1",
								"nodeType": "YulBlock",
								"src": "6861:248:1",
								"statements": [
									{
										"nativeSrc": "6871:26:1",
										"nodeType": "YulAssignment",
										"src": "6871:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "6883:9:1",
													"nodeType": "YulIdentifier",
													"src": "6883:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "6894:2:1",
													"nodeType": "YulLiteral",
													"src": "6894:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "6879:3:1",
												"nodeType": "YulIdentifier",
												"src": "6879:3:1"
											},
											"nativeSrc": "6879:18:1",
											"nodeType": "YulFunctionCall",
											"src": "6879:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "6871:4:1",
												"nodeType": "YulIdentifier",
												"src": "6871:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "6918:9:1",
															"nodeType": "YulIdentifier",
															"src": "6918:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "6929:1:1",
															"nodeType": "YulLiteral",
															"src": "6929:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "6914:3:1",
														"nodeType": "YulIdentifier",
														"src": "6914:3:1"
													},
													"nativeSrc": "6914:17:1",
													"nodeType": "YulFunctionCall",
													"src": "6914:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "6937:4:1",
															"nodeType": "YulIdentifier",
															"src": "6937:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "6943:9:1",
															"nodeType": "YulIdentifier",
															"src": "6943:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "6933:3:1",
														"nodeType": "YulIdentifier",
														"src": "6933:3:1"
													},
													"nativeSrc": "6933:20:1",
													"nodeType": "YulFunctionCall",
													"src": "6933:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6907:6:1",
												"nodeType": "YulIdentifier",
												"src": "6907:6:1"
											},
											"nativeSrc": "6907:47:1",
											"nodeType": "YulFunctionCall",
											"src": "6907:47:1"
										},
										"nativeSrc": "6907:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "6907:47:1"
									},
									{
										"nativeSrc": "6963:139:1",
										"nodeType": "YulAssignment",
										"src": "6963:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "7097:4:1",
													"nodeType": "YulIdentifier",
													"src": "7097:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6971:124:1",
												"nodeType": "YulIdentifier",
												"src": "6971:124:1"
											},
											"nativeSrc": "6971:131:1",
											"nodeType": "YulFunctionCall",
											"src": "6971:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "6963:4:1",
												"nodeType": "YulIdentifier",
												"src": "6963:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "6690:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "6841:9:1",
									"nodeType": "YulTypedName",
									"src": "6841:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "6856:4:1",
									"nodeType": "YulTypedName",
									"src": "6856:4:1",
									"type": ""
								}
							],
							"src": "6690:419:1"
						},
						{
							"body": {
								"nativeSrc": "7178:80:1",
								"nodeType": "YulBlock",
								"src": "7178:80:1",
								"statements": [
									{
										"nativeSrc": "7188:22:1",
										"nodeType": "YulAssignment",
										"src": "7188:22:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "7203:6:1",
													"nodeType": "YulIdentifier",
													"src": "7203:6:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "7197:5:1",
												"nodeType": "YulIdentifier",
												"src": "7197:5:1"
											},
											"nativeSrc": "7197:13:1",
											"nodeType": "YulFunctionCall",
											"src": "7197:13:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "7188:5:1",
												"nodeType": "YulIdentifier",
												"src": "7188:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "7246:5:1",
													"nodeType": "YulIdentifier",
													"src": "7246:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7219:26:1",
												"nodeType": "YulIdentifier",
												"src": "7219:26:1"
											},
											"nativeSrc": "7219:33:1",
											"nodeType": "YulFunctionCall",
											"src": "7219:33:1"
										},
										"nativeSrc": "7219:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "7219:33:1"
									}
								]
							},
							"name": "abi_decode_t_uint256_fromMemory",
							"nativeSrc": "7115:143:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "7156:6:1",
									"nodeType": "YulTypedName",
									"src": "7156:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "7164:3:1",
									"nodeType": "YulTypedName",
									"src": "7164:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "7172:5:1",
									"nodeType": "YulTypedName",
									"src": "7172:5:1",
									"type": ""
								}
							],
							"src": "7115:143:1"
						},
						{
							"body": {
								"nativeSrc": "7341:274:1",
								"nodeType": "YulBlock",
								"src": "7341:274:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "7387:83:1",
											"nodeType": "YulBlock",
											"src": "7387:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "7389:77:1",
															"nodeType": "YulIdentifier",
															"src": "7389:77:1"
														},
														"nativeSrc": "7389:79:1",
														"nodeType": "YulFunctionCall",
														"src": "7389:79:1"
													},
													"nativeSrc": "7389:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "7389:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "7362:7:1",
															"nodeType": "YulIdentifier",
															"src": "7362:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "7371:9:1",
															"nodeType": "YulIdentifier",
															"src": "7371:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "7358:3:1",
														"nodeType": "YulIdentifier",
														"src": "7358:3:1"
													},
													"nativeSrc": "7358:23:1",
													"nodeType": "YulFunctionCall",
													"src": "7358:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "7383:2:1",
													"nodeType": "YulLiteral",
													"src": "7383:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "7354:3:1",
												"nodeType": "YulIdentifier",
												"src": "7354:3:1"
											},
											"nativeSrc": "7354:32:1",
											"nodeType": "YulFunctionCall",
											"src": "7354:32:1"
										},
										"nativeSrc": "7351:119:1",
										"nodeType": "YulIf",
										"src": "7351:119:1"
									},
									{
										"nativeSrc": "7480:128:1",
										"nodeType": "YulBlock",
										"src": "7480:128:1",
										"statements": [
											{
												"nativeSrc": "7495:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "7495:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "7509:1:1",
													"nodeType": "YulLiteral",
													"src": "7509:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "7499:6:1",
														"nodeType": "YulTypedName",
														"src": "7499:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "7524:74:1",
												"nodeType": "YulAssignment",
												"src": "7524:74:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "7570:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "7570:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "7581:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "7566:3:1",
																"nodeType": "YulIdentifier",
																"src": "7566:3:1"
															},
															"nativeSrc": "7566:22:1",
															"nodeType": "YulFunctionCall",
															"src": "7566:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "7590:7:1",
															"nodeType": "YulIdentifier",
															"src": "7590:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256_fromMemory",
														"nativeSrc": "7534:31:1",
														"nodeType": "YulIdentifier",
														"src": "7534:31:1"
													},
													"nativeSrc": "7534:64:1",
													"nodeType": "YulFunctionCall",
													"src": "7534:64:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "7524:6:1",
														"nodeType": "YulIdentifier",
														"src": "7524:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256_fromMemory",
							"nativeSrc": "7264:351:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "7311:9:1",
									"nodeType": "YulTypedName",
									"src": "7311:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "7322:7:1",
									"nodeType": "YulTypedName",
									"src": "7322:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "7334:6:1",
									"nodeType": "YulTypedName",
									"src": "7334:6:1",
									"type": ""
								}
							],
							"src": "7264:351:1"
						},
						{
							"body": {
								"nativeSrc": "7727:65:1",
								"nodeType": "YulBlock",
								"src": "7727:65:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "7749:6:1",
															"nodeType": "YulIdentifier",
															"src": "7749:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "7757:1:1",
															"nodeType": "YulLiteral",
															"src": "7757:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "7745:3:1",
														"nodeType": "YulIdentifier",
														"src": "7745:3:1"
													},
													"nativeSrc": "7745:14:1",
													"nodeType": "YulFunctionCall",
													"src": "7745:14:1"
												},
												{
													"hexValue": "4d7573742073776170206d6f7265207468616e2030",
													"kind": "string",
													"nativeSrc": "7761:23:1",
													"nodeType": "YulLiteral",
													"src": "7761:23:1",
													"type": "",
													"value": "Must swap more than 0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "7738:6:1",
												"nodeType": "YulIdentifier",
												"src": "7738:6:1"
											},
											"nativeSrc": "7738:47:1",
											"nodeType": "YulFunctionCall",
											"src": "7738:47:1"
										},
										"nativeSrc": "7738:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "7738:47:1"
									}
								]
							},
							"name": "store_literal_in_memory_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0",
							"nativeSrc": "7621:171:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "7719:6:1",
									"nodeType": "YulTypedName",
									"src": "7719:6:1",
									"type": ""
								}
							],
							"src": "7621:171:1"
						},
						{
							"body": {
								"nativeSrc": "7944:220:1",
								"nodeType": "YulBlock",
								"src": "7944:220:1",
								"statements": [
									{
										"nativeSrc": "7954:74:1",
										"nodeType": "YulAssignment",
										"src": "7954:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "8020:3:1",
													"nodeType": "YulIdentifier",
													"src": "8020:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "8025:2:1",
													"nodeType": "YulLiteral",
													"src": "8025:2:1",
													"type": "",
													"value": "21"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7961:58:1",
												"nodeType": "YulIdentifier",
												"src": "7961:58:1"
											},
											"nativeSrc": "7961:67:1",
											"nodeType": "YulFunctionCall",
											"src": "7961:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "7954:3:1",
												"nodeType": "YulIdentifier",
												"src": "7954:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "8126:3:1",
													"nodeType": "YulIdentifier",
													"src": "8126:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0",
												"nativeSrc": "8037:88:1",
												"nodeType": "YulIdentifier",
												"src": "8037:88:1"
											},
											"nativeSrc": "8037:93:1",
											"nodeType": "YulFunctionCall",
											"src": "8037:93:1"
										},
										"nativeSrc": "8037:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "8037:93:1"
									},
									{
										"nativeSrc": "8139:19:1",
										"nodeType": "YulAssignment",
										"src": "8139:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "8150:3:1",
													"nodeType": "YulIdentifier",
													"src": "8150:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "8155:2:1",
													"nodeType": "YulLiteral",
													"src": "8155:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "8146:3:1",
												"nodeType": "YulIdentifier",
												"src": "8146:3:1"
											},
											"nativeSrc": "8146:12:1",
											"nodeType": "YulFunctionCall",
											"src": "8146:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "8139:3:1",
												"nodeType": "YulIdentifier",
												"src": "8139:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "7798:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "7932:3:1",
									"nodeType": "YulTypedName",
									"src": "7932:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "7940:3:1",
									"nodeType": "YulTypedName",
									"src": "7940:3:1",
									"type": ""
								}
							],
							"src": "7798:366:1"
						},
						{
							"body": {
								"nativeSrc": "8341:248:1",
								"nodeType": "YulBlock",
								"src": "8341:248:1",
								"statements": [
									{
										"nativeSrc": "8351:26:1",
										"nodeType": "YulAssignment",
										"src": "8351:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "8363:9:1",
													"nodeType": "YulIdentifier",
													"src": "8363:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "8374:2:1",
													"nodeType": "YulLiteral",
													"src": "8374:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "8359:3:1",
												"nodeType": "YulIdentifier",
												"src": "8359:3:1"
											},
											"nativeSrc": "8359:18:1",
											"nodeType": "YulFunctionCall",
											"src": "8359:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "8351:4:1",
												"nodeType": "YulIdentifier",
												"src": "8351:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "8398:9:1",
															"nodeType": "YulIdentifier",
															"src": "8398:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "8409:1:1",
															"nodeType": "YulLiteral",
															"src": "8409:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8394:3:1",
														"nodeType": "YulIdentifier",
														"src": "8394:3:1"
													},
													"nativeSrc": "8394:17:1",
													"nodeType": "YulFunctionCall",
													"src": "8394:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "8417:4:1",
															"nodeType": "YulIdentifier",
															"src": "8417:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "8423:9:1",
															"nodeType": "YulIdentifier",
															"src": "8423:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "8413:3:1",
														"nodeType": "YulIdentifier",
														"src": "8413:3:1"
													},
													"nativeSrc": "8413:20:1",
													"nodeType": "YulFunctionCall",
													"src": "8413:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "8387:6:1",
												"nodeType": "YulIdentifier",
												"src": "8387:6:1"
											},
											"nativeSrc": "8387:47:1",
											"nodeType": "YulFunctionCall",
											"src": "8387:47:1"
										},
										"nativeSrc": "8387:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "8387:47:1"
									},
									{
										"nativeSrc": "8443:139:1",
										"nodeType": "YulAssignment",
										"src": "8443:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "8577:4:1",
													"nodeType": "YulIdentifier",
													"src": "8577:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8451:124:1",
												"nodeType": "YulIdentifier",
												"src": "8451:124:1"
											},
											"nativeSrc": "8451:131:1",
											"nodeType": "YulFunctionCall",
											"src": "8451:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "8443:4:1",
												"nodeType": "YulIdentifier",
												"src": "8443:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "8170:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "8321:9:1",
									"nodeType": "YulTypedName",
									"src": "8321:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "8336:4:1",
									"nodeType": "YulTypedName",
									"src": "8336:4:1",
									"type": ""
								}
							],
							"src": "8170:419:1"
						},
						{
							"body": {
								"nativeSrc": "8701:73:1",
								"nodeType": "YulBlock",
								"src": "8701:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "8723:6:1",
															"nodeType": "YulIdentifier",
															"src": "8723:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "8731:1:1",
															"nodeType": "YulLiteral",
															"src": "8731:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8719:3:1",
														"nodeType": "YulIdentifier",
														"src": "8719:3:1"
													},
													"nativeSrc": "8719:14:1",
													"nodeType": "YulFunctionCall",
													"src": "8719:14:1"
												},
												{
													"hexValue": "496e73756666696369656e7420746f6b656e42206c6971756964697479",
													"kind": "string",
													"nativeSrc": "8735:31:1",
													"nodeType": "YulLiteral",
													"src": "8735:31:1",
													"type": "",
													"value": "Insufficient tokenB liquidity"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "8712:6:1",
												"nodeType": "YulIdentifier",
												"src": "8712:6:1"
											},
											"nativeSrc": "8712:55:1",
											"nodeType": "YulFunctionCall",
											"src": "8712:55:1"
										},
										"nativeSrc": "8712:55:1",
										"nodeType": "YulExpressionStatement",
										"src": "8712:55:1"
									}
								]
							},
							"name": "store_literal_in_memory_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce",
							"nativeSrc": "8595:179:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "8693:6:1",
									"nodeType": "YulTypedName",
									"src": "8693:6:1",
									"type": ""
								}
							],
							"src": "8595:179:1"
						},
						{
							"body": {
								"nativeSrc": "8926:220:1",
								"nodeType": "YulBlock",
								"src": "8926:220:1",
								"statements": [
									{
										"nativeSrc": "8936:74:1",
										"nodeType": "YulAssignment",
										"src": "8936:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9002:3:1",
													"nodeType": "YulIdentifier",
													"src": "9002:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9007:2:1",
													"nodeType": "YulLiteral",
													"src": "9007:2:1",
													"type": "",
													"value": "29"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8943:58:1",
												"nodeType": "YulIdentifier",
												"src": "8943:58:1"
											},
											"nativeSrc": "8943:67:1",
											"nodeType": "YulFunctionCall",
											"src": "8943:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "8936:3:1",
												"nodeType": "YulIdentifier",
												"src": "8936:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9108:3:1",
													"nodeType": "YulIdentifier",
													"src": "9108:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce",
												"nativeSrc": "9019:88:1",
												"nodeType": "YulIdentifier",
												"src": "9019:88:1"
											},
											"nativeSrc": "9019:93:1",
											"nodeType": "YulFunctionCall",
											"src": "9019:93:1"
										},
										"nativeSrc": "9019:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "9019:93:1"
									},
									{
										"nativeSrc": "9121:19:1",
										"nodeType": "YulAssignment",
										"src": "9121:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9132:3:1",
													"nodeType": "YulIdentifier",
													"src": "9132:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9137:2:1",
													"nodeType": "YulLiteral",
													"src": "9137:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9128:3:1",
												"nodeType": "YulIdentifier",
												"src": "9128:3:1"
											},
											"nativeSrc": "9128:12:1",
											"nodeType": "YulFunctionCall",
											"src": "9128:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "9121:3:1",
												"nodeType": "YulIdentifier",
												"src": "9121:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "8780:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "8914:3:1",
									"nodeType": "YulTypedName",
									"src": "8914:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "8922:3:1",
									"nodeType": "YulTypedName",
									"src": "8922:3:1",
									"type": ""
								}
							],
							"src": "8780:366:1"
						},
						{
							"body": {
								"nativeSrc": "9323:248:1",
								"nodeType": "YulBlock",
								"src": "9323:248:1",
								"statements": [
									{
										"nativeSrc": "9333:26:1",
										"nodeType": "YulAssignment",
										"src": "9333:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "9345:9:1",
													"nodeType": "YulIdentifier",
													"src": "9345:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9356:2:1",
													"nodeType": "YulLiteral",
													"src": "9356:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9341:3:1",
												"nodeType": "YulIdentifier",
												"src": "9341:3:1"
											},
											"nativeSrc": "9341:18:1",
											"nodeType": "YulFunctionCall",
											"src": "9341:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9333:4:1",
												"nodeType": "YulIdentifier",
												"src": "9333:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9380:9:1",
															"nodeType": "YulIdentifier",
															"src": "9380:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "9391:1:1",
															"nodeType": "YulLiteral",
															"src": "9391:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9376:3:1",
														"nodeType": "YulIdentifier",
														"src": "9376:3:1"
													},
													"nativeSrc": "9376:17:1",
													"nodeType": "YulFunctionCall",
													"src": "9376:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "9399:4:1",
															"nodeType": "YulIdentifier",
															"src": "9399:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "9405:9:1",
															"nodeType": "YulIdentifier",
															"src": "9405:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "9395:3:1",
														"nodeType": "YulIdentifier",
														"src": "9395:3:1"
													},
													"nativeSrc": "9395:20:1",
													"nodeType": "YulFunctionCall",
													"src": "9395:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9369:6:1",
												"nodeType": "YulIdentifier",
												"src": "9369:6:1"
											},
											"nativeSrc": "9369:47:1",
											"nodeType": "YulFunctionCall",
											"src": "9369:47:1"
										},
										"nativeSrc": "9369:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "9369:47:1"
									},
									{
										"nativeSrc": "9425:139:1",
										"nodeType": "YulAssignment",
										"src": "9425:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "9559:4:1",
													"nodeType": "YulIdentifier",
													"src": "9559:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9433:124:1",
												"nodeType": "YulIdentifier",
												"src": "9433:124:1"
											},
											"nativeSrc": "9433:131:1",
											"nodeType": "YulFunctionCall",
											"src": "9433:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9425:4:1",
												"nodeType": "YulIdentifier",
												"src": "9425:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "9152:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9303:9:1",
									"nodeType": "YulTypedName",
									"src": "9303:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "9318:4:1",
									"nodeType": "YulTypedName",
									"src": "9318:4:1",
									"type": ""
								}
							],
							"src": "9152:419:1"
						},
						{
							"body": {
								"nativeSrc": "9731:288:1",
								"nodeType": "YulBlock",
								"src": "9731:288:1",
								"statements": [
									{
										"nativeSrc": "9741:26:1",
										"nodeType": "YulAssignment",
										"src": "9741:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "9753:9:1",
													"nodeType": "YulIdentifier",
													"src": "9753:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9764:2:1",
													"nodeType": "YulLiteral",
													"src": "9764:2:1",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9749:3:1",
												"nodeType": "YulIdentifier",
												"src": "9749:3:1"
											},
											"nativeSrc": "9749:18:1",
											"nodeType": "YulFunctionCall",
											"src": "9749:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9741:4:1",
												"nodeType": "YulIdentifier",
												"src": "9741:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "9821:6:1",
													"nodeType": "YulIdentifier",
													"src": "9821:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9834:9:1",
															"nodeType": "YulIdentifier",
															"src": "9834:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "9845:1:1",
															"nodeType": "YulLiteral",
															"src": "9845:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9830:3:1",
														"nodeType": "YulIdentifier",
														"src": "9830:3:1"
													},
													"nativeSrc": "9830:17:1",
													"nodeType": "YulFunctionCall",
													"src": "9830:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9777:43:1",
												"nodeType": "YulIdentifier",
												"src": "9777:43:1"
											},
											"nativeSrc": "9777:71:1",
											"nodeType": "YulFunctionCall",
											"src": "9777:71:1"
										},
										"nativeSrc": "9777:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "9777:71:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "9902:6:1",
													"nodeType": "YulIdentifier",
													"src": "9902:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9915:9:1",
															"nodeType": "YulIdentifier",
															"src": "9915:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "9926:2:1",
															"nodeType": "YulLiteral",
															"src": "9926:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9911:3:1",
														"nodeType": "YulIdentifier",
														"src": "9911:3:1"
													},
													"nativeSrc": "9911:18:1",
													"nodeType": "YulFunctionCall",
													"src": "9911:18:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9858:43:1",
												"nodeType": "YulIdentifier",
												"src": "9858:43:1"
											},
											"nativeSrc": "9858:72:1",
											"nodeType": "YulFunctionCall",
											"src": "9858:72:1"
										},
										"nativeSrc": "9858:72:1",
										"nodeType": "YulExpressionStatement",
										"src": "9858:72:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value2",
													"nativeSrc": "9984:6:1",
													"nodeType": "YulIdentifier",
													"src": "9984:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9997:9:1",
															"nodeType": "YulIdentifier",
															"src": "9997:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "10008:2:1",
															"nodeType": "YulLiteral",
															"src": "10008:2:1",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9993:3:1",
														"nodeType": "YulIdentifier",
														"src": "9993:3:1"
													},
													"nativeSrc": "9993:18:1",
													"nodeType": "YulFunctionCall",
													"src": "9993:18:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9940:43:1",
												"nodeType": "YulIdentifier",
												"src": "9940:43:1"
											},
											"nativeSrc": "9940:72:1",
											"nodeType": "YulFunctionCall",
											"src": "9940:72:1"
										},
										"nativeSrc": "9940:72:1",
										"nodeType": "YulExpressionStatement",
										"src": "9940:72:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
							"nativeSrc": "9577:442:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9687:9:1",
									"nodeType": "YulTypedName",
									"src": "9687:9:1",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "9699:6:1",
									"nodeType": "YulTypedName",
									"src": "9699:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "9707:6:1",
									"nodeType": "YulTypedName",
									"src": "9707:6:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "9715:6:1",
									"nodeType": "YulTypedName",
									"src": "9715:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "9726:4:1",
									"nodeType": "YulTypedName",
									"src": "9726:4:1",
									"type": ""
								}
							],
							"src": "9577:442:1"
						},
						{
							"body": {
								"nativeSrc": "10131:66:1",
								"nodeType": "YulBlock",
								"src": "10131:66:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "10153:6:1",
															"nodeType": "YulIdentifier",
															"src": "10153:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "10161:1:1",
															"nodeType": "YulLiteral",
															"src": "10161:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10149:3:1",
														"nodeType": "YulIdentifier",
														"src": "10149:3:1"
													},
													"nativeSrc": "10149:14:1",
													"nodeType": "YulFunctionCall",
													"src": "10149:14:1"
												},
												{
													"hexValue": "546f6b656e41207472616e73666572206661696c6564",
													"kind": "string",
													"nativeSrc": "10165:24:1",
													"nodeType": "YulLiteral",
													"src": "10165:24:1",
													"type": "",
													"value": "TokenA transfer failed"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10142:6:1",
												"nodeType": "YulIdentifier",
												"src": "10142:6:1"
											},
											"nativeSrc": "10142:48:1",
											"nodeType": "YulFunctionCall",
											"src": "10142:48:1"
										},
										"nativeSrc": "10142:48:1",
										"nodeType": "YulExpressionStatement",
										"src": "10142:48:1"
									}
								]
							},
							"name": "store_literal_in_memory_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3",
							"nativeSrc": "10025:172:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "10123:6:1",
									"nodeType": "YulTypedName",
									"src": "10123:6:1",
									"type": ""
								}
							],
							"src": "10025:172:1"
						},
						{
							"body": {
								"nativeSrc": "10349:220:1",
								"nodeType": "YulBlock",
								"src": "10349:220:1",
								"statements": [
									{
										"nativeSrc": "10359:74:1",
										"nodeType": "YulAssignment",
										"src": "10359:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "10425:3:1",
													"nodeType": "YulIdentifier",
													"src": "10425:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "10430:2:1",
													"nodeType": "YulLiteral",
													"src": "10430:2:1",
													"type": "",
													"value": "22"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10366:58:1",
												"nodeType": "YulIdentifier",
												"src": "10366:58:1"
											},
											"nativeSrc": "10366:67:1",
											"nodeType": "YulFunctionCall",
											"src": "10366:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "10359:3:1",
												"nodeType": "YulIdentifier",
												"src": "10359:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "10531:3:1",
													"nodeType": "YulIdentifier",
													"src": "10531:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3",
												"nativeSrc": "10442:88:1",
												"nodeType": "YulIdentifier",
												"src": "10442:88:1"
											},
											"nativeSrc": "10442:93:1",
											"nodeType": "YulFunctionCall",
											"src": "10442:93:1"
										},
										"nativeSrc": "10442:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "10442:93:1"
									},
									{
										"nativeSrc": "10544:19:1",
										"nodeType": "YulAssignment",
										"src": "10544:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "10555:3:1",
													"nodeType": "YulIdentifier",
													"src": "10555:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "10560:2:1",
													"nodeType": "YulLiteral",
													"src": "10560:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "10551:3:1",
												"nodeType": "YulIdentifier",
												"src": "10551:3:1"
											},
											"nativeSrc": "10551:12:1",
											"nodeType": "YulFunctionCall",
											"src": "10551:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "10544:3:1",
												"nodeType": "YulIdentifier",
												"src": "10544:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "10203:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "10337:3:1",
									"nodeType": "YulTypedName",
									"src": "10337:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "10345:3:1",
									"nodeType": "YulTypedName",
									"src": "10345:3:1",
									"type": ""
								}
							],
							"src": "10203:366:1"
						},
						{
							"body": {
								"nativeSrc": "10746:248:1",
								"nodeType": "YulBlock",
								"src": "10746:248:1",
								"statements": [
									{
										"nativeSrc": "10756:26:1",
										"nodeType": "YulAssignment",
										"src": "10756:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "10768:9:1",
													"nodeType": "YulIdentifier",
													"src": "10768:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "10779:2:1",
													"nodeType": "YulLiteral",
													"src": "10779:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "10764:3:1",
												"nodeType": "YulIdentifier",
												"src": "10764:3:1"
											},
											"nativeSrc": "10764:18:1",
											"nodeType": "YulFunctionCall",
											"src": "10764:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "10756:4:1",
												"nodeType": "YulIdentifier",
												"src": "10756:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "10803:9:1",
															"nodeType": "YulIdentifier",
															"src": "10803:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "10814:1:1",
															"nodeType": "YulLiteral",
															"src": "10814:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10799:3:1",
														"nodeType": "YulIdentifier",
														"src": "10799:3:1"
													},
													"nativeSrc": "10799:17:1",
													"nodeType": "YulFunctionCall",
													"src": "10799:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "10822:4:1",
															"nodeType": "YulIdentifier",
															"src": "10822:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "10828:9:1",
															"nodeType": "YulIdentifier",
															"src": "10828:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "10818:3:1",
														"nodeType": "YulIdentifier",
														"src": "10818:3:1"
													},
													"nativeSrc": "10818:20:1",
													"nodeType": "YulFunctionCall",
													"src": "10818:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10792:6:1",
												"nodeType": "YulIdentifier",
												"src": "10792:6:1"
											},
											"nativeSrc": "10792:47:1",
											"nodeType": "YulFunctionCall",
											"src": "10792:47:1"
										},
										"nativeSrc": "10792:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "10792:47:1"
									},
									{
										"nativeSrc": "10848:139:1",
										"nodeType": "YulAssignment",
										"src": "10848:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "10982:4:1",
													"nodeType": "YulIdentifier",
													"src": "10982:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10856:124:1",
												"nodeType": "YulIdentifier",
												"src": "10856:124:1"
											},
											"nativeSrc": "10856:131:1",
											"nodeType": "YulFunctionCall",
											"src": "10856:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "10848:4:1",
												"nodeType": "YulIdentifier",
												"src": "10848:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "10575:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "10726:9:1",
									"nodeType": "YulTypedName",
									"src": "10726:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "10741:4:1",
									"nodeType": "YulTypedName",
									"src": "10741:4:1",
									"type": ""
								}
							],
							"src": "10575:419:1"
						},
						{
							"body": {
								"nativeSrc": "11126:206:1",
								"nodeType": "YulBlock",
								"src": "11126:206:1",
								"statements": [
									{
										"nativeSrc": "11136:26:1",
										"nodeType": "YulAssignment",
										"src": "11136:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "11148:9:1",
													"nodeType": "YulIdentifier",
													"src": "11148:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "11159:2:1",
													"nodeType": "YulLiteral",
													"src": "11159:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "11144:3:1",
												"nodeType": "YulIdentifier",
												"src": "11144:3:1"
											},
											"nativeSrc": "11144:18:1",
											"nodeType": "YulFunctionCall",
											"src": "11144:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "11136:4:1",
												"nodeType": "YulIdentifier",
												"src": "11136:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "11216:6:1",
													"nodeType": "YulIdentifier",
													"src": "11216:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "11229:9:1",
															"nodeType": "YulIdentifier",
															"src": "11229:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "11240:1:1",
															"nodeType": "YulLiteral",
															"src": "11240:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11225:3:1",
														"nodeType": "YulIdentifier",
														"src": "11225:3:1"
													},
													"nativeSrc": "11225:17:1",
													"nodeType": "YulFunctionCall",
													"src": "11225:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11172:43:1",
												"nodeType": "YulIdentifier",
												"src": "11172:43:1"
											},
											"nativeSrc": "11172:71:1",
											"nodeType": "YulFunctionCall",
											"src": "11172:71:1"
										},
										"nativeSrc": "11172:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "11172:71:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "11297:6:1",
													"nodeType": "YulIdentifier",
													"src": "11297:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "11310:9:1",
															"nodeType": "YulIdentifier",
															"src": "11310:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "11321:2:1",
															"nodeType": "YulLiteral",
															"src": "11321:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11306:3:1",
														"nodeType": "YulIdentifier",
														"src": "11306:3:1"
													},
													"nativeSrc": "11306:18:1",
													"nodeType": "YulFunctionCall",
													"src": "11306:18:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11253:43:1",
												"nodeType": "YulIdentifier",
												"src": "11253:43:1"
											},
											"nativeSrc": "11253:72:1",
											"nodeType": "YulFunctionCall",
											"src": "11253:72:1"
										},
										"nativeSrc": "11253:72:1",
										"nodeType": "YulExpressionStatement",
										"src": "11253:72:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "11000:332:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "11090:9:1",
									"nodeType": "YulTypedName",
									"src": "11090:9:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "11102:6:1",
									"nodeType": "YulTypedName",
									"src": "11102:6:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "11110:6:1",
									"nodeType": "YulTypedName",
									"src": "11110:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "11121:4:1",
									"nodeType": "YulTypedName",
									"src": "11121:4:1",
									"type": ""
								}
							],
							"src": "11000:332:1"
						},
						{
							"body": {
								"nativeSrc": "11444:66:1",
								"nodeType": "YulBlock",
								"src": "11444:66:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "11466:6:1",
															"nodeType": "YulIdentifier",
															"src": "11466:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "11474:1:1",
															"nodeType": "YulLiteral",
															"src": "11474:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11462:3:1",
														"nodeType": "YulIdentifier",
														"src": "11462:3:1"
													},
													"nativeSrc": "11462:14:1",
													"nodeType": "YulFunctionCall",
													"src": "11462:14:1"
												},
												{
													"hexValue": "4d757374207374616b65206d6f7265207468616e2030",
													"kind": "string",
													"nativeSrc": "11478:24:1",
													"nodeType": "YulLiteral",
													"src": "11478:24:1",
													"type": "",
													"value": "Must stake more than 0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11455:6:1",
												"nodeType": "YulIdentifier",
												"src": "11455:6:1"
											},
											"nativeSrc": "11455:48:1",
											"nodeType": "YulFunctionCall",
											"src": "11455:48:1"
										},
										"nativeSrc": "11455:48:1",
										"nodeType": "YulExpressionStatement",
										"src": "11455:48:1"
									}
								]
							},
							"name": "store_literal_in_memory_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd",
							"nativeSrc": "11338:172:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "11436:6:1",
									"nodeType": "YulTypedName",
									"src": "11436:6:1",
									"type": ""
								}
							],
							"src": "11338:172:1"
						},
						{
							"body": {
								"nativeSrc": "11662:220:1",
								"nodeType": "YulBlock",
								"src": "11662:220:1",
								"statements": [
									{
										"nativeSrc": "11672:74:1",
										"nodeType": "YulAssignment",
										"src": "11672:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11738:3:1",
													"nodeType": "YulIdentifier",
													"src": "11738:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "11743:2:1",
													"nodeType": "YulLiteral",
													"src": "11743:2:1",
													"type": "",
													"value": "22"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11679:58:1",
												"nodeType": "YulIdentifier",
												"src": "11679:58:1"
											},
											"nativeSrc": "11679:67:1",
											"nodeType": "YulFunctionCall",
											"src": "11679:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "11672:3:1",
												"nodeType": "YulIdentifier",
												"src": "11672:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11844:3:1",
													"nodeType": "YulIdentifier",
													"src": "11844:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd",
												"nativeSrc": "11755:88:1",
												"nodeType": "YulIdentifier",
												"src": "11755:88:1"
											},
											"nativeSrc": "11755:93:1",
											"nodeType": "YulFunctionCall",
											"src": "11755:93:1"
										},
										"nativeSrc": "11755:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "11755:93:1"
									},
									{
										"nativeSrc": "11857:19:1",
										"nodeType": "YulAssignment",
										"src": "11857:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11868:3:1",
													"nodeType": "YulIdentifier",
													"src": "11868:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "11873:2:1",
													"nodeType": "YulLiteral",
													"src": "11873:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "11864:3:1",
												"nodeType": "YulIdentifier",
												"src": "11864:3:1"
											},
											"nativeSrc": "11864:12:1",
											"nodeType": "YulFunctionCall",
											"src": "11864:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "11857:3:1",
												"nodeType": "YulIdentifier",
												"src": "11857:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "11516:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "11650:3:1",
									"nodeType": "YulTypedName",
									"src": "11650:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "11658:3:1",
									"nodeType": "YulTypedName",
									"src": "11658:3:1",
									"type": ""
								}
							],
							"src": "11516:366:1"
						},
						{
							"body": {
								"nativeSrc": "12059:248:1",
								"nodeType": "YulBlock",
								"src": "12059:248:1",
								"statements": [
									{
										"nativeSrc": "12069:26:1",
										"nodeType": "YulAssignment",
										"src": "12069:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "12081:9:1",
													"nodeType": "YulIdentifier",
													"src": "12081:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "12092:2:1",
													"nodeType": "YulLiteral",
													"src": "12092:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "12077:3:1",
												"nodeType": "YulIdentifier",
												"src": "12077:3:1"
											},
											"nativeSrc": "12077:18:1",
											"nodeType": "YulFunctionCall",
											"src": "12077:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "12069:4:1",
												"nodeType": "YulIdentifier",
												"src": "12069:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "12116:9:1",
															"nodeType": "YulIdentifier",
															"src": "12116:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "12127:1:1",
															"nodeType": "YulLiteral",
															"src": "12127:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "12112:3:1",
														"nodeType": "YulIdentifier",
														"src": "12112:3:1"
													},
													"nativeSrc": "12112:17:1",
													"nodeType": "YulFunctionCall",
													"src": "12112:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "12135:4:1",
															"nodeType": "YulIdentifier",
															"src": "12135:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "12141:9:1",
															"nodeType": "YulIdentifier",
															"src": "12141:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "12131:3:1",
														"nodeType": "YulIdentifier",
														"src": "12131:3:1"
													},
													"nativeSrc": "12131:20:1",
													"nodeType": "YulFunctionCall",
													"src": "12131:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "12105:6:1",
												"nodeType": "YulIdentifier",
												"src": "12105:6:1"
											},
											"nativeSrc": "12105:47:1",
											"nodeType": "YulFunctionCall",
											"src": "12105:47:1"
										},
										"nativeSrc": "12105:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "12105:47:1"
									},
									{
										"nativeSrc": "12161:139:1",
										"nodeType": "YulAssignment",
										"src": "12161:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "12295:4:1",
													"nodeType": "YulIdentifier",
													"src": "12295:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12169:124:1",
												"nodeType": "YulIdentifier",
												"src": "12169:124:1"
											},
											"nativeSrc": "12169:131:1",
											"nodeType": "YulFunctionCall",
											"src": "12169:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "12161:4:1",
												"nodeType": "YulIdentifier",
												"src": "12161:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "11888:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "12039:9:1",
									"nodeType": "YulTypedName",
									"src": "12039:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "12054:4:1",
									"nodeType": "YulTypedName",
									"src": "12054:4:1",
									"type": ""
								}
							],
							"src": "11888:419:1"
						},
						{
							"body": {
								"nativeSrc": "12357:147:1",
								"nodeType": "YulBlock",
								"src": "12357:147:1",
								"statements": [
									{
										"nativeSrc": "12367:25:1",
										"nodeType": "YulAssignment",
										"src": "12367:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12390:1:1",
													"nodeType": "YulIdentifier",
													"src": "12390:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12372:17:1",
												"nodeType": "YulIdentifier",
												"src": "12372:17:1"
											},
											"nativeSrc": "12372:20:1",
											"nodeType": "YulFunctionCall",
											"src": "12372:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "12367:1:1",
												"nodeType": "YulIdentifier",
												"src": "12367:1:1"
											}
										]
									},
									{
										"nativeSrc": "12401:25:1",
										"nodeType": "YulAssignment",
										"src": "12401:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "12424:1:1",
													"nodeType": "YulIdentifier",
													"src": "12424:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12406:17:1",
												"nodeType": "YulIdentifier",
												"src": "12406:17:1"
											},
											"nativeSrc": "12406:20:1",
											"nodeType": "YulFunctionCall",
											"src": "12406:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "12401:1:1",
												"nodeType": "YulIdentifier",
												"src": "12401:1:1"
											}
										]
									},
									{
										"nativeSrc": "12435:16:1",
										"nodeType": "YulAssignment",
										"src": "12435:16:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12446:1:1",
													"nodeType": "YulIdentifier",
													"src": "12446:1:1"
												},
												{
													"name": "y",
													"nativeSrc": "12449:1:1",
													"nodeType": "YulIdentifier",
													"src": "12449:1:1"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "12442:3:1",
												"nodeType": "YulIdentifier",
												"src": "12442:3:1"
											},
											"nativeSrc": "12442:9:1",
											"nodeType": "YulFunctionCall",
											"src": "12442:9:1"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "12435:3:1",
												"nodeType": "YulIdentifier",
												"src": "12435:3:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "12475:22:1",
											"nodeType": "YulBlock",
											"src": "12475:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "12477:16:1",
															"nodeType": "YulIdentifier",
															"src": "12477:16:1"
														},
														"nativeSrc": "12477:18:1",
														"nodeType": "YulFunctionCall",
														"src": "12477:18:1"
													},
													"nativeSrc": "12477:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "12477:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12467:1:1",
													"nodeType": "YulIdentifier",
													"src": "12467:1:1"
												},
												{
													"name": "sum",
													"nativeSrc": "12470:3:1",
													"nodeType": "YulIdentifier",
													"src": "12470:3:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "12464:2:1",
												"nodeType": "YulIdentifier",
												"src": "12464:2:1"
											},
											"nativeSrc": "12464:10:1",
											"nodeType": "YulFunctionCall",
											"src": "12464:10:1"
										},
										"nativeSrc": "12461:36:1",
										"nodeType": "YulIf",
										"src": "12461:36:1"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "12313:191:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "12344:1:1",
									"nodeType": "YulTypedName",
									"src": "12344:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "12347:1:1",
									"nodeType": "YulTypedName",
									"src": "12347:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "12353:3:1",
									"nodeType": "YulTypedName",
									"src": "12353:3:1",
									"type": ""
								}
							],
							"src": "12313:191:1"
						},
						{
							"body": {
								"nativeSrc": "12616:68:1",
								"nodeType": "YulBlock",
								"src": "12616:68:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "12638:6:1",
															"nodeType": "YulIdentifier",
															"src": "12638:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "12646:1:1",
															"nodeType": "YulLiteral",
															"src": "12646:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "12634:3:1",
														"nodeType": "YulIdentifier",
														"src": "12634:3:1"
													},
													"nativeSrc": "12634:14:1",
													"nodeType": "YulFunctionCall",
													"src": "12634:14:1"
												},
												{
													"hexValue": "4d757374206465706f736974206d6f7265207468616e2030",
													"kind": "string",
													"nativeSrc": "12650:26:1",
													"nodeType": "YulLiteral",
													"src": "12650:26:1",
													"type": "",
													"value": "Must deposit more than 0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "12627:6:1",
												"nodeType": "YulIdentifier",
												"src": "12627:6:1"
											},
											"nativeSrc": "12627:50:1",
											"nodeType": "YulFunctionCall",
											"src": "12627:50:1"
										},
										"nativeSrc": "12627:50:1",
										"nodeType": "YulExpressionStatement",
										"src": "12627:50:1"
									}
								]
							},
							"name": "store_literal_in_memory_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032",
							"nativeSrc": "12510:174:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "12608:6:1",
									"nodeType": "YulTypedName",
									"src": "12608:6:1",
									"type": ""
								}
							],
							"src": "12510:174:1"
						},
						{
							"body": {
								"nativeSrc": "12836:220:1",
								"nodeType": "YulBlock",
								"src": "12836:220:1",
								"statements": [
									{
										"nativeSrc": "12846:74:1",
										"nodeType": "YulAssignment",
										"src": "12846:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "12912:3:1",
													"nodeType": "YulIdentifier",
													"src": "12912:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "12917:2:1",
													"nodeType": "YulLiteral",
													"src": "12917:2:1",
													"type": "",
													"value": "24"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "12853:58:1",
												"nodeType": "YulIdentifier",
												"src": "12853:58:1"
											},
											"nativeSrc": "12853:67:1",
											"nodeType": "YulFunctionCall",
											"src": "12853:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "12846:3:1",
												"nodeType": "YulIdentifier",
												"src": "12846:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "13018:3:1",
													"nodeType": "YulIdentifier",
													"src": "13018:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032",
												"nativeSrc": "12929:88:1",
												"nodeType": "YulIdentifier",
												"src": "12929:88:1"
											},
											"nativeSrc": "12929:93:1",
											"nodeType": "YulFunctionCall",
											"src": "12929:93:1"
										},
										"nativeSrc": "12929:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "12929:93:1"
									},
									{
										"nativeSrc": "13031:19:1",
										"nodeType": "YulAssignment",
										"src": "13031:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "13042:3:1",
													"nodeType": "YulIdentifier",
													"src": "13042:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "13047:2:1",
													"nodeType": "YulLiteral",
													"src": "13047:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "13038:3:1",
												"nodeType": "YulIdentifier",
												"src": "13038:3:1"
											},
											"nativeSrc": "13038:12:1",
											"nodeType": "YulFunctionCall",
											"src": "13038:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "13031:3:1",
												"nodeType": "YulIdentifier",
												"src": "13031:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "12690:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "12824:3:1",
									"nodeType": "YulTypedName",
									"src": "12824:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "12832:3:1",
									"nodeType": "YulTypedName",
									"src": "12832:3:1",
									"type": ""
								}
							],
							"src": "12690:366:1"
						},
						{
							"body": {
								"nativeSrc": "13233:248:1",
								"nodeType": "YulBlock",
								"src": "13233:248:1",
								"statements": [
									{
										"nativeSrc": "13243:26:1",
										"nodeType": "YulAssignment",
										"src": "13243:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "13255:9:1",
													"nodeType": "YulIdentifier",
													"src": "13255:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "13266:2:1",
													"nodeType": "YulLiteral",
													"src": "13266:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "13251:3:1",
												"nodeType": "YulIdentifier",
												"src": "13251:3:1"
											},
											"nativeSrc": "13251:18:1",
											"nodeType": "YulFunctionCall",
											"src": "13251:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "13243:4:1",
												"nodeType": "YulIdentifier",
												"src": "13243:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "13290:9:1",
															"nodeType": "YulIdentifier",
															"src": "13290:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "13301:1:1",
															"nodeType": "YulLiteral",
															"src": "13301:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "13286:3:1",
														"nodeType": "YulIdentifier",
														"src": "13286:3:1"
													},
													"nativeSrc": "13286:17:1",
													"nodeType": "YulFunctionCall",
													"src": "13286:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "13309:4:1",
															"nodeType": "YulIdentifier",
															"src": "13309:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "13315:9:1",
															"nodeType": "YulIdentifier",
															"src": "13315:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "13305:3:1",
														"nodeType": "YulIdentifier",
														"src": "13305:3:1"
													},
													"nativeSrc": "13305:20:1",
													"nodeType": "YulFunctionCall",
													"src": "13305:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "13279:6:1",
												"nodeType": "YulIdentifier",
												"src": "13279:6:1"
											},
											"nativeSrc": "13279:47:1",
											"nodeType": "YulFunctionCall",
											"src": "13279:47:1"
										},
										"nativeSrc": "13279:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "13279:47:1"
									},
									{
										"nativeSrc": "13335:139:1",
										"nodeType": "YulAssignment",
										"src": "13335:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "13469:4:1",
													"nodeType": "YulIdentifier",
													"src": "13469:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13343:124:1",
												"nodeType": "YulIdentifier",
												"src": "13343:124:1"
											},
											"nativeSrc": "13343:131:1",
											"nodeType": "YulFunctionCall",
											"src": "13343:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "13335:4:1",
												"nodeType": "YulIdentifier",
												"src": "13335:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "13062:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "13213:9:1",
									"nodeType": "YulTypedName",
									"src": "13213:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "13228:4:1",
									"nodeType": "YulTypedName",
									"src": "13228:4:1",
									"type": ""
								}
							],
							"src": "13062:419:1"
						}
					]
				},
				"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must withdraw more than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccf966fdf7ac1159972b6cab51a748f835508b0d299c41676e0af80552b8943e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenB transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must swap more than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_91617ad5530a96361475c88be8826e5d765e189e7eefba4189ee5193eb8186c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient tokenB liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0dd1bb87909c1a222b9bc9b844bf61c36a3c9b49bf32f65912d0b8a3119eb3ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenA transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must stake more than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_124db59a15658e29c081eccc4e6206fd987f4a5eb8b7bb482309fc37015e37dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must deposit more than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa9174ef13a66703d1d810273259451006813fb56329987229100b6f47e36032_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60217267 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xCFE69A05 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xFF50ABDC EQ PUSH2 0x28B JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x60217267 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x94B918DE EQ PUSH2 0x207 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2A973DAF EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x3A02A42D EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x3AECD0E3 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x19B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CC SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x439 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP3 SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 SLOAD LT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x772 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x796 SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP3 SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x871 SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A7 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8C1 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3A9A9F34F5831E9C8ECB66AB3AA308B2FF31EACA434615F6C9CADC656A9AF71C DUP3 DUP4 PUSH1 0x40 MLOAD PUSH2 0x910 SWAP3 SWAP2 SWAP1 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP1 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FB SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA31 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2F SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0C SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC61 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCC6 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD15 DUP3 PUSH2 0xCEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD25 DUP2 PUSH2 0xD0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3E PUSH0 DUP4 ADD DUP5 PUSH2 0xD1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD51 DUP2 PUSH2 0xD0B JUMP JUMPDEST DUP2 EQ PUSH2 0xD5B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6C DUP2 PUSH2 0xD48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD87 JUMPI PUSH2 0xD86 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD94 DUP5 DUP3 DUP6 ADD PUSH2 0xD5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDAF DUP2 PUSH2 0xD9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC8 PUSH0 DUP4 ADD DUP5 PUSH2 0xDA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDD7 DUP2 PUSH2 0xD9D JUMP JUMPDEST DUP2 EQ PUSH2 0xDE1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDF2 DUP2 PUSH2 0xDCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE1A DUP5 DUP3 DUP6 ADD PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D757374207769746864726177206D6F7265207468616E203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE67 PUSH1 0x19 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0xE72 DUP3 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE94 DUP2 PUSH2 0xE5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xECF PUSH1 0x1B DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDA DUP3 PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEFC DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF3A DUP3 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xF45 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF5D JUMPI PUSH2 0xF5C PUSH2 0xF03 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF76 PUSH0 DUP4 ADD DUP6 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xF83 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9E DUP2 PUSH2 0xF8A JUMP JUMPDEST DUP2 EQ PUSH2 0xFA8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFB9 DUP2 PUSH2 0xF95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFE1 DUP5 DUP3 DUP6 ADD PUSH2 0xFAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E42207472616E73666572206661696C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x101E PUSH1 0x16 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1029 DUP3 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x104B DUP2 PUSH2 0x1012 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1060 DUP2 PUSH2 0xDCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH2 0x107A PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1088 DUP5 DUP3 DUP6 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073776170206D6F7265207468616E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10C5 PUSH1 0x15 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D0 DUP3 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F2 DUP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E42206C6971756964697479000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x112D PUSH1 0x1D DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1138 DUP3 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x115A DUP2 PUSH2 0x1121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1174 PUSH0 DUP4 ADD DUP7 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x1181 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x118E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDA6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E41207472616E73666572206661696C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11CA PUSH1 0x16 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D5 DUP3 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11F7 DUP2 PUSH2 0x11BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1211 PUSH0 DUP4 ADD DUP6 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x121E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D757374207374616B65206D6F7265207468616E203000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1259 PUSH1 0x16 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1264 DUP3 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1286 DUP2 PUSH2 0x124D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1297 DUP3 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0x12A2 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12BA JUMPI PUSH2 0x12B9 PUSH2 0xF03 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D757374206465706F736974206D6F7265207468616E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F4 PUSH1 0x18 DUP4 PUSH2 0xE23 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FF DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1321 DUP2 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x90 0xDD 0x2D DUP5 BYTE 0xAA RETURN MULMOD JUMPDEST 0xAF 0x29 DUP7 EOFCREATE 0x13 0xC0 0xE8 0x26 0x27 0xE8 EOFCREATE 0xC8 0x2B 0xC6 SWAP9 PUSH16 0x9AD9D257561A64736F6C634300081E00 CALLER ",
		"sourceMap": "445:4779:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4816:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2894:516;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4543:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5088:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;524:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;854:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3603:788;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2353:436;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1784:449;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;755:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;941:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;497:21;;;;;;;;;;;;;:::o;4816:121::-;4882:7;4908:16;:22;4925:4;4908:22;;;;;;;;;;;;;;;;4901:29;;4816:121;;;:::o;2894:516::-;2964:1;2955:6;:10;2947:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3042:6;3013:13;:25;3027:10;3013:25;;;;;;;;;;;;;;;;:35;;3005:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3128:6;3099:13;:25;3113:10;3099:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;3159:6;3144:11;;:21;;;;;;;:::i;:::-;;;;;;;;3266:6;;;;;;;;;;;3259:23;;;3283:10;3295:6;3259:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3238:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;3384:10;3374:29;;;3396:6;3374:29;;;;;;:::i;:::-;;;;;;;;2894:516;:::o;4543:115::-;4606:7;4632:13;:19;4646:4;4632:19;;;;;;;;;;;;;;;;4625:26;;4543:115;;;:::o;5088:134::-;5151:7;5184:5;5177:23;;;5209:4;5177:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5170:45;;5088:134;;;:::o;524:21::-;;;;;;;;;;;;;:::o;614:48::-;;;;;;;;;;;;;;;;;:::o;854:26::-;;;;:::o;3603:788::-;3669:1;3660:6;:10;3652:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3803:6;3785:14;;:24;;3777:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3939:6;;;;;;;;;;;3932:27;;;3960:10;3980:4;3987:6;3932:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3911:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;4138:6;;;;;;;;;;;4131:23;;;4155:10;4167:6;4131:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4110:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;4319:6;4301:14;;:24;;;;;;;:::i;:::-;;;;;;;;4357:10;4349:35;;;4369:6;4377;4349:35;;;;;;;:::i;:::-;;;;;;;;3603:788;:::o;2353:436::-;2420:1;2411:6;:10;2403:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2544:6;;;;;;;;;;;2537:27;;;2565:10;2585:4;2592:6;2537:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2516:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;2695:6;2666:13;:25;2680:10;2666:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;2726:6;2711:11;;:21;;;;;;;:::i;:::-;;;;;;;;2763:10;2756:26;;;2775:6;2756:26;;;;;;:::i;:::-;;;;;;;;2353:436;:::o;1784:449::-;1853:1;1844:6;:10;1836:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1979:6;;;;;;;;;;;1972:27;;;2000:10;2020:4;2027:6;1972:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1951:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;2133:6;2101:16;:28;2118:10;2101:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;2167:6;2149:14;;:24;;;;;;;:::i;:::-;;;;;;;;2207:10;2197:29;;;2219:6;2197:29;;;;;;:::i;:::-;;;;;;;;1784:449;:::o;755:51::-;;;;;;;;;;;;;;;;;:::o;941:29::-;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:77::-;1565:7;1594:5;1583:16;;1528:77;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:169::-;2655:11;2689:6;2684:3;2677:19;2729:4;2724:3;2720:14;2705:29;;2571:169;;;;:::o;2746:175::-;2886:27;2882:1;2874:6;2870:14;2863:51;2746:175;:::o;2927:366::-;3069:3;3090:67;3154:2;3149:3;3090:67;:::i;:::-;3083:74;;3166:93;3255:3;3166:93;:::i;:::-;3284:2;3279:3;3275:12;3268:19;;2927:366;;;:::o;3299:419::-;3465:4;3503:2;3492:9;3488:18;3480:26;;3552:9;3546:4;3542:20;3538:1;3527:9;3523:17;3516:47;3580:131;3706:4;3580:131;:::i;:::-;3572:139;;3299:419;;;:::o;3724:177::-;3864:29;3860:1;3852:6;3848:14;3841:53;3724:177;:::o;3907:366::-;4049:3;4070:67;4134:2;4129:3;4070:67;:::i;:::-;4063:74;;4146:93;4235:3;4146:93;:::i;:::-;4264:2;4259:3;4255:12;4248:19;;3907:366;;;:::o;4279:419::-;4445:4;4483:2;4472:9;4468:18;4460:26;;4532:9;4526:4;4522:20;4518:1;4507:9;4503:17;4496:47;4560:131;4686:4;4560:131;:::i;:::-;4552:139;;4279:419;;;:::o;4704:180::-;4752:77;4749:1;4742:88;4849:4;4846:1;4839:15;4873:4;4870:1;4863:15;4890:194;4930:4;4950:20;4968:1;4950:20;:::i;:::-;4945:25;;4984:20;5002:1;4984:20;:::i;:::-;4979:25;;5028:1;5025;5021:9;5013:17;;5052:1;5046:4;5043:11;5040:37;;;5057:18;;:::i;:::-;5040:37;4890:194;;;;:::o;5090:332::-;5211:4;5249:2;5238:9;5234:18;5226:26;;5262:71;5330:1;5319:9;5315:17;5306:6;5262:71;:::i;:::-;5343:72;5411:2;5400:9;5396:18;5387:6;5343:72;:::i;:::-;5090:332;;;;;:::o;5428:90::-;5462:7;5505:5;5498:13;5491:21;5480:32;;5428:90;;;:::o;5524:116::-;5594:21;5609:5;5594:21;:::i;:::-;5587:5;5584:32;5574:60;;5630:1;5627;5620:12;5574:60;5524:116;:::o;5646:137::-;5700:5;5731:6;5725:13;5716:22;;5747:30;5771:5;5747:30;:::i;:::-;5646:137;;;;:::o;5789:345::-;5856:6;5905:2;5893:9;5884:7;5880:23;5876:32;5873:119;;;5911:79;;:::i;:::-;5873:119;6031:1;6056:61;6109:7;6100:6;6089:9;6085:22;6056:61;:::i;:::-;6046:71;;6002:125;5789:345;;;;:::o;6140:172::-;6280:24;6276:1;6268:6;6264:14;6257:48;6140:172;:::o;6318:366::-;6460:3;6481:67;6545:2;6540:3;6481:67;:::i;:::-;6474:74;;6557:93;6646:3;6557:93;:::i;:::-;6675:2;6670:3;6666:12;6659:19;;6318:366;;;:::o;6690:419::-;6856:4;6894:2;6883:9;6879:18;6871:26;;6943:9;6937:4;6933:20;6929:1;6918:9;6914:17;6907:47;6971:131;7097:4;6971:131;:::i;:::-;6963:139;;6690:419;;;:::o;7115:143::-;7172:5;7203:6;7197:13;7188:22;;7219:33;7246:5;7219:33;:::i;:::-;7115:143;;;;:::o;7264:351::-;7334:6;7383:2;7371:9;7362:7;7358:23;7354:32;7351:119;;;7389:79;;:::i;:::-;7351:119;7509:1;7534:64;7590:7;7581:6;7570:9;7566:22;7534:64;:::i;:::-;7524:74;;7480:128;7264:351;;;;:::o;7621:171::-;7761:23;7757:1;7749:6;7745:14;7738:47;7621:171;:::o;7798:366::-;7940:3;7961:67;8025:2;8020:3;7961:67;:::i;:::-;7954:74;;8037:93;8126:3;8037:93;:::i;:::-;8155:2;8150:3;8146:12;8139:19;;7798:366;;;:::o;8170:419::-;8336:4;8374:2;8363:9;8359:18;8351:26;;8423:9;8417:4;8413:20;8409:1;8398:9;8394:17;8387:47;8451:131;8577:4;8451:131;:::i;:::-;8443:139;;8170:419;;;:::o;8595:179::-;8735:31;8731:1;8723:6;8719:14;8712:55;8595:179;:::o;8780:366::-;8922:3;8943:67;9007:2;9002:3;8943:67;:::i;:::-;8936:74;;9019:93;9108:3;9019:93;:::i;:::-;9137:2;9132:3;9128:12;9121:19;;8780:366;;;:::o;9152:419::-;9318:4;9356:2;9345:9;9341:18;9333:26;;9405:9;9399:4;9395:20;9391:1;9380:9;9376:17;9369:47;9433:131;9559:4;9433:131;:::i;:::-;9425:139;;9152:419;;;:::o;9577:442::-;9726:4;9764:2;9753:9;9749:18;9741:26;;9777:71;9845:1;9834:9;9830:17;9821:6;9777:71;:::i;:::-;9858:72;9926:2;9915:9;9911:18;9902:6;9858:72;:::i;:::-;9940;10008:2;9997:9;9993:18;9984:6;9940:72;:::i;:::-;9577:442;;;;;;:::o;10025:172::-;10165:24;10161:1;10153:6;10149:14;10142:48;10025:172;:::o;10203:366::-;10345:3;10366:67;10430:2;10425:3;10366:67;:::i;:::-;10359:74;;10442:93;10531:3;10442:93;:::i;:::-;10560:2;10555:3;10551:12;10544:19;;10203:366;;;:::o;10575:419::-;10741:4;10779:2;10768:9;10764:18;10756:26;;10828:9;10822:4;10818:20;10814:1;10803:9;10799:17;10792:47;10856:131;10982:4;10856:131;:::i;:::-;10848:139;;10575:419;;;:::o;11000:332::-;11121:4;11159:2;11148:9;11144:18;11136:26;;11172:71;11240:1;11229:9;11225:17;11216:6;11172:71;:::i;:::-;11253:72;11321:2;11310:9;11306:18;11297:6;11253:72;:::i;:::-;11000:332;;;;;:::o;11338:172::-;11478:24;11474:1;11466:6;11462:14;11455:48;11338:172;:::o;11516:366::-;11658:3;11679:67;11743:2;11738:3;11679:67;:::i;:::-;11672:74;;11755:93;11844:3;11755:93;:::i;:::-;11873:2;11868:3;11864:12;11857:19;;11516:366;;;:::o;11888:419::-;12054:4;12092:2;12081:9;12077:18;12069:26;;12141:9;12135:4;12131:20;12127:1;12116:9;12112:17;12105:47;12169:131;12295:4;12169:131;:::i;:::-;12161:139;;11888:419;;;:::o;12313:191::-;12353:3;12372:20;12390:1;12372:20;:::i;:::-;12367:25;;12406:20;12424:1;12406:20;:::i;:::-;12401:25;;12449:1;12446;12442:9;12435:16;;12470:3;12467:1;12464:10;12461:36;;;12477:18;;:::i;:::-;12461:36;12313:191;;;;:::o;12510:174::-;12650:26;12646:1;12638:6;12634:14;12627:50;12510:174;:::o;12690:366::-;12832:3;12853:67;12917:2;12912:3;12853:67;:::i;:::-;12846:74;;12929:93;13018:3;12929:93;:::i;:::-;13047:2;13042:3;13038:12;13031:19;;12690:366;;;:::o;13062:419::-;13228:4;13266:2;13255:9;13251:18;13243:26;;13315:9;13309:4;13305:20;13301:1;13290:9;13286:17;13279:47;13343:131;13469:4;13343:131;:::i;:::-;13335:139;;13062:419;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract SimpleStaking {\\n    ...\n  PUSH 40\t\t\tcontract SimpleStaking {\\n    ...\n  MSTORE \t\t\tcontract SimpleStaking {\\n    ...\n  CALLVALUE \t\t\tconstructor(address _tokenA, a...\n  DUP1 \t\t\tconstructor(address _tokenA, a...\n  ISZERO \t\t\tconstructor(address _tokenA, a...\n  PUSH [tag] 1\t\t\tconstructor(address _tokenA, a...\n  JUMPI \t\t\tconstructor(address _tokenA, a...\n  PUSH 0\t\t\tconstructor(address _tokenA, a...\n  PUSH 0\t\t\tconstructor(address _tokenA, a...\n  REVERT \t\t\tconstructor(address _tokenA, a...\ntag 1\t\t\tconstructor(address _tokenA, a...\n  JUMPDEST \t\t\tconstructor(address _tokenA, a...\n  POP \t\t\tconstructor(address _tokenA, a...\n  PUSH 40\t\t\tconstructor(address _tokenA, a...\n  MLOAD \t\t\tconstructor(address _tokenA, a...\n  PUSHSIZE \t\t\tconstructor(address _tokenA, a...\n  CODESIZE \t\t\tconstructor(address _tokenA, a...\n  SUB \t\t\tconstructor(address _tokenA, a...\n  DUP1 \t\t\tconstructor(address _tokenA, a...\n  PUSHSIZE \t\t\tconstructor(address _tokenA, a...\n  DUP4 \t\t\tconstructor(address _tokenA, a...\n  CODECOPY \t\t\tconstructor(address _tokenA, a...\n  DUP2 \t\t\tconstructor(address _tokenA, a...\n  DUP2 \t\t\tconstructor(address _tokenA, a...\n  ADD \t\t\tconstructor(address _tokenA, a...\n  PUSH 40\t\t\tconstructor(address _tokenA, a...\n  MSTORE \t\t\tconstructor(address _tokenA, a...\n  DUP2 \t\t\tconstructor(address _tokenA, a...\n  ADD \t\t\tconstructor(address _tokenA, a...\n  SWAP1 \t\t\tconstructor(address _tokenA, a...\n  PUSH [tag] 2\t\t\tconstructor(address _tokenA, a...\n  SWAP2 \t\t\tconstructor(address _tokenA, a...\n  SWAP1 \t\t\tconstructor(address _tokenA, a...\n  PUSH [tag] 3\t\t\tconstructor(address _tokenA, a...\n  JUMP \t\t\tconstructor(address _tokenA, a...\ntag 2\t\t\tconstructor(address _tokenA, a...\n  JUMPDEST \t\t\tconstructor(address _tokenA, a...\n  PUSH 0\t\t\t0\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_tokenA != address(0)\n  AND \t\t\t_tokenA != address(0)\n  DUP3 \t\t\t_tokenA\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_tokenA != address(0)\n  AND \t\t\t_tokenA != address(0)\n  SUB \t\t\t_tokenA != address(0)\n  PUSH [tag] 6\t\t\trequire(_tokenA != address(0),...\n  JUMPI \t\t\trequire(_tokenA != address(0),...\n  PUSH 40\t\t\trequire(_tokenA != address(0),...\n  MLOAD \t\t\trequire(_tokenA != address(0),...\n  PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(_tokenA != address(0),...\n  DUP2 \t\t\trequire(_tokenA != address(0),...\n  MSTORE \t\t\trequire(_tokenA != address(0),...\n  PUSH 4\t\t\trequire(_tokenA != address(0),...\n  ADD \t\t\trequire(_tokenA != address(0),...\n  PUSH [tag] 7\t\t\trequire(_tokenA != address(0),...\n  SWAP1 \t\t\trequire(_tokenA != address(0),...\n  PUSH [tag] 8\t\t\trequire(_tokenA != address(0),...\n  JUMP \t\t\trequire(_tokenA != address(0),...\ntag 7\t\t\trequire(_tokenA != address(0),...\n  JUMPDEST \t\t\trequire(_tokenA != address(0),...\n  PUSH 40\t\t\trequire(_tokenA != address(0),...\n  MLOAD \t\t\trequire(_tokenA != address(0),...\n  DUP1 \t\t\trequire(_tokenA != address(0),...\n  SWAP2 \t\t\trequire(_tokenA != address(0),...\n  SUB \t\t\trequire(_tokenA != address(0),...\n  SWAP1 \t\t\trequire(_tokenA != address(0),...\n  REVERT \t\t\trequire(_tokenA != address(0),...\ntag 6\t\t\trequire(_tokenA != address(0),...\n  JUMPDEST \t\t\trequire(_tokenA != address(0),...\n  PUSH 0\t\t\t0\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_tokenB != address(0)\n  AND \t\t\t_tokenB != address(0)\n  DUP2 \t\t\t_tokenB\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_tokenB != address(0)\n  AND \t\t\t_tokenB != address(0)\n  SUB \t\t\t_tokenB != address(0)\n  PUSH [tag] 9\t\t\trequire(_tokenB != address(0),...\n  JUMPI \t\t\trequire(_tokenB != address(0),...\n  PUSH 40\t\t\trequire(_tokenB != address(0),...\n  MLOAD \t\t\trequire(_tokenB != address(0),...\n  PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(_tokenB != address(0),...\n  DUP2 \t\t\trequire(_tokenB != address(0),...\n  MSTORE \t\t\trequire(_tokenB != address(0),...\n  PUSH 4\t\t\trequire(_tokenB != address(0),...\n  ADD \t\t\trequire(_tokenB != address(0),...\n  PUSH [tag] 10\t\t\trequire(_tokenB != address(0),...\n  SWAP1 \t\t\trequire(_tokenB != address(0),...\n  PUSH [tag] 11\t\t\trequire(_tokenB != address(0),...\n  JUMP \t\t\trequire(_tokenB != address(0),...\ntag 10\t\t\trequire(_tokenB != address(0),...\n  JUMPDEST \t\t\trequire(_tokenB != address(0),...\n  PUSH 40\t\t\trequire(_tokenB != address(0),...\n  MLOAD \t\t\trequire(_tokenB != address(0),...\n  DUP1 \t\t\trequire(_tokenB != address(0),...\n  SWAP2 \t\t\trequire(_tokenB != address(0),...\n  SUB \t\t\trequire(_tokenB != address(0),...\n  SWAP1 \t\t\trequire(_tokenB != address(0),...\n  REVERT \t\t\trequire(_tokenB != address(0),...\ntag 9\t\t\trequire(_tokenB != address(0),...\n  JUMPDEST \t\t\trequire(_tokenB != address(0),...\n  DUP2 \t\t\t_tokenA\n  PUSH 0\t\t\ttokenA\n  PUSH 0\t\t\ttokenA\n  PUSH 100\t\t\ttokenA = _tokenA\n  EXP \t\t\ttokenA = _tokenA\n  DUP2 \t\t\ttokenA = _tokenA\n  SLOAD \t\t\ttokenA = _tokenA\n  DUP2 \t\t\ttokenA = _tokenA\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenA = _tokenA\n  MUL \t\t\ttokenA = _tokenA\n  NOT \t\t\ttokenA = _tokenA\n  AND \t\t\ttokenA = _tokenA\n  SWAP1 \t\t\ttokenA = _tokenA\n  DUP4 \t\t\ttokenA = _tokenA\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenA = _tokenA\n  AND \t\t\ttokenA = _tokenA\n  MUL \t\t\ttokenA = _tokenA\n  OR \t\t\ttokenA = _tokenA\n  SWAP1 \t\t\ttokenA = _tokenA\n  SSTORE \t\t\ttokenA = _tokenA\n  POP \t\t\ttokenA = _tokenA\n  DUP1 \t\t\t_tokenB\n  PUSH 1\t\t\ttokenB\n  PUSH 0\t\t\ttokenB\n  PUSH 100\t\t\ttokenB = _tokenB\n  EXP \t\t\ttokenB = _tokenB\n  DUP2 \t\t\ttokenB = _tokenB\n  SLOAD \t\t\ttokenB = _tokenB\n  DUP2 \t\t\ttokenB = _tokenB\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenB = _tokenB\n  MUL \t\t\ttokenB = _tokenB\n  NOT \t\t\ttokenB = _tokenB\n  AND \t\t\ttokenB = _tokenB\n  SWAP1 \t\t\ttokenB = _tokenB\n  DUP4 \t\t\ttokenB = _tokenB\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenB = _tokenB\n  AND \t\t\ttokenB = _tokenB\n  MUL \t\t\ttokenB = _tokenB\n  OR \t\t\ttokenB = _tokenB\n  SWAP1 \t\t\ttokenB = _tokenB\n  SSTORE \t\t\ttokenB = _tokenB\n  POP \t\t\ttokenB = _tokenB\n  POP \t\t\tconstructor(address _tokenA, a...\n  POP \t\t\tconstructor(address _tokenA, a...\n  PUSH [tag] 12\t\t\tcontract SimpleStaking {\\n    ...\n  JUMP \t\t\tcontract SimpleStaking {\\n    ...\ntag 14\t\t\tn transferFrom(address sender,...\n  JUMPDEST \t\t\tn transferFrom(address sender,...\n  PUSH 0\t\t\tf\n  PUSH 0\t\t\ta\n  REVERT \t\t\ttion transfe\ntag 16\t\t\t}\\n\\n/**\\n * @title SimpleStak...\n  JUMPDEST \t\t\t}\\n\\n/**\\n * @title SimpleStak...\n  PUSH 0\t\t\tv A con\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tenA/tokenB swap functionality\\...\n  DUP3 \t\t\tand t\n  AND \t\t\ting and tokenA/tokenB swap fun...\n  SWAP1 \t\t\ttokenB staking and tokenA/toke...\n  POP \t\t\ttokenB staking and tokenA/toke...\n  SWAP2 \t\t\t}\\n\\n/**\\n * @title SimpleStak...\n  SWAP1 \t\t\t}\\n\\n/**\\n * @title SimpleStak...\n  POP \t\t\t}\\n\\n/**\\n * @title SimpleStak...\n  JUMP \t\t\t}\\n\\n/**\\n * @title SimpleStak...\ntag 17\t\t\tg {\\n    // Token addresses\\n ...\n  JUMPDEST \t\t\tg {\\n    // Token addresses\\n ...\n  PUSH 0\t\t\ts publi\n  PUSH [tag] 31\t\t\tpublic tokenB;\\n    \\n    \n  DUP3 \t\t\t \\n   \n  PUSH [tag] 16\t\t\tpublic tokenB;\\n    \\n    \n  JUMP \t\t\tpublic tokenB;\\n    \\n    \ntag 31\t\t\tpublic tokenB;\\n    \\n    \n  JUMPDEST \t\t\tpublic tokenB;\\n    \\n    \n  SWAP1 \t\t\t   address public tokenB;\\n   ...\n  POP \t\t\t   address public tokenB;\\n   ...\n  SWAP2 \t\t\tg {\\n    // Token addresses\\n ...\n  SWAP1 \t\t\tg {\\n    // Token addresses\\n ...\n  POP \t\t\tg {\\n    // Token addresses\\n ...\n  JUMP \t\t\tg {\\n    // Token addresses\\n ...\ntag 18\t\t\to track each user's staked tok...\n  JUMPDEST \t\t\to track each user's staked tok...\n  PUSH [tag] 33\t\t\t public stakedBalance;\\n \n  DUP2 \t\t\tnce;\\n\n  PUSH [tag] 17\t\t\t public stakedBalance;\\n \n  JUMP \t\t\t public stakedBalance;\\n \ntag 33\t\t\t public stakedBalance;\\n \n  JUMPDEST \t\t\t public stakedBalance;\\n \n  DUP2 \t\t\tint25\n  EQ \t\t\t> uint256) public stakedBalanc...\n  PUSH [tag] 34\t\t\t(address => uint256) public st...\n  JUMPI \t\t\t(address => uint256) public st...\n  PUSH 0\t\t\ti\n  PUSH 0\t\t\ta\n  REVERT \t\t\t   // Mappin\ntag 34\t\t\t(address => uint256) public st...\n  JUMPDEST \t\t\t(address => uint256) public st...\n  POP \t\t\to track each user's staked tok...\n  JUMP \t\t\to track each user's staked tok...\ntag 19\t\t\th user's deposited tokenB bala...\n  JUMPDEST \t\t\th user's deposited tokenB bala...\n  PUSH 0\t\t\t  map\n  DUP2 \t\t\tublic \n  MLOAD \t\t\t256) public d\n  SWAP1 \t\t\ts => uint256) public d\n  POP \t\t\ts => uint256) public d\n  PUSH [tag] 36\t\t\talance;\\n    \\n    // Total am...\n  DUP2 \t\t\tmount\n  PUSH [tag] 18\t\t\talance;\\n    \\n    // Total am...\n  JUMP \t\t\talance;\\n    \\n    // Total am...\ntag 36\t\t\talance;\\n    \\n    // Total am...\n  JUMPDEST \t\t\talance;\\n    \\n    // Total am...\n  SWAP3 \t\t\th user's deposited tokenB bala...\n  SWAP2 \t\t\th user's deposited tokenB bala...\n  POP \t\t\th user's deposited tokenB bala...\n  POP \t\t\th user's deposited tokenB bala...\n  JUMP \t\t\th user's deposited tokenB bala...\ntag 3\t\t\taked\\n    uint256 public total...\n  JUMPDEST \t\t\taked\\n    uint256 public total...\n  PUSH 0\t\t\ted for\n  PUSH 0\t\t\twaps\\n \n  PUSH 40\t\t\t//\n  DUP4 \t\t\td;\\n    \\n \n  DUP6 \t\t\tlDeposi\n  SUB \t\t\ttotalDeposited;\\n    \\n  \n  SLT \t\t\tlic totalDeposited;\\n    \\n   ...\n  ISZERO \t\t\tpublic totalDeposited;\\n    \\n...\n  PUSH [tag] 38\t\t\tpublic totalDeposited;\\n    \\n...\n  JUMPI \t\t\tpublic totalDeposited;\\n    \\n...\n  PUSH [tag] 39\t\t\tnts\\n    event Staked(address ...\n  PUSH [tag] 14\t\t\tnts\\n    event Staked(address ...\n  JUMP \t\t\tnts\\n    event Staked(address ...\ntag 39\t\t\tnts\\n    event Staked(address ...\n  JUMPDEST \t\t\tnts\\n    event Staked(address ...\ntag 38\t\t\tpublic totalDeposited;\\n    \\n...\n  JUMPDEST \t\t\tpublic totalDeposited;\\n    \\n...\n  PUSH 0\t\t\t \n  PUSH [tag] 40\t\t\ts indexed user, uint256 amount...\n  DUP6 \t\t\tss inde\n  DUP3 \t\t\tped(ad\n  DUP7 \t\t\t event Sw\n  ADD \t\t\t\\n    event Swapped(add\n  PUSH [tag] 19\t\t\ts indexed user, uint256 amount...\n  JUMP \t\t\ts indexed user, uint256 amount...\ntag 40\t\t\ts indexed user, uint256 amount...\n  JUMPDEST \t\t\ts indexed user, uint256 amount...\n  SWAP3 \t\t\tted(address indexed user, uint...\n  POP \t\t\tted(address indexed user, uint...\n  POP \t\t\texed user, uint256 amount);\\n ...\n  PUSH 20\t\t\t  \n  PUSH [tag] 41\t\t\tstructor to set token addresse...\n  DUP6 \t\t\tdress o\n  DUP3 \t\t\ttokenA\n  DUP7 \t\t\t * @param\n  ADD \t\t\t     * @param _tokenA \n  PUSH [tag] 19\t\t\tstructor to set token addresse...\n  JUMP \t\t\tstructor to set token addresse...\ntag 41\t\t\tstructor to set token addresse...\n  JUMPDEST \t\t\tstructor to set token addresse...\n  SWAP2 \t\t\t* @dev Constructor to set toke...\n  POP \t\t\t* @dev Constructor to set toke...\n  POP \t\t\tuntIn, uint256 amountOut);\\n  ...\n  SWAP3 \t\t\taked\\n    uint256 public total...\n  POP \t\t\taked\\n    uint256 public total...\n  SWAP3 \t\t\taked\\n    uint256 public total...\n  SWAP1 \t\t\taked\\n    uint256 public total...\n  POP \t\t\taked\\n    uint256 public total...\n  JUMP \t\t\taked\\n    uint256 public total...\ntag 20\t\t\t_tokenB Address of token B\\n  ...\n  JUMPDEST \t\t\t_tokenB Address of token B\\n  ...\n  PUSH 0\t\t\t {\\n        \n  DUP3 \t\t\tess(0)\n  DUP3 \t\t\t ad\n  MSTORE \t\t\tkenA != address(0),\n  PUSH 20\t\t\t   r\n  DUP3 \t\t\t   \n  ADD \t\t\t\");\\n        re\n  SWAP1 \t\t\t tokenA address\");\\n        re\n  POP \t\t\t tokenA address\");\\n        re\n  SWAP3 \t\t\t_tokenB Address of token B\\n  ...\n  SWAP2 \t\t\t_tokenB Address of token B\\n  ...\n  POP \t\t\t_tokenB Address of token B\\n  ...\n  POP \t\t\t_tokenB Address of token B\\n  ...\n  JUMP \t\t\t_tokenB Address of token B\\n  ...\ntag 21\t\t\tB != address(0), \"Invalid toke...\n  JUMPDEST \t\t\tB != address(0), \"Invalid toke...\n  PUSH 496E76616C696420746F6B656E41206164647265737300000000000000000000\t\t\tB into the contract to p\n  PUSH 0\t\t\to\n  DUP3 \t\t\teposit\n  ADD \t\t\tev Deposit tok\n  MSTORE \t\t\t   * @dev Deposit tokenB into ...\n  POP \t\t\tB != address(0), \"Invalid toke...\n  JUMP \t\t\tB != address(0), \"Invalid toke...\ntag 22\t\t\tquidity\\n     * @param amount ...\n  JUMPDEST \t\t\tquidity\\n     * @param amount ...\n  PUSH 0\t\t\t0, \n  PUSH [tag] 45\t\t\t than 0\");\\n        \\n        ...\n  PUSH 16\t\t\tra\n  DUP4 \t\t\t co\n  PUSH [tag] 20\t\t\t than 0\");\\n        \\n        ...\n  JUMP \t\t\t than 0\");\\n        \\n        ...\ntag 45\t\t\t than 0\");\\n        \\n        ...\n  JUMPDEST \t\t\t than 0\");\\n        \\n        ...\n  SWAP2 \t\t\tit more than 0\");\\n        \\n ...\n  POP \t\t\tit more than 0\");\\n        \\n ...\n  PUSH [tag] 46\t\t\t require(\\n            IERC20(...\n  DUP3 \t\t\t   \n  PUSH [tag] 21\t\t\t require(\\n            IERC20(...\n  JUMP \t\t\t require(\\n            IERC20(...\ntag 46\t\t\t require(\\n            IERC20(...\n  JUMPDEST \t\t\t require(\\n            IERC20(...\n  PUSH 20\t\t\tle\n  DUP3 \t\t\tr f\n  ADD \t\t\tnsfer failed\n  SWAP1 \t\t\tenB transfer failed\n  POP \t\t\tenB transfer failed\n  SWAP2 \t\t\tquidity\\n     * @param amount ...\n  SWAP1 \t\t\tquidity\\n     * @param amount ...\n  POP \t\t\tquidity\\n     * @param amount ...\n  JUMP \t\t\tquidity\\n     * @param amount ...\ntag 8\t\t\t\\n        \\n        depositedB...\n  JUMPDEST \t\t\t\\n        \\n        depositedB...\n  PUSH 0\t\t\t   *\n  PUSH 20\t\t\tct\n  DUP3 \t\t\t the cont\n  ADD \t\t\tinto the contract\\n\n  SWAP1 \t\t\t tokenB into the contract\\n\n  POP \t\t\t tokenB into the contract\\n\n  DUP2 \t\t\ttake\\n    \n  DUP2 \t\t\tB to\n  SUB \t\t\tokenB to stake\\n     \n  PUSH 0\t\t\to\n  DUP4 \t\t\tThe amoun\n  ADD \t\t\tunt The amount of\n  MSTORE \t\t\tram amount The amount of token...\n  PUSH [tag] 48\t\t\take(uint256 amount) external {...\n  DUP2 \t\t\t use\n  PUSH [tag] 22\t\t\take(uint256 amount) external {...\n  JUMP \t\t\take(uint256 amount) external {...\ntag 48\t\t\take(uint256 amount) external {...\n  JUMPDEST \t\t\take(uint256 amount) external {...\n  SWAP1 \t\t\tction stake(uint256 amount) ex...\n  POP \t\t\tction stake(uint256 amount) ex...\n  SWAP2 \t\t\t\\n        \\n        depositedB...\n  SWAP1 \t\t\t\\n        \\n        depositedB...\n  POP \t\t\t\\n        \\n        depositedB...\n  JUMP \t\t\t\\n        \\n        depositedB...\ntag 23\t\t\t        require(\\n            ...\n  JUMPDEST \t\t\t        require(\\n            ...\n  PUSH 496E76616C696420746F6B656E42206164647265737300000000000000000000\t\t\t\\n        \\n        staked\n  PUSH 0\t\t\t \n  DUP3 \t\t\t\"\\n    \n  ADD \t\t\tiled\"\\n        \n  MSTORE \t\t\tsfer failed\"\\n        );\\n    ...\n  POP \t\t\t        require(\\n            ...\n  JUMP \t\t\t        require(\\n            ...\ntag 24\t\t\tnder] += amount;\\n        tota...\n  JUMPDEST \t\t\tnder] += amount;\\n        tota...\n  PUSH 0\t\t\ted \n  PUSH [tag] 51\t\t\tam amount The amount to withdr...\n  PUSH 16\t\t\tin\n  DUP4 \t\t\traw\n  PUSH [tag] 20\t\t\tam amount The amount to withdr...\n  JUMP \t\t\tam amount The amount to withdr...\ntag 51\t\t\tam amount The amount to withdr...\n  JUMPDEST \t\t\tam amount The amount to withdr...\n  SWAP2 \t\t\t * @param amount The amount to...\n  POP \t\t\t * @param amount The amount to...\n  PUSH [tag] 52\t\t\tt) external {\\n        require...\n  DUP3 \t\t\ttak\n  PUSH [tag] 23\t\t\tt) external {\\n        require...\n  JUMP \t\t\tt) external {\\n        require...\ntag 52\t\t\tt) external {\\n        require...\n  JUMPDEST \t\t\tt) external {\\n        require...\n  PUSH 20\t\t\tmo\n  DUP3 \t\t\t >=\n  ADD \t\t\tder] >= amou\n  SWAP1 \t\t\tmsg.sender] >= amou\n  POP \t\t\tmsg.sender] >= amou\n  SWAP2 \t\t\tnder] += amount;\\n        tota...\n  SWAP1 \t\t\tnder] += amount;\\n        tota...\n  POP \t\t\tnder] += amount;\\n        tota...\n  JUMP \t\t\tnder] += amount;\\n        tota...\ntag 11\t\t\tcient staked balance\");\\n     ...\n  JUMPDEST \t\t\tcient staked balance\");\\n     ...\n  PUSH 0\t\t\t use\n  PUSH 20\t\t\tC2\n  DUP3 \t\t\t        I\n  ADD \t\t\t            IERC20\n  SWAP1 \t\t\tequire(\\n            IERC20\n  POP \t\t\tequire(\\n            IERC20\n  DUP2 \t\t\t     \"Tok\n  DUP2 \t\t\t    \n  SUB \t\t\t),\\n            \"Toke\n  PUSH 0\t\t\to\n  DUP4 \t\t\t.sender, \n  ADD \t\t\t(msg.sender, amou\n  MSTORE \t\t\transfer(msg.sender, amount),\\n...\n  PUSH [tag] 54\t\t\t\"\\n        );\\n        \\n     ...\n  DUP2 \t\t\tatio\n  PUSH [tag] 24\t\t\t\"\\n        );\\n        \\n     ...\n  JUMP \t\t\t\"\\n        );\\n        \\n     ...\ntag 54\t\t\t\"\\n        );\\n        \\n     ...\n  JUMPDEST \t\t\t\"\\n        );\\n        \\n     ...\n  SWAP1 \t\t\tr failed\"\\n        );\\n       ...\n  POP \t\t\tr failed\"\\n        );\\n       ...\n  SWAP2 \t\t\tcient staked balance\");\\n     ...\n  SWAP1 \t\t\tcient staked balance\");\\n     ...\n  POP \t\t\tcient staked balance\");\\n     ...\n  JUMP \t\t\tcient staked balance\");\\n     ...\ntag 12\t\t\tcontract SimpleStaking {\\n    ...\n  JUMPDEST \t\t\tcontract SimpleStaking {\\n    ...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract SimpleStaking {\\n    ...\n  DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract SimpleStaking {\\n    ...\n  PUSH 0\t\t\tcontract SimpleStaking {\\n    ...\n  CODECOPY \t\t\tcontract SimpleStaking {\\n    ...\n  PUSH 0\t\t\tcontract SimpleStaking {\\n    ...\n  RETURN \t\t\tcontract SimpleStaking {\\n    ...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 40\t\t\tcontract SimpleStaking {\\n    ...\n      MSTORE \t\t\tcontract SimpleStaking {\\n    ...\n      CALLVALUE \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      ISZERO \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 1\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 0\t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 0\t\t\tcontract SimpleStaking {\\n    ...\n      REVERT \t\t\tcontract SimpleStaking {\\n    ...\n    tag 1\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPDEST \t\t\tcontract SimpleStaking {\\n    ...\n      POP \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 4\t\t\tcontract SimpleStaking {\\n    ...\n      CALLDATASIZE \t\t\tcontract SimpleStaking {\\n    ...\n      LT \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 2\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 0\t\t\tcontract SimpleStaking {\\n    ...\n      CALLDATALOAD \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH E0\t\t\tcontract SimpleStaking {\\n    ...\n      SHR \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 60217267\t\t\tcontract SimpleStaking {\\n    ...\n      GT \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 16\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH A694FC3A\t\t\tcontract SimpleStaking {\\n    ...\n      GT \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 17\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH A694FC3A\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 12\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH B6B55F25\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 13\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH CFE69A05\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 14\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH FF50ABDC\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 15\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 2\t\t\tcontract SimpleStaking {\\n    ...\n      JUMP \t\t\tcontract SimpleStaking {\\n    ...\n    tag 17\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPDEST \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 60217267\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 9\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 817B1CD2\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 10\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 94B918DE\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 11\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 2\t\t\tcontract SimpleStaking {\\n    ...\n      JUMP \t\t\tcontract SimpleStaking {\\n    ...\n    tag 16\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPDEST \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH FC63D10\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 3\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 2A973DAF\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 4\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 2E1A7D4D\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 5\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 3A02A42D\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 6\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 3AECD0E3\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 7\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n      DUP1 \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 5F64B55B\t\t\tcontract SimpleStaking {\\n    ...\n      EQ \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH [tag] 8\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPI \t\t\tcontract SimpleStaking {\\n    ...\n    tag 2\t\t\tcontract SimpleStaking {\\n    ...\n      JUMPDEST \t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 0\t\t\tcontract SimpleStaking {\\n    ...\n      PUSH 0\t\t\tcontract SimpleStaking {\\n    ...\n      REVERT \t\t\tcontract SimpleStaking {\\n    ...\n    tag 3\t\t\taddress public tokenA\n      JUMPDEST \t\t\taddress public tokenA\n      PUSH [tag] 18\t\t\taddress public tokenA\n      PUSH [tag] 19\t\t\taddress public tokenA\n      JUMP \t\t\taddress public tokenA\n    tag 18\t\t\taddress public tokenA\n      JUMPDEST \t\t\taddress public tokenA\n      PUSH 40\t\t\taddress public tokenA\n      MLOAD \t\t\taddress public tokenA\n      PUSH [tag] 20\t\t\taddress public tokenA\n      SWAP2 \t\t\taddress public tokenA\n      SWAP1 \t\t\taddress public tokenA\n      PUSH [tag] 21\t\t\taddress public tokenA\n      JUMP \t\t\taddress public tokenA\n    tag 20\t\t\taddress public tokenA\n      JUMPDEST \t\t\taddress public tokenA\n      PUSH 40\t\t\taddress public tokenA\n      MLOAD \t\t\taddress public tokenA\n      DUP1 \t\t\taddress public tokenA\n      SWAP2 \t\t\taddress public tokenA\n      SUB \t\t\taddress public tokenA\n      SWAP1 \t\t\taddress public tokenA\n      RETURN \t\t\taddress public tokenA\n    tag 4\t\t\tfunction getDepositedBalance(a...\n      JUMPDEST \t\t\tfunction getDepositedBalance(a...\n      PUSH [tag] 22\t\t\tfunction getDepositedBalance(a...\n      PUSH 4\t\t\tfunction getDepositedBalance(a...\n      DUP1 \t\t\tfunction getDepositedBalance(a...\n      CALLDATASIZE \t\t\tfunction getDepositedBalance(a...\n      SUB \t\t\tfunction getDepositedBalance(a...\n      DUP2 \t\t\tfunction getDepositedBalance(a...\n      ADD \t\t\tfunction getDepositedBalance(a...\n      SWAP1 \t\t\tfunction getDepositedBalance(a...\n      PUSH [tag] 23\t\t\tfunction getDepositedBalance(a...\n      SWAP2 \t\t\tfunction getDepositedBalance(a...\n      SWAP1 \t\t\tfunction getDepositedBalance(a...\n      PUSH [tag] 24\t\t\tfunction getDepositedBalance(a...\n      JUMP \t\t\tfunction getDepositedBalance(a...\n    tag 23\t\t\tfunction getDepositedBalance(a...\n      JUMPDEST \t\t\tfunction getDepositedBalance(a...\n      PUSH [tag] 25\t\t\tfunction getDepositedBalance(a...\n      JUMP \t\t\tfunction getDepositedBalance(a...\n    tag 22\t\t\tfunction getDepositedBalance(a...\n      JUMPDEST \t\t\tfunction getDepositedBalance(a...\n      PUSH 40\t\t\tfunction getDepositedBalance(a...\n      MLOAD \t\t\tfunction getDepositedBalance(a...\n      PUSH [tag] 26\t\t\tfunction getDepositedBalance(a...\n      SWAP2 \t\t\tfunction getDepositedBalance(a...\n      SWAP1 \t\t\tfunction getDepositedBalance(a...\n      PUSH [tag] 27\t\t\tfunction getDepositedBalance(a...\n      JUMP \t\t\tfunction getDepositedBalance(a...\n    tag 26\t\t\tfunction getDepositedBalance(a...\n      JUMPDEST \t\t\tfunction getDepositedBalance(a...\n      PUSH 40\t\t\tfunction getDepositedBalance(a...\n      MLOAD \t\t\tfunction getDepositedBalance(a...\n      DUP1 \t\t\tfunction getDepositedBalance(a...\n      SWAP2 \t\t\tfunction getDepositedBalance(a...\n      SUB \t\t\tfunction getDepositedBalance(a...\n      SWAP1 \t\t\tfunction getDepositedBalance(a...\n      RETURN \t\t\tfunction getDepositedBalance(a...\n    tag 5\t\t\tfunction withdraw(uint256 amou...\n      JUMPDEST \t\t\tfunction withdraw(uint256 amou...\n      PUSH [tag] 28\t\t\tfunction withdraw(uint256 amou...\n      PUSH 4\t\t\tfunction withdraw(uint256 amou...\n      DUP1 \t\t\tfunction withdraw(uint256 amou...\n      CALLDATASIZE \t\t\tfunction withdraw(uint256 amou...\n      SUB \t\t\tfunction withdraw(uint256 amou...\n      DUP2 \t\t\tfunction withdraw(uint256 amou...\n      ADD \t\t\tfunction withdraw(uint256 amou...\n      SWAP1 \t\t\tfunction withdraw(uint256 amou...\n      PUSH [tag] 29\t\t\tfunction withdraw(uint256 amou...\n      SWAP2 \t\t\tfunction withdraw(uint256 amou...\n      SWAP1 \t\t\tfunction withdraw(uint256 amou...\n      PUSH [tag] 30\t\t\tfunction withdraw(uint256 amou...\n      JUMP \t\t\tfunction withdraw(uint256 amou...\n    tag 29\t\t\tfunction withdraw(uint256 amou...\n      JUMPDEST \t\t\tfunction withdraw(uint256 amou...\n      PUSH [tag] 31\t\t\tfunction withdraw(uint256 amou...\n      JUMP \t\t\tfunction withdraw(uint256 amou...\n    tag 28\t\t\tfunction withdraw(uint256 amou...\n      JUMPDEST \t\t\tfunction withdraw(uint256 amou...\n      STOP \t\t\tfunction withdraw(uint256 amou...\n    tag 6\t\t\tfunction getStakedBalance(addr...\n      JUMPDEST \t\t\tfunction getStakedBalance(addr...\n      PUSH [tag] 32\t\t\tfunction getStakedBalance(addr...\n      PUSH 4\t\t\tfunction getStakedBalance(addr...\n      DUP1 \t\t\tfunction getStakedBalance(addr...\n      CALLDATASIZE \t\t\tfunction getStakedBalance(addr...\n      SUB \t\t\tfunction getStakedBalance(addr...\n      DUP2 \t\t\tfunction getStakedBalance(addr...\n      ADD \t\t\tfunction getStakedBalance(addr...\n      SWAP1 \t\t\tfunction getStakedBalance(addr...\n      PUSH [tag] 33\t\t\tfunction getStakedBalance(addr...\n      SWAP2 \t\t\tfunction getStakedBalance(addr...\n      SWAP1 \t\t\tfunction getStakedBalance(addr...\n      PUSH [tag] 24\t\t\tfunction getStakedBalance(addr...\n      JUMP \t\t\tfunction getStakedBalance(addr...\n    tag 33\t\t\tfunction getStakedBalance(addr...\n      JUMPDEST \t\t\tfunction getStakedBalance(addr...\n      PUSH [tag] 34\t\t\tfunction getStakedBalance(addr...\n      JUMP \t\t\tfunction getStakedBalance(addr...\n    tag 32\t\t\tfunction getStakedBalance(addr...\n      JUMPDEST \t\t\tfunction getStakedBalance(addr...\n      PUSH 40\t\t\tfunction getStakedBalance(addr...\n      MLOAD \t\t\tfunction getStakedBalance(addr...\n      PUSH [tag] 35\t\t\tfunction getStakedBalance(addr...\n      SWAP2 \t\t\tfunction getStakedBalance(addr...\n      SWAP1 \t\t\tfunction getStakedBalance(addr...\n      PUSH [tag] 27\t\t\tfunction getStakedBalance(addr...\n      JUMP \t\t\tfunction getStakedBalance(addr...\n    tag 35\t\t\tfunction getStakedBalance(addr...\n      JUMPDEST \t\t\tfunction getStakedBalance(addr...\n      PUSH 40\t\t\tfunction getStakedBalance(addr...\n      MLOAD \t\t\tfunction getStakedBalance(addr...\n      DUP1 \t\t\tfunction getStakedBalance(addr...\n      SWAP2 \t\t\tfunction getStakedBalance(addr...\n      SUB \t\t\tfunction getStakedBalance(addr...\n      SWAP1 \t\t\tfunction getStakedBalance(addr...\n      RETURN \t\t\tfunction getStakedBalance(addr...\n    tag 7\t\t\tfunction getTokenBalance(addre...\n      JUMPDEST \t\t\tfunction getTokenBalance(addre...\n      PUSH [tag] 36\t\t\tfunction getTokenBalance(addre...\n      PUSH 4\t\t\tfunction getTokenBalance(addre...\n      DUP1 \t\t\tfunction getTokenBalance(addre...\n      CALLDATASIZE \t\t\tfunction getTokenBalance(addre...\n      SUB \t\t\tfunction getTokenBalance(addre...\n      DUP2 \t\t\tfunction getTokenBalance(addre...\n      ADD \t\t\tfunction getTokenBalance(addre...\n      SWAP1 \t\t\tfunction getTokenBalance(addre...\n      PUSH [tag] 37\t\t\tfunction getTokenBalance(addre...\n      SWAP2 \t\t\tfunction getTokenBalance(addre...\n      SWAP1 \t\t\tfunction getTokenBalance(addre...\n      PUSH [tag] 24\t\t\tfunction getTokenBalance(addre...\n      JUMP \t\t\tfunction getTokenBalance(addre...\n    tag 37\t\t\tfunction getTokenBalance(addre...\n      JUMPDEST \t\t\tfunction getTokenBalance(addre...\n      PUSH [tag] 38\t\t\tfunction getTokenBalance(addre...\n      JUMP \t\t\tfunction getTokenBalance(addre...\n    tag 36\t\t\tfunction getTokenBalance(addre...\n      JUMPDEST \t\t\tfunction getTokenBalance(addre...\n      PUSH 40\t\t\tfunction getTokenBalance(addre...\n      MLOAD \t\t\tfunction getTokenBalance(addre...\n      PUSH [tag] 39\t\t\tfunction getTokenBalance(addre...\n      SWAP2 \t\t\tfunction getTokenBalance(addre...\n      SWAP1 \t\t\tfunction getTokenBalance(addre...\n      PUSH [tag] 27\t\t\tfunction getTokenBalance(addre...\n      JUMP \t\t\tfunction getTokenBalance(addre...\n    tag 39\t\t\tfunction getTokenBalance(addre...\n      JUMPDEST \t\t\tfunction getTokenBalance(addre...\n      PUSH 40\t\t\tfunction getTokenBalance(addre...\n      MLOAD \t\t\tfunction getTokenBalance(addre...\n      DUP1 \t\t\tfunction getTokenBalance(addre...\n      SWAP2 \t\t\tfunction getTokenBalance(addre...\n      SUB \t\t\tfunction getTokenBalance(addre...\n      SWAP1 \t\t\tfunction getTokenBalance(addre...\n      RETURN \t\t\tfunction getTokenBalance(addre...\n    tag 8\t\t\taddress public tokenB\n      JUMPDEST \t\t\taddress public tokenB\n      PUSH [tag] 40\t\t\taddress public tokenB\n      PUSH [tag] 41\t\t\taddress public tokenB\n      JUMP \t\t\taddress public tokenB\n    tag 40\t\t\taddress public tokenB\n      JUMPDEST \t\t\taddress public tokenB\n      PUSH 40\t\t\taddress public tokenB\n      MLOAD \t\t\taddress public tokenB\n      PUSH [tag] 42\t\t\taddress public tokenB\n      SWAP2 \t\t\taddress public tokenB\n      SWAP1 \t\t\taddress public tokenB\n      PUSH [tag] 21\t\t\taddress public tokenB\n      JUMP \t\t\taddress public tokenB\n    tag 42\t\t\taddress public tokenB\n      JUMPDEST \t\t\taddress public tokenB\n      PUSH 40\t\t\taddress public tokenB\n      MLOAD \t\t\taddress public tokenB\n      DUP1 \t\t\taddress public tokenB\n      SWAP2 \t\t\taddress public tokenB\n      SUB \t\t\taddress public tokenB\n      SWAP1 \t\t\taddress public tokenB\n      RETURN \t\t\taddress public tokenB\n    tag 9\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 43\t\t\tmapping(address => uint256) pu...\n      PUSH 4\t\t\tmapping(address => uint256) pu...\n      DUP1 \t\t\tmapping(address => uint256) pu...\n      CALLDATASIZE \t\t\tmapping(address => uint256) pu...\n      SUB \t\t\tmapping(address => uint256) pu...\n      DUP2 \t\t\tmapping(address => uint256) pu...\n      ADD \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 44\t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 24\t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 44\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 45\t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 43\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH 40\t\t\tmapping(address => uint256) pu...\n      MLOAD \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 46\t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 27\t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 46\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH 40\t\t\tmapping(address => uint256) pu...\n      MLOAD \t\t\tmapping(address => uint256) pu...\n      DUP1 \t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      SUB \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      RETURN \t\t\tmapping(address => uint256) pu...\n    tag 10\t\t\tuint256 public totalStaked\n      JUMPDEST \t\t\tuint256 public totalStaked\n      PUSH [tag] 47\t\t\tuint256 public totalStaked\n      PUSH [tag] 48\t\t\tuint256 public totalStaked\n      JUMP \t\t\tuint256 public totalStaked\n    tag 47\t\t\tuint256 public totalStaked\n      JUMPDEST \t\t\tuint256 public totalStaked\n      PUSH 40\t\t\tuint256 public totalStaked\n      MLOAD \t\t\tuint256 public totalStaked\n      PUSH [tag] 49\t\t\tuint256 public totalStaked\n      SWAP2 \t\t\tuint256 public totalStaked\n      SWAP1 \t\t\tuint256 public totalStaked\n      PUSH [tag] 27\t\t\tuint256 public totalStaked\n      JUMP \t\t\tuint256 public totalStaked\n    tag 49\t\t\tuint256 public totalStaked\n      JUMPDEST \t\t\tuint256 public totalStaked\n      PUSH 40\t\t\tuint256 public totalStaked\n      MLOAD \t\t\tuint256 public totalStaked\n      DUP1 \t\t\tuint256 public totalStaked\n      SWAP2 \t\t\tuint256 public totalStaked\n      SUB \t\t\tuint256 public totalStaked\n      SWAP1 \t\t\tuint256 public totalStaked\n      RETURN \t\t\tuint256 public totalStaked\n    tag 11\t\t\tfunction swap(uint256 amount) ...\n      JUMPDEST \t\t\tfunction swap(uint256 amount) ...\n      PUSH [tag] 50\t\t\tfunction swap(uint256 amount) ...\n      PUSH 4\t\t\tfunction swap(uint256 amount) ...\n      DUP1 \t\t\tfunction swap(uint256 amount) ...\n      CALLDATASIZE \t\t\tfunction swap(uint256 amount) ...\n      SUB \t\t\tfunction swap(uint256 amount) ...\n      DUP2 \t\t\tfunction swap(uint256 amount) ...\n      ADD \t\t\tfunction swap(uint256 amount) ...\n      SWAP1 \t\t\tfunction swap(uint256 amount) ...\n      PUSH [tag] 51\t\t\tfunction swap(uint256 amount) ...\n      SWAP2 \t\t\tfunction swap(uint256 amount) ...\n      SWAP1 \t\t\tfunction swap(uint256 amount) ...\n      PUSH [tag] 30\t\t\tfunction swap(uint256 amount) ...\n      JUMP \t\t\tfunction swap(uint256 amount) ...\n    tag 51\t\t\tfunction swap(uint256 amount) ...\n      JUMPDEST \t\t\tfunction swap(uint256 amount) ...\n      PUSH [tag] 52\t\t\tfunction swap(uint256 amount) ...\n      JUMP \t\t\tfunction swap(uint256 amount) ...\n    tag 50\t\t\tfunction swap(uint256 amount) ...\n      JUMPDEST \t\t\tfunction swap(uint256 amount) ...\n      STOP \t\t\tfunction swap(uint256 amount) ...\n    tag 12\t\t\tfunction stake(uint256 amount)...\n      JUMPDEST \t\t\tfunction stake(uint256 amount)...\n      PUSH [tag] 53\t\t\tfunction stake(uint256 amount)...\n      PUSH 4\t\t\tfunction stake(uint256 amount)...\n      DUP1 \t\t\tfunction stake(uint256 amount)...\n      CALLDATASIZE \t\t\tfunction stake(uint256 amount)...\n      SUB \t\t\tfunction stake(uint256 amount)...\n      DUP2 \t\t\tfunction stake(uint256 amount)...\n      ADD \t\t\tfunction stake(uint256 amount)...\n      SWAP1 \t\t\tfunction stake(uint256 amount)...\n      PUSH [tag] 54\t\t\tfunction stake(uint256 amount)...\n      SWAP2 \t\t\tfunction stake(uint256 amount)...\n      SWAP1 \t\t\tfunction stake(uint256 amount)...\n      PUSH [tag] 30\t\t\tfunction stake(uint256 amount)...\n      JUMP \t\t\tfunction stake(uint256 amount)...\n    tag 54\t\t\tfunction stake(uint256 amount)...\n      JUMPDEST \t\t\tfunction stake(uint256 amount)...\n      PUSH [tag] 55\t\t\tfunction stake(uint256 amount)...\n      JUMP \t\t\tfunction stake(uint256 amount)...\n    tag 53\t\t\tfunction stake(uint256 amount)...\n      JUMPDEST \t\t\tfunction stake(uint256 amount)...\n      STOP \t\t\tfunction stake(uint256 amount)...\n    tag 13\t\t\tfunction deposit(uint256 amoun...\n      JUMPDEST \t\t\tfunction deposit(uint256 amoun...\n      PUSH [tag] 56\t\t\tfunction deposit(uint256 amoun...\n      PUSH 4\t\t\tfunction deposit(uint256 amoun...\n      DUP1 \t\t\tfunction deposit(uint256 amoun...\n      CALLDATASIZE \t\t\tfunction deposit(uint256 amoun...\n      SUB \t\t\tfunction deposit(uint256 amoun...\n      DUP2 \t\t\tfunction deposit(uint256 amoun...\n      ADD \t\t\tfunction deposit(uint256 amoun...\n      SWAP1 \t\t\tfunction deposit(uint256 amoun...\n      PUSH [tag] 57\t\t\tfunction deposit(uint256 amoun...\n      SWAP2 \t\t\tfunction deposit(uint256 amoun...\n      SWAP1 \t\t\tfunction deposit(uint256 amoun...\n      PUSH [tag] 30\t\t\tfunction deposit(uint256 amoun...\n      JUMP \t\t\tfunction deposit(uint256 amoun...\n    tag 57\t\t\tfunction deposit(uint256 amoun...\n      JUMPDEST \t\t\tfunction deposit(uint256 amoun...\n      PUSH [tag] 58\t\t\tfunction deposit(uint256 amoun...\n      JUMP \t\t\tfunction deposit(uint256 amoun...\n    tag 56\t\t\tfunction deposit(uint256 amoun...\n      JUMPDEST \t\t\tfunction deposit(uint256 amoun...\n      STOP \t\t\tfunction deposit(uint256 amoun...\n    tag 14\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 59\t\t\tmapping(address => uint256) pu...\n      PUSH 4\t\t\tmapping(address => uint256) pu...\n      DUP1 \t\t\tmapping(address => uint256) pu...\n      CALLDATASIZE \t\t\tmapping(address => uint256) pu...\n      SUB \t\t\tmapping(address => uint256) pu...\n      DUP2 \t\t\tmapping(address => uint256) pu...\n      ADD \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 60\t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 24\t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 60\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 61\t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 59\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH 40\t\t\tmapping(address => uint256) pu...\n      MLOAD \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 62\t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      PUSH [tag] 27\t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 62\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH 40\t\t\tmapping(address => uint256) pu...\n      MLOAD \t\t\tmapping(address => uint256) pu...\n      DUP1 \t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      SUB \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      RETURN \t\t\tmapping(address => uint256) pu...\n    tag 15\t\t\tuint256 public totalDeposited\n      JUMPDEST \t\t\tuint256 public totalDeposited\n      PUSH [tag] 63\t\t\tuint256 public totalDeposited\n      PUSH [tag] 64\t\t\tuint256 public totalDeposited\n      JUMP \t\t\tuint256 public totalDeposited\n    tag 63\t\t\tuint256 public totalDeposited\n      JUMPDEST \t\t\tuint256 public totalDeposited\n      PUSH 40\t\t\tuint256 public totalDeposited\n      MLOAD \t\t\tuint256 public totalDeposited\n      PUSH [tag] 65\t\t\tuint256 public totalDeposited\n      SWAP2 \t\t\tuint256 public totalDeposited\n      SWAP1 \t\t\tuint256 public totalDeposited\n      PUSH [tag] 27\t\t\tuint256 public totalDeposited\n      JUMP \t\t\tuint256 public totalDeposited\n    tag 65\t\t\tuint256 public totalDeposited\n      JUMPDEST \t\t\tuint256 public totalDeposited\n      PUSH 40\t\t\tuint256 public totalDeposited\n      MLOAD \t\t\tuint256 public totalDeposited\n      DUP1 \t\t\tuint256 public totalDeposited\n      SWAP2 \t\t\tuint256 public totalDeposited\n      SUB \t\t\tuint256 public totalDeposited\n      SWAP1 \t\t\tuint256 public totalDeposited\n      RETURN \t\t\tuint256 public totalDeposited\n    tag 19\t\t\taddress public tokenA\n      JUMPDEST \t\t\taddress public tokenA\n      PUSH 0\t\t\taddress public tokenA\n      PUSH 0\t\t\taddress public tokenA\n      SWAP1 \t\t\taddress public tokenA\n      SLOAD \t\t\taddress public tokenA\n      SWAP1 \t\t\taddress public tokenA\n      PUSH 100\t\t\taddress public tokenA\n      EXP \t\t\taddress public tokenA\n      SWAP1 \t\t\taddress public tokenA\n      DIV \t\t\taddress public tokenA\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress public tokenA\n      AND \t\t\taddress public tokenA\n      DUP2 \t\t\taddress public tokenA\n      JUMP \t\t\taddress public tokenA\n    tag 25\t\t\tfunction getDepositedBalance(a...\n      JUMPDEST \t\t\tfunction getDepositedBalance(a...\n      PUSH 0\t\t\tuint256\n      PUSH 3\t\t\tdepositedBalance\n      PUSH 0\t\t\tdepositedBalance[user]\n      DUP4 \t\t\tuser\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdepositedBalance[user]\n      AND \t\t\tdepositedBalance[user]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdepositedBalance[user]\n      AND \t\t\tdepositedBalance[user]\n      DUP2 \t\t\tdepositedBalance[user]\n      MSTORE \t\t\tdepositedBalance[user]\n      PUSH 20\t\t\tdepositedBalance[user]\n      ADD \t\t\tdepositedBalance[user]\n      SWAP1 \t\t\tdepositedBalance[user]\n      DUP2 \t\t\tdepositedBalance[user]\n      MSTORE \t\t\tdepositedBalance[user]\n      PUSH 20\t\t\tdepositedBalance[user]\n      ADD \t\t\tdepositedBalance[user]\n      PUSH 0\t\t\tdepositedBalance[user]\n      KECCAK256 \t\t\tdepositedBalance[user]\n      SLOAD \t\t\tdepositedBalance[user]\n      SWAP1 \t\t\treturn depositedBalance[user]\n      POP \t\t\treturn depositedBalance[user]\n      SWAP2 \t\t\tfunction getDepositedBalance(a...\n      SWAP1 \t\t\tfunction getDepositedBalance(a...\n      POP \t\t\tfunction getDepositedBalance(a...\n      JUMP \t\t\tfunction getDepositedBalance(a...\n    tag 31\t\t\tfunction withdraw(uint256 amou...\n      JUMPDEST \t\t\tfunction withdraw(uint256 amou...\n      PUSH 0\t\t\t0\n      DUP2 \t\t\tamount\n      GT \t\t\tamount > 0\n      PUSH [tag] 68\t\t\trequire(amount > 0, \"Must with...\n      JUMPI \t\t\trequire(amount > 0, \"Must with...\n      PUSH 40\t\t\trequire(amount > 0, \"Must with...\n      MLOAD \t\t\trequire(amount > 0, \"Must with...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(amount > 0, \"Must with...\n      DUP2 \t\t\trequire(amount > 0, \"Must with...\n      MSTORE \t\t\trequire(amount > 0, \"Must with...\n      PUSH 4\t\t\trequire(amount > 0, \"Must with...\n      ADD \t\t\trequire(amount > 0, \"Must with...\n      PUSH [tag] 69\t\t\trequire(amount > 0, \"Must with...\n      SWAP1 \t\t\trequire(amount > 0, \"Must with...\n      PUSH [tag] 70\t\t\trequire(amount > 0, \"Must with...\n      JUMP \t\t\trequire(amount > 0, \"Must with...\n    tag 69\t\t\trequire(amount > 0, \"Must with...\n      JUMPDEST \t\t\trequire(amount > 0, \"Must with...\n      PUSH 40\t\t\trequire(amount > 0, \"Must with...\n      MLOAD \t\t\trequire(amount > 0, \"Must with...\n      DUP1 \t\t\trequire(amount > 0, \"Must with...\n      SWAP2 \t\t\trequire(amount > 0, \"Must with...\n      SUB \t\t\trequire(amount > 0, \"Must with...\n      SWAP1 \t\t\trequire(amount > 0, \"Must with...\n      REVERT \t\t\trequire(amount > 0, \"Must with...\n    tag 68\t\t\trequire(amount > 0, \"Must with...\n      JUMPDEST \t\t\trequire(amount > 0, \"Must with...\n      DUP1 \t\t\tamount\n      PUSH 2\t\t\tstakedBalance\n      PUSH 0\t\t\tstakedBalance[msg.sender]\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tstakedBalance[msg.sender]\n      AND \t\t\tstakedBalance[msg.sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tstakedBalance[msg.sender]\n      AND \t\t\tstakedBalance[msg.sender]\n      DUP2 \t\t\tstakedBalance[msg.sender]\n      MSTORE \t\t\tstakedBalance[msg.sender]\n      PUSH 20\t\t\tstakedBalance[msg.sender]\n      ADD \t\t\tstakedBalance[msg.sender]\n      SWAP1 \t\t\tstakedBalance[msg.sender]\n      DUP2 \t\t\tstakedBalance[msg.sender]\n      MSTORE \t\t\tstakedBalance[msg.sender]\n      PUSH 20\t\t\tstakedBalance[msg.sender]\n      ADD \t\t\tstakedBalance[msg.sender]\n      PUSH 0\t\t\tstakedBalance[msg.sender]\n      KECCAK256 \t\t\tstakedBalance[msg.sender]\n      SLOAD \t\t\tstakedBalance[msg.sender]\n      LT \t\t\tstakedBalance[msg.sender] >= a...\n      ISZERO \t\t\tstakedBalance[msg.sender] >= a...\n      PUSH [tag] 71\t\t\trequire(stakedBalance[msg.send...\n      JUMPI \t\t\trequire(stakedBalance[msg.send...\n      PUSH 40\t\t\trequire(stakedBalance[msg.send...\n      MLOAD \t\t\trequire(stakedBalance[msg.send...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(stakedBalance[msg.send...\n      DUP2 \t\t\trequire(stakedBalance[msg.send...\n      MSTORE \t\t\trequire(stakedBalance[msg.send...\n      PUSH 4\t\t\trequire(stakedBalance[msg.send...\n      ADD \t\t\trequire(stakedBalance[msg.send...\n      PUSH [tag] 72\t\t\trequire(stakedBalance[msg.send...\n      SWAP1 \t\t\trequire(stakedBalance[msg.send...\n      PUSH [tag] 73\t\t\trequire(stakedBalance[msg.send...\n      JUMP \t\t\trequire(stakedBalance[msg.send...\n    tag 72\t\t\trequire(stakedBalance[msg.send...\n      JUMPDEST \t\t\trequire(stakedBalance[msg.send...\n      PUSH 40\t\t\trequire(stakedBalance[msg.send...\n      MLOAD \t\t\trequire(stakedBalance[msg.send...\n      DUP1 \t\t\trequire(stakedBalance[msg.send...\n      SWAP2 \t\t\trequire(stakedBalance[msg.send...\n      SUB \t\t\trequire(stakedBalance[msg.send...\n      SWAP1 \t\t\trequire(stakedBalance[msg.send...\n      REVERT \t\t\trequire(stakedBalance[msg.send...\n    tag 71\t\t\trequire(stakedBalance[msg.send...\n      JUMPDEST \t\t\trequire(stakedBalance[msg.send...\n      DUP1 \t\t\tamount\n      PUSH 2\t\t\tstakedBalance\n      PUSH 0\t\t\tstakedBalance[msg.sender]\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tstakedBalance[msg.sender]\n      AND \t\t\tstakedBalance[msg.sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tstakedBalance[msg.sender]\n      AND \t\t\tstakedBalance[msg.sender]\n      DUP2 \t\t\tstakedBalance[msg.sender]\n      MSTORE \t\t\tstakedBalance[msg.sender]\n      PUSH 20\t\t\tstakedBalance[msg.sender]\n      ADD \t\t\tstakedBalance[msg.sender]\n      SWAP1 \t\t\tstakedBalance[msg.sender]\n      DUP2 \t\t\tstakedBalance[msg.sender]\n      MSTORE \t\t\tstakedBalance[msg.sender]\n      PUSH 20\t\t\tstakedBalance[msg.sender]\n      ADD \t\t\tstakedBalance[msg.sender]\n      PUSH 0\t\t\tstakedBalance[msg.sender]\n      KECCAK256 \t\t\tstakedBalance[msg.sender]\n      PUSH 0\t\t\tstakedBalance[msg.sender]\n      DUP3 \t\t\tstakedBalance[msg.sender] -= a...\n      DUP3 \t\t\tstakedBalance[msg.sender] -= a...\n      SLOAD \t\t\tstakedBalance[msg.sender] -= a...\n      PUSH [tag] 74\t\t\tstakedBalance[msg.sender] -= a...\n      SWAP2 \t\t\tstakedBalance[msg.sender] -= a...\n      SWAP1 \t\t\tstakedBalance[msg.sender] -= a...\n      PUSH [tag] 75\t\t\tstakedBalance[msg.sender] -= a...\n      JUMP \t\t\tstakedBalance[msg.sender] -= a...\n    tag 74\t\t\tstakedBalance[msg.sender] -= a...\n      JUMPDEST \t\t\tstakedBalance[msg.sender] -= a...\n      SWAP3 \t\t\tstakedBalance[msg.sender] -= a...\n      POP \t\t\tstakedBalance[msg.sender] -= a...\n      POP \t\t\tstakedBalance[msg.sender] -= a...\n      DUP2 \t\t\tstakedBalance[msg.sender] -= a...\n      SWAP1 \t\t\tstakedBalance[msg.sender] -= a...\n      SSTORE \t\t\tstakedBalance[msg.sender] -= a...\n      POP \t\t\tstakedBalance[msg.sender] -= a...\n      DUP1 \t\t\tamount\n      PUSH 4\t\t\ttotalStaked\n      PUSH 0\t\t\ttotalStaked\n      DUP3 \t\t\ttotalStaked -= amount\n      DUP3 \t\t\ttotalStaked -= amount\n      SLOAD \t\t\ttotalStaked -= amount\n      PUSH [tag] 76\t\t\ttotalStaked -= amount\n      SWAP2 \t\t\ttotalStaked -= amount\n      SWAP1 \t\t\ttotalStaked -= amount\n      PUSH [tag] 75\t\t\ttotalStaked -= amount\n      JUMP \t\t\ttotalStaked -= amount\n    tag 76\t\t\ttotalStaked -= amount\n      JUMPDEST \t\t\ttotalStaked -= amount\n      SWAP3 \t\t\ttotalStaked -= amount\n      POP \t\t\ttotalStaked -= amount\n      POP \t\t\ttotalStaked -= amount\n      DUP2 \t\t\ttotalStaked -= amount\n      SWAP1 \t\t\ttotalStaked -= amount\n      SSTORE \t\t\ttotalStaked -= amount\n      POP \t\t\ttotalStaked -= amount\n      PUSH 1\t\t\ttokenB\n      PUSH 0\t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      SLOAD \t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      PUSH 100\t\t\ttokenB\n      EXP \t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      DIV \t\t\ttokenB\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenB\n      AND \t\t\ttokenB\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tIERC20(tokenB).transfer\n      AND \t\t\tIERC20(tokenB).transfer\n      PUSH A9059CBB\t\t\tIERC20(tokenB).transfer\n      CALLER \t\t\tmsg.sender\n      DUP4 \t\t\tamount\n      PUSH 40\t\t\tIERC20(tokenB).transfer(msg.se...\n      MLOAD \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP4 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH FFFFFFFF\t\t\tIERC20(tokenB).transfer(msg.se...\n      AND \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH E0\t\t\tIERC20(tokenB).transfer(msg.se...\n      SHL \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP2 \t\t\tIERC20(tokenB).transfer(msg.se...\n      MSTORE \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 4\t\t\tIERC20(tokenB).transfer(msg.se...\n      ADD \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 77\t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP3 \t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP2 \t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 78\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMP \t\t\tIERC20(tokenB).transfer(msg.se...\n    tag 77\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMPDEST \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 20\t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 40\t\t\tIERC20(tokenB).transfer(msg.se...\n      MLOAD \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP4 \t\t\tIERC20(tokenB).transfer(msg.se...\n      SUB \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP2 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 0\t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP8 \t\t\tIERC20(tokenB).transfer(msg.se...\n      GAS \t\t\tIERC20(tokenB).transfer(msg.se...\n      CALL \t\t\tIERC20(tokenB).transfer(msg.se...\n      ISZERO \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      ISZERO \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 80\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMPI \t\t\tIERC20(tokenB).transfer(msg.se...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 0\t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 0\t\t\tIERC20(tokenB).transfer(msg.se...\n      RETURNDATACOPY \t\t\tIERC20(tokenB).transfer(msg.se...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 0\t\t\tIERC20(tokenB).transfer(msg.se...\n      REVERT \t\t\tIERC20(tokenB).transfer(msg.se...\n    tag 80\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMPDEST \t\t\tIERC20(tokenB).transfer(msg.se...\n      POP \t\t\tIERC20(tokenB).transfer(msg.se...\n      POP \t\t\tIERC20(tokenB).transfer(msg.se...\n      POP \t\t\tIERC20(tokenB).transfer(msg.se...\n      POP \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 40\t\t\tIERC20(tokenB).transfer(msg.se...\n      MLOAD \t\t\tIERC20(tokenB).transfer(msg.se...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 1F\t\t\tIERC20(tokenB).transfer(msg.se...\n      NOT \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 1F\t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP3 \t\t\tIERC20(tokenB).transfer(msg.se...\n      ADD \t\t\tIERC20(tokenB).transfer(msg.se...\n      AND \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP3 \t\t\tIERC20(tokenB).transfer(msg.se...\n      ADD \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 40\t\t\tIERC20(tokenB).transfer(msg.se...\n      MSTORE \t\t\tIERC20(tokenB).transfer(msg.se...\n      POP \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP2 \t\t\tIERC20(tokenB).transfer(msg.se...\n      ADD \t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 81\t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP2 \t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 82\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMP \t\t\tIERC20(tokenB).transfer(msg.se...\n    tag 81\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMPDEST \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 83\t\t\trequire(\\n            IERC20(t...\n      JUMPI \t\t\trequire(\\n            IERC20(t...\n      PUSH 40\t\t\trequire(\\n            IERC20(t...\n      MLOAD \t\t\trequire(\\n            IERC20(t...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(\\n            IERC20(t...\n      DUP2 \t\t\trequire(\\n            IERC20(t...\n      MSTORE \t\t\trequire(\\n            IERC20(t...\n      PUSH 4\t\t\trequire(\\n            IERC20(t...\n      ADD \t\t\trequire(\\n            IERC20(t...\n      PUSH [tag] 84\t\t\trequire(\\n            IERC20(t...\n      SWAP1 \t\t\trequire(\\n            IERC20(t...\n      PUSH [tag] 85\t\t\trequire(\\n            IERC20(t...\n      JUMP \t\t\trequire(\\n            IERC20(t...\n    tag 84\t\t\trequire(\\n            IERC20(t...\n      JUMPDEST \t\t\trequire(\\n            IERC20(t...\n      PUSH 40\t\t\trequire(\\n            IERC20(t...\n      MLOAD \t\t\trequire(\\n            IERC20(t...\n      DUP1 \t\t\trequire(\\n            IERC20(t...\n      SWAP2 \t\t\trequire(\\n            IERC20(t...\n      SUB \t\t\trequire(\\n            IERC20(t...\n      SWAP1 \t\t\trequire(\\n            IERC20(t...\n      REVERT \t\t\trequire(\\n            IERC20(t...\n    tag 83\t\t\trequire(\\n            IERC20(t...\n      JUMPDEST \t\t\trequire(\\n            IERC20(t...\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tWithdrawn(msg.sender, amount)\n      AND \t\t\tWithdrawn(msg.sender, amount)\n      PUSH 7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5\t\t\tWithdrawn(msg.sender, amount)\n      DUP3 \t\t\tamount\n      PUSH 40\t\t\tWithdrawn(msg.sender, amount)\n      MLOAD \t\t\tWithdrawn(msg.sender, amount)\n      PUSH [tag] 86\t\t\tWithdrawn(msg.sender, amount)\n      SWAP2 \t\t\tWithdrawn(msg.sender, amount)\n      SWAP1 \t\t\tWithdrawn(msg.sender, amount)\n      PUSH [tag] 27\t\t\tWithdrawn(msg.sender, amount)\n      JUMP \t\t\tWithdrawn(msg.sender, amount)\n    tag 86\t\t\tWithdrawn(msg.sender, amount)\n      JUMPDEST \t\t\tWithdrawn(msg.sender, amount)\n      PUSH 40\t\t\tWithdrawn(msg.sender, amount)\n      MLOAD \t\t\tWithdrawn(msg.sender, amount)\n      DUP1 \t\t\tWithdrawn(msg.sender, amount)\n      SWAP2 \t\t\tWithdrawn(msg.sender, amount)\n      SUB \t\t\tWithdrawn(msg.sender, amount)\n      SWAP1 \t\t\tWithdrawn(msg.sender, amount)\n      LOG2 \t\t\tWithdrawn(msg.sender, amount)\n      POP \t\t\tfunction withdraw(uint256 amou...\n      JUMP \t\t\tfunction withdraw(uint256 amou...\n    tag 34\t\t\tfunction getStakedBalance(addr...\n      JUMPDEST \t\t\tfunction getStakedBalance(addr...\n      PUSH 0\t\t\tuint256\n      PUSH 2\t\t\tstakedBalance\n      PUSH 0\t\t\tstakedBalance[user]\n      DUP4 \t\t\tuser\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tstakedBalance[user]\n      AND \t\t\tstakedBalance[user]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tstakedBalance[user]\n      AND \t\t\tstakedBalance[user]\n      DUP2 \t\t\tstakedBalance[user]\n      MSTORE \t\t\tstakedBalance[user]\n      PUSH 20\t\t\tstakedBalance[user]\n      ADD \t\t\tstakedBalance[user]\n      SWAP1 \t\t\tstakedBalance[user]\n      DUP2 \t\t\tstakedBalance[user]\n      MSTORE \t\t\tstakedBalance[user]\n      PUSH 20\t\t\tstakedBalance[user]\n      ADD \t\t\tstakedBalance[user]\n      PUSH 0\t\t\tstakedBalance[user]\n      KECCAK256 \t\t\tstakedBalance[user]\n      SLOAD \t\t\tstakedBalance[user]\n      SWAP1 \t\t\treturn stakedBalance[user]\n      POP \t\t\treturn stakedBalance[user]\n      SWAP2 \t\t\tfunction getStakedBalance(addr...\n      SWAP1 \t\t\tfunction getStakedBalance(addr...\n      POP \t\t\tfunction getStakedBalance(addr...\n      JUMP \t\t\tfunction getStakedBalance(addr...\n    tag 38\t\t\tfunction getTokenBalance(addre...\n      JUMPDEST \t\t\tfunction getTokenBalance(addre...\n      PUSH 0\t\t\tuint256\n      DUP2 \t\t\ttoken\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tIERC20(token).balanceOf\n      AND \t\t\tIERC20(token).balanceOf\n      PUSH 70A08231\t\t\tIERC20(token).balanceOf\n      ADDRESS \t\t\tthis\n      PUSH 40\t\t\tIERC20(token).balanceOf(addres...\n      MLOAD \t\t\tIERC20(token).balanceOf(addres...\n      DUP3 \t\t\tIERC20(token).balanceOf(addres...\n      PUSH FFFFFFFF\t\t\tIERC20(token).balanceOf(addres...\n      AND \t\t\tIERC20(token).balanceOf(addres...\n      PUSH E0\t\t\tIERC20(token).balanceOf(addres...\n      SHL \t\t\tIERC20(token).balanceOf(addres...\n      DUP2 \t\t\tIERC20(token).balanceOf(addres...\n      MSTORE \t\t\tIERC20(token).balanceOf(addres...\n      PUSH 4\t\t\tIERC20(token).balanceOf(addres...\n      ADD \t\t\tIERC20(token).balanceOf(addres...\n      PUSH [tag] 89\t\t\tIERC20(token).balanceOf(addres...\n      SWAP2 \t\t\tIERC20(token).balanceOf(addres...\n      SWAP1 \t\t\tIERC20(token).balanceOf(addres...\n      PUSH [tag] 21\t\t\tIERC20(token).balanceOf(addres...\n      JUMP \t\t\tIERC20(token).balanceOf(addres...\n    tag 89\t\t\tIERC20(token).balanceOf(addres...\n      JUMPDEST \t\t\tIERC20(token).balanceOf(addres...\n      PUSH 20\t\t\tIERC20(token).balanceOf(addres...\n      PUSH 40\t\t\tIERC20(token).balanceOf(addres...\n      MLOAD \t\t\tIERC20(token).balanceOf(addres...\n      DUP1 \t\t\tIERC20(token).balanceOf(addres...\n      DUP4 \t\t\tIERC20(token).balanceOf(addres...\n      SUB \t\t\tIERC20(token).balanceOf(addres...\n      DUP2 \t\t\tIERC20(token).balanceOf(addres...\n      DUP7 \t\t\tIERC20(token).balanceOf(addres...\n      GAS \t\t\tIERC20(token).balanceOf(addres...\n      STATICCALL \t\t\tIERC20(token).balanceOf(addres...\n      ISZERO \t\t\tIERC20(token).balanceOf(addres...\n      DUP1 \t\t\tIERC20(token).balanceOf(addres...\n      ISZERO \t\t\tIERC20(token).balanceOf(addres...\n      PUSH [tag] 91\t\t\tIERC20(token).balanceOf(addres...\n      JUMPI \t\t\tIERC20(token).balanceOf(addres...\n      RETURNDATASIZE \t\t\tIERC20(token).balanceOf(addres...\n      PUSH 0\t\t\tIERC20(token).balanceOf(addres...\n      PUSH 0\t\t\tIERC20(token).balanceOf(addres...\n      RETURNDATACOPY \t\t\tIERC20(token).balanceOf(addres...\n      RETURNDATASIZE \t\t\tIERC20(token).balanceOf(addres...\n      PUSH 0\t\t\tIERC20(token).balanceOf(addres...\n      REVERT \t\t\tIERC20(token).balanceOf(addres...\n    tag 91\t\t\tIERC20(token).balanceOf(addres...\n      JUMPDEST \t\t\tIERC20(token).balanceOf(addres...\n      POP \t\t\tIERC20(token).balanceOf(addres...\n      POP \t\t\tIERC20(token).balanceOf(addres...\n      POP \t\t\tIERC20(token).balanceOf(addres...\n      POP \t\t\tIERC20(token).balanceOf(addres...\n      PUSH 40\t\t\tIERC20(token).balanceOf(addres...\n      MLOAD \t\t\tIERC20(token).balanceOf(addres...\n      RETURNDATASIZE \t\t\tIERC20(token).balanceOf(addres...\n      PUSH 1F\t\t\tIERC20(token).balanceOf(addres...\n      NOT \t\t\tIERC20(token).balanceOf(addres...\n      PUSH 1F\t\t\tIERC20(token).balanceOf(addres...\n      DUP3 \t\t\tIERC20(token).balanceOf(addres...\n      ADD \t\t\tIERC20(token).balanceOf(addres...\n      AND \t\t\tIERC20(token).balanceOf(addres...\n      DUP3 \t\t\tIERC20(token).balanceOf(addres...\n      ADD \t\t\tIERC20(token).balanceOf(addres...\n      DUP1 \t\t\tIERC20(token).balanceOf(addres...\n      PUSH 40\t\t\tIERC20(token).balanceOf(addres...\n      MSTORE \t\t\tIERC20(token).balanceOf(addres...\n      POP \t\t\tIERC20(token).balanceOf(addres...\n      DUP2 \t\t\tIERC20(token).balanceOf(addres...\n      ADD \t\t\tIERC20(token).balanceOf(addres...\n      SWAP1 \t\t\tIERC20(token).balanceOf(addres...\n      PUSH [tag] 92\t\t\tIERC20(token).balanceOf(addres...\n      SWAP2 \t\t\tIERC20(token).balanceOf(addres...\n      SWAP1 \t\t\tIERC20(token).balanceOf(addres...\n      PUSH [tag] 93\t\t\tIERC20(token).balanceOf(addres...\n      JUMP \t\t\tIERC20(token).balanceOf(addres...\n    tag 92\t\t\tIERC20(token).balanceOf(addres...\n      JUMPDEST \t\t\tIERC20(token).balanceOf(addres...\n      SWAP1 \t\t\treturn IERC20(token).balanceOf...\n      POP \t\t\treturn IERC20(token).balanceOf...\n      SWAP2 \t\t\tfunction getTokenBalance(addre...\n      SWAP1 \t\t\tfunction getTokenBalance(addre...\n      POP \t\t\tfunction getTokenBalance(addre...\n      JUMP \t\t\tfunction getTokenBalance(addre...\n    tag 41\t\t\taddress public tokenB\n      JUMPDEST \t\t\taddress public tokenB\n      PUSH 1\t\t\taddress public tokenB\n      PUSH 0\t\t\taddress public tokenB\n      SWAP1 \t\t\taddress public tokenB\n      SLOAD \t\t\taddress public tokenB\n      SWAP1 \t\t\taddress public tokenB\n      PUSH 100\t\t\taddress public tokenB\n      EXP \t\t\taddress public tokenB\n      SWAP1 \t\t\taddress public tokenB\n      DIV \t\t\taddress public tokenB\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress public tokenB\n      AND \t\t\taddress public tokenB\n      DUP2 \t\t\taddress public tokenB\n      JUMP \t\t\taddress public tokenB\n    tag 45\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH 2\t\t\tmapping(address => uint256) pu...\n      PUSH 20\t\t\tmapping(address => uint256) pu...\n      MSTORE \t\t\tmapping(address => uint256) pu...\n      DUP1 \t\t\tmapping(address => uint256) pu...\n      PUSH 0\t\t\tmapping(address => uint256) pu...\n      MSTORE \t\t\tmapping(address => uint256) pu...\n      PUSH 40\t\t\tmapping(address => uint256) pu...\n      PUSH 0\t\t\tmapping(address => uint256) pu...\n      KECCAK256 \t\t\tmapping(address => uint256) pu...\n      PUSH 0\t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      POP \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      POP \t\t\tmapping(address => uint256) pu...\n      SLOAD \t\t\tmapping(address => uint256) pu...\n      DUP2 \t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 48\t\t\tuint256 public totalStaked\n      JUMPDEST \t\t\tuint256 public totalStaked\n      PUSH 4\t\t\tuint256 public totalStaked\n      SLOAD \t\t\tuint256 public totalStaked\n      DUP2 \t\t\tuint256 public totalStaked\n      JUMP \t\t\tuint256 public totalStaked\n    tag 52\t\t\tfunction swap(uint256 amount) ...\n      JUMPDEST \t\t\tfunction swap(uint256 amount) ...\n      PUSH 0\t\t\t0\n      DUP2 \t\t\tamount\n      GT \t\t\tamount > 0\n      PUSH [tag] 95\t\t\trequire(amount > 0, \"Must swap...\n      JUMPI \t\t\trequire(amount > 0, \"Must swap...\n      PUSH 40\t\t\trequire(amount > 0, \"Must swap...\n      MLOAD \t\t\trequire(amount > 0, \"Must swap...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(amount > 0, \"Must swap...\n      DUP2 \t\t\trequire(amount > 0, \"Must swap...\n      MSTORE \t\t\trequire(amount > 0, \"Must swap...\n      PUSH 4\t\t\trequire(amount > 0, \"Must swap...\n      ADD \t\t\trequire(amount > 0, \"Must swap...\n      PUSH [tag] 96\t\t\trequire(amount > 0, \"Must swap...\n      SWAP1 \t\t\trequire(amount > 0, \"Must swap...\n      PUSH [tag] 97\t\t\trequire(amount > 0, \"Must swap...\n      JUMP \t\t\trequire(amount > 0, \"Must swap...\n    tag 96\t\t\trequire(amount > 0, \"Must swap...\n      JUMPDEST \t\t\trequire(amount > 0, \"Must swap...\n      PUSH 40\t\t\trequire(amount > 0, \"Must swap...\n      MLOAD \t\t\trequire(amount > 0, \"Must swap...\n      DUP1 \t\t\trequire(amount > 0, \"Must swap...\n      SWAP2 \t\t\trequire(amount > 0, \"Must swap...\n      SUB \t\t\trequire(amount > 0, \"Must swap...\n      SWAP1 \t\t\trequire(amount > 0, \"Must swap...\n      REVERT \t\t\trequire(amount > 0, \"Must swap...\n    tag 95\t\t\trequire(amount > 0, \"Must swap...\n      JUMPDEST \t\t\trequire(amount > 0, \"Must swap...\n      DUP1 \t\t\tamount\n      PUSH 5\t\t\ttotalDeposited\n      SLOAD \t\t\ttotalDeposited\n      LT \t\t\ttotalDeposited >= amount\n      ISZERO \t\t\ttotalDeposited >= amount\n      PUSH [tag] 98\t\t\trequire(totalDeposited >= amou...\n      JUMPI \t\t\trequire(totalDeposited >= amou...\n      PUSH 40\t\t\trequire(totalDeposited >= amou...\n      MLOAD \t\t\trequire(totalDeposited >= amou...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(totalDeposited >= amou...\n      DUP2 \t\t\trequire(totalDeposited >= amou...\n      MSTORE \t\t\trequire(totalDeposited >= amou...\n      PUSH 4\t\t\trequire(totalDeposited >= amou...\n      ADD \t\t\trequire(totalDeposited >= amou...\n      PUSH [tag] 99\t\t\trequire(totalDeposited >= amou...\n      SWAP1 \t\t\trequire(totalDeposited >= amou...\n      PUSH [tag] 100\t\t\trequire(totalDeposited >= amou...\n      JUMP \t\t\trequire(totalDeposited >= amou...\n    tag 99\t\t\trequire(totalDeposited >= amou...\n      JUMPDEST \t\t\trequire(totalDeposited >= amou...\n      PUSH 40\t\t\trequire(totalDeposited >= amou...\n      MLOAD \t\t\trequire(totalDeposited >= amou...\n      DUP1 \t\t\trequire(totalDeposited >= amou...\n      SWAP2 \t\t\trequire(totalDeposited >= amou...\n      SUB \t\t\trequire(totalDeposited >= amou...\n      SWAP1 \t\t\trequire(totalDeposited >= amou...\n      REVERT \t\t\trequire(totalDeposited >= amou...\n    tag 98\t\t\trequire(totalDeposited >= amou...\n      JUMPDEST \t\t\trequire(totalDeposited >= amou...\n      PUSH 0\t\t\ttokenA\n      PUSH 0\t\t\ttokenA\n      SWAP1 \t\t\ttokenA\n      SLOAD \t\t\ttokenA\n      SWAP1 \t\t\ttokenA\n      PUSH 100\t\t\ttokenA\n      EXP \t\t\ttokenA\n      SWAP1 \t\t\ttokenA\n      DIV \t\t\ttokenA\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenA\n      AND \t\t\ttokenA\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tIERC20(tokenA).transferFrom\n      AND \t\t\tIERC20(tokenA).transferFrom\n      PUSH 23B872DD\t\t\tIERC20(tokenA).transferFrom\n      CALLER \t\t\tmsg.sender\n      ADDRESS \t\t\tthis\n      DUP5 \t\t\tamount\n      PUSH 40\t\t\tIERC20(tokenA).transferFrom(ms...\n      MLOAD \t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP5 \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH FFFFFFFF\t\t\tIERC20(tokenA).transferFrom(ms...\n      AND \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH E0\t\t\tIERC20(tokenA).transferFrom(ms...\n      SHL \t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP2 \t\t\tIERC20(tokenA).transferFrom(ms...\n      MSTORE \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 4\t\t\tIERC20(tokenA).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH [tag] 101\t\t\tIERC20(tokenA).transferFrom(ms...\n      SWAP4 \t\t\tIERC20(tokenA).transferFrom(ms...\n      SWAP3 \t\t\tIERC20(tokenA).transferFrom(ms...\n      SWAP2 \t\t\tIERC20(tokenA).transferFrom(ms...\n      SWAP1 \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH [tag] 102\t\t\tIERC20(tokenA).transferFrom(ms...\n      JUMP \t\t\tIERC20(tokenA).transferFrom(ms...\n    tag 101\t\t\tIERC20(tokenA).transferFrom(ms...\n      JUMPDEST \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 20\t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 40\t\t\tIERC20(tokenA).transferFrom(ms...\n      MLOAD \t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP1 \t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP4 \t\t\tIERC20(tokenA).transferFrom(ms...\n      SUB \t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP2 \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP8 \t\t\tIERC20(tokenA).transferFrom(ms...\n      GAS \t\t\tIERC20(tokenA).transferFrom(ms...\n      CALL \t\t\tIERC20(tokenA).transferFrom(ms...\n      ISZERO \t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP1 \t\t\tIERC20(tokenA).transferFrom(ms...\n      ISZERO \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH [tag] 104\t\t\tIERC20(tokenA).transferFrom(ms...\n      JUMPI \t\t\tIERC20(tokenA).transferFrom(ms...\n      RETURNDATASIZE \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenA).transferFrom(ms...\n      RETURNDATACOPY \t\t\tIERC20(tokenA).transferFrom(ms...\n      RETURNDATASIZE \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenA).transferFrom(ms...\n      REVERT \t\t\tIERC20(tokenA).transferFrom(ms...\n    tag 104\t\t\tIERC20(tokenA).transferFrom(ms...\n      JUMPDEST \t\t\tIERC20(tokenA).transferFrom(ms...\n      POP \t\t\tIERC20(tokenA).transferFrom(ms...\n      POP \t\t\tIERC20(tokenA).transferFrom(ms...\n      POP \t\t\tIERC20(tokenA).transferFrom(ms...\n      POP \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 40\t\t\tIERC20(tokenA).transferFrom(ms...\n      MLOAD \t\t\tIERC20(tokenA).transferFrom(ms...\n      RETURNDATASIZE \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 1F\t\t\tIERC20(tokenA).transferFrom(ms...\n      NOT \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 1F\t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP3 \t\t\tIERC20(tokenA).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenA).transferFrom(ms...\n      AND \t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP3 \t\t\tIERC20(tokenA).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP1 \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH 40\t\t\tIERC20(tokenA).transferFrom(ms...\n      MSTORE \t\t\tIERC20(tokenA).transferFrom(ms...\n      POP \t\t\tIERC20(tokenA).transferFrom(ms...\n      DUP2 \t\t\tIERC20(tokenA).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenA).transferFrom(ms...\n      SWAP1 \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH [tag] 105\t\t\tIERC20(tokenA).transferFrom(ms...\n      SWAP2 \t\t\tIERC20(tokenA).transferFrom(ms...\n      SWAP1 \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH [tag] 82\t\t\tIERC20(tokenA).transferFrom(ms...\n      JUMP \t\t\tIERC20(tokenA).transferFrom(ms...\n    tag 105\t\t\tIERC20(tokenA).transferFrom(ms...\n      JUMPDEST \t\t\tIERC20(tokenA).transferFrom(ms...\n      PUSH [tag] 106\t\t\trequire(\\n            IERC20(t...\n      JUMPI \t\t\trequire(\\n            IERC20(t...\n      PUSH 40\t\t\trequire(\\n            IERC20(t...\n      MLOAD \t\t\trequire(\\n            IERC20(t...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(\\n            IERC20(t...\n      DUP2 \t\t\trequire(\\n            IERC20(t...\n      MSTORE \t\t\trequire(\\n            IERC20(t...\n      PUSH 4\t\t\trequire(\\n            IERC20(t...\n      ADD \t\t\trequire(\\n            IERC20(t...\n      PUSH [tag] 107\t\t\trequire(\\n            IERC20(t...\n      SWAP1 \t\t\trequire(\\n            IERC20(t...\n      PUSH [tag] 108\t\t\trequire(\\n            IERC20(t...\n      JUMP \t\t\trequire(\\n            IERC20(t...\n    tag 107\t\t\trequire(\\n            IERC20(t...\n      JUMPDEST \t\t\trequire(\\n            IERC20(t...\n      PUSH 40\t\t\trequire(\\n            IERC20(t...\n      MLOAD \t\t\trequire(\\n            IERC20(t...\n      DUP1 \t\t\trequire(\\n            IERC20(t...\n      SWAP2 \t\t\trequire(\\n            IERC20(t...\n      SUB \t\t\trequire(\\n            IERC20(t...\n      SWAP1 \t\t\trequire(\\n            IERC20(t...\n      REVERT \t\t\trequire(\\n            IERC20(t...\n    tag 106\t\t\trequire(\\n            IERC20(t...\n      JUMPDEST \t\t\trequire(\\n            IERC20(t...\n      PUSH 1\t\t\ttokenB\n      PUSH 0\t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      SLOAD \t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      PUSH 100\t\t\ttokenB\n      EXP \t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      DIV \t\t\ttokenB\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenB\n      AND \t\t\ttokenB\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tIERC20(tokenB).transfer\n      AND \t\t\tIERC20(tokenB).transfer\n      PUSH A9059CBB\t\t\tIERC20(tokenB).transfer\n      CALLER \t\t\tmsg.sender\n      DUP4 \t\t\tamount\n      PUSH 40\t\t\tIERC20(tokenB).transfer(msg.se...\n      MLOAD \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP4 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH FFFFFFFF\t\t\tIERC20(tokenB).transfer(msg.se...\n      AND \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH E0\t\t\tIERC20(tokenB).transfer(msg.se...\n      SHL \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP2 \t\t\tIERC20(tokenB).transfer(msg.se...\n      MSTORE \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 4\t\t\tIERC20(tokenB).transfer(msg.se...\n      ADD \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 109\t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP3 \t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP2 \t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 78\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMP \t\t\tIERC20(tokenB).transfer(msg.se...\n    tag 109\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMPDEST \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 20\t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 40\t\t\tIERC20(tokenB).transfer(msg.se...\n      MLOAD \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP4 \t\t\tIERC20(tokenB).transfer(msg.se...\n      SUB \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP2 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 0\t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP8 \t\t\tIERC20(tokenB).transfer(msg.se...\n      GAS \t\t\tIERC20(tokenB).transfer(msg.se...\n      CALL \t\t\tIERC20(tokenB).transfer(msg.se...\n      ISZERO \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      ISZERO \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 111\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMPI \t\t\tIERC20(tokenB).transfer(msg.se...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 0\t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 0\t\t\tIERC20(tokenB).transfer(msg.se...\n      RETURNDATACOPY \t\t\tIERC20(tokenB).transfer(msg.se...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 0\t\t\tIERC20(tokenB).transfer(msg.se...\n      REVERT \t\t\tIERC20(tokenB).transfer(msg.se...\n    tag 111\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMPDEST \t\t\tIERC20(tokenB).transfer(msg.se...\n      POP \t\t\tIERC20(tokenB).transfer(msg.se...\n      POP \t\t\tIERC20(tokenB).transfer(msg.se...\n      POP \t\t\tIERC20(tokenB).transfer(msg.se...\n      POP \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 40\t\t\tIERC20(tokenB).transfer(msg.se...\n      MLOAD \t\t\tIERC20(tokenB).transfer(msg.se...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 1F\t\t\tIERC20(tokenB).transfer(msg.se...\n      NOT \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 1F\t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP3 \t\t\tIERC20(tokenB).transfer(msg.se...\n      ADD \t\t\tIERC20(tokenB).transfer(msg.se...\n      AND \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP3 \t\t\tIERC20(tokenB).transfer(msg.se...\n      ADD \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH 40\t\t\tIERC20(tokenB).transfer(msg.se...\n      MSTORE \t\t\tIERC20(tokenB).transfer(msg.se...\n      POP \t\t\tIERC20(tokenB).transfer(msg.se...\n      DUP2 \t\t\tIERC20(tokenB).transfer(msg.se...\n      ADD \t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 112\t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP2 \t\t\tIERC20(tokenB).transfer(msg.se...\n      SWAP1 \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 82\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMP \t\t\tIERC20(tokenB).transfer(msg.se...\n    tag 112\t\t\tIERC20(tokenB).transfer(msg.se...\n      JUMPDEST \t\t\tIERC20(tokenB).transfer(msg.se...\n      PUSH [tag] 113\t\t\trequire(\\n            IERC20(t...\n      JUMPI \t\t\trequire(\\n            IERC20(t...\n      PUSH 40\t\t\trequire(\\n            IERC20(t...\n      MLOAD \t\t\trequire(\\n            IERC20(t...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(\\n            IERC20(t...\n      DUP2 \t\t\trequire(\\n            IERC20(t...\n      MSTORE \t\t\trequire(\\n            IERC20(t...\n      PUSH 4\t\t\trequire(\\n            IERC20(t...\n      ADD \t\t\trequire(\\n            IERC20(t...\n      PUSH [tag] 114\t\t\trequire(\\n            IERC20(t...\n      SWAP1 \t\t\trequire(\\n            IERC20(t...\n      PUSH [tag] 85\t\t\trequire(\\n            IERC20(t...\n      JUMP \t\t\trequire(\\n            IERC20(t...\n    tag 114\t\t\trequire(\\n            IERC20(t...\n      JUMPDEST \t\t\trequire(\\n            IERC20(t...\n      PUSH 40\t\t\trequire(\\n            IERC20(t...\n      MLOAD \t\t\trequire(\\n            IERC20(t...\n      DUP1 \t\t\trequire(\\n            IERC20(t...\n      SWAP2 \t\t\trequire(\\n            IERC20(t...\n      SUB \t\t\trequire(\\n            IERC20(t...\n      SWAP1 \t\t\trequire(\\n            IERC20(t...\n      REVERT \t\t\trequire(\\n            IERC20(t...\n    tag 113\t\t\trequire(\\n            IERC20(t...\n      JUMPDEST \t\t\trequire(\\n            IERC20(t...\n      DUP1 \t\t\tamount\n      PUSH 5\t\t\ttotalDeposited\n      PUSH 0\t\t\ttotalDeposited\n      DUP3 \t\t\ttotalDeposited -= amount\n      DUP3 \t\t\ttotalDeposited -= amount\n      SLOAD \t\t\ttotalDeposited -= amount\n      PUSH [tag] 115\t\t\ttotalDeposited -= amount\n      SWAP2 \t\t\ttotalDeposited -= amount\n      SWAP1 \t\t\ttotalDeposited -= amount\n      PUSH [tag] 75\t\t\ttotalDeposited -= amount\n      JUMP \t\t\ttotalDeposited -= amount\n    tag 115\t\t\ttotalDeposited -= amount\n      JUMPDEST \t\t\ttotalDeposited -= amount\n      SWAP3 \t\t\ttotalDeposited -= amount\n      POP \t\t\ttotalDeposited -= amount\n      POP \t\t\ttotalDeposited -= amount\n      DUP2 \t\t\ttotalDeposited -= amount\n      SWAP1 \t\t\ttotalDeposited -= amount\n      SSTORE \t\t\ttotalDeposited -= amount\n      POP \t\t\ttotalDeposited -= amount\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tSwapped(msg.sender, amount, am...\n      AND \t\t\tSwapped(msg.sender, amount, am...\n      PUSH 3A9A9F34F5831E9C8ECB66AB3AA308B2FF31EACA434615F6C9CADC656A9AF71C\t\t\tSwapped(msg.sender, amount, am...\n      DUP3 \t\t\tamount\n      DUP4 \t\t\tamount\n      PUSH 40\t\t\tSwapped(msg.sender, amount, am...\n      MLOAD \t\t\tSwapped(msg.sender, amount, am...\n      PUSH [tag] 116\t\t\tSwapped(msg.sender, amount, am...\n      SWAP3 \t\t\tSwapped(msg.sender, amount, am...\n      SWAP2 \t\t\tSwapped(msg.sender, amount, am...\n      SWAP1 \t\t\tSwapped(msg.sender, amount, am...\n      PUSH [tag] 117\t\t\tSwapped(msg.sender, amount, am...\n      JUMP \t\t\tSwapped(msg.sender, amount, am...\n    tag 116\t\t\tSwapped(msg.sender, amount, am...\n      JUMPDEST \t\t\tSwapped(msg.sender, amount, am...\n      PUSH 40\t\t\tSwapped(msg.sender, amount, am...\n      MLOAD \t\t\tSwapped(msg.sender, amount, am...\n      DUP1 \t\t\tSwapped(msg.sender, amount, am...\n      SWAP2 \t\t\tSwapped(msg.sender, amount, am...\n      SUB \t\t\tSwapped(msg.sender, amount, am...\n      SWAP1 \t\t\tSwapped(msg.sender, amount, am...\n      LOG2 \t\t\tSwapped(msg.sender, amount, am...\n      POP \t\t\tfunction swap(uint256 amount) ...\n      JUMP \t\t\tfunction swap(uint256 amount) ...\n    tag 55\t\t\tfunction stake(uint256 amount)...\n      JUMPDEST \t\t\tfunction stake(uint256 amount)...\n      PUSH 0\t\t\t0\n      DUP2 \t\t\tamount\n      GT \t\t\tamount > 0\n      PUSH [tag] 119\t\t\trequire(amount > 0, \"Must stak...\n      JUMPI \t\t\trequire(amount > 0, \"Must stak...\n      PUSH 40\t\t\trequire(amount > 0, \"Must stak...\n      MLOAD \t\t\trequire(amount > 0, \"Must stak...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(amount > 0, \"Must stak...\n      DUP2 \t\t\trequire(amount > 0, \"Must stak...\n      MSTORE \t\t\trequire(amount > 0, \"Must stak...\n      PUSH 4\t\t\trequire(amount > 0, \"Must stak...\n      ADD \t\t\trequire(amount > 0, \"Must stak...\n      PUSH [tag] 120\t\t\trequire(amount > 0, \"Must stak...\n      SWAP1 \t\t\trequire(amount > 0, \"Must stak...\n      PUSH [tag] 121\t\t\trequire(amount > 0, \"Must stak...\n      JUMP \t\t\trequire(amount > 0, \"Must stak...\n    tag 120\t\t\trequire(amount > 0, \"Must stak...\n      JUMPDEST \t\t\trequire(amount > 0, \"Must stak...\n      PUSH 40\t\t\trequire(amount > 0, \"Must stak...\n      MLOAD \t\t\trequire(amount > 0, \"Must stak...\n      DUP1 \t\t\trequire(amount > 0, \"Must stak...\n      SWAP2 \t\t\trequire(amount > 0, \"Must stak...\n      SUB \t\t\trequire(amount > 0, \"Must stak...\n      SWAP1 \t\t\trequire(amount > 0, \"Must stak...\n      REVERT \t\t\trequire(amount > 0, \"Must stak...\n    tag 119\t\t\trequire(amount > 0, \"Must stak...\n      JUMPDEST \t\t\trequire(amount > 0, \"Must stak...\n      PUSH 1\t\t\ttokenB\n      PUSH 0\t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      SLOAD \t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      PUSH 100\t\t\ttokenB\n      EXP \t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      DIV \t\t\ttokenB\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenB\n      AND \t\t\ttokenB\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tIERC20(tokenB).transferFrom\n      AND \t\t\tIERC20(tokenB).transferFrom\n      PUSH 23B872DD\t\t\tIERC20(tokenB).transferFrom\n      CALLER \t\t\tmsg.sender\n      ADDRESS \t\t\tthis\n      DUP5 \t\t\tamount\n      PUSH 40\t\t\tIERC20(tokenB).transferFrom(ms...\n      MLOAD \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP5 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH FFFFFFFF\t\t\tIERC20(tokenB).transferFrom(ms...\n      AND \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH E0\t\t\tIERC20(tokenB).transferFrom(ms...\n      SHL \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP2 \t\t\tIERC20(tokenB).transferFrom(ms...\n      MSTORE \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 4\t\t\tIERC20(tokenB).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 122\t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP4 \t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP3 \t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP2 \t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 102\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMP \t\t\tIERC20(tokenB).transferFrom(ms...\n    tag 122\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMPDEST \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 20\t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 40\t\t\tIERC20(tokenB).transferFrom(ms...\n      MLOAD \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP4 \t\t\tIERC20(tokenB).transferFrom(ms...\n      SUB \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP2 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP8 \t\t\tIERC20(tokenB).transferFrom(ms...\n      GAS \t\t\tIERC20(tokenB).transferFrom(ms...\n      CALL \t\t\tIERC20(tokenB).transferFrom(ms...\n      ISZERO \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      ISZERO \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 124\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMPI \t\t\tIERC20(tokenB).transferFrom(ms...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenB).transferFrom(ms...\n      RETURNDATACOPY \t\t\tIERC20(tokenB).transferFrom(ms...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenB).transferFrom(ms...\n      REVERT \t\t\tIERC20(tokenB).transferFrom(ms...\n    tag 124\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMPDEST \t\t\tIERC20(tokenB).transferFrom(ms...\n      POP \t\t\tIERC20(tokenB).transferFrom(ms...\n      POP \t\t\tIERC20(tokenB).transferFrom(ms...\n      POP \t\t\tIERC20(tokenB).transferFrom(ms...\n      POP \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 40\t\t\tIERC20(tokenB).transferFrom(ms...\n      MLOAD \t\t\tIERC20(tokenB).transferFrom(ms...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 1F\t\t\tIERC20(tokenB).transferFrom(ms...\n      NOT \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 1F\t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP3 \t\t\tIERC20(tokenB).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenB).transferFrom(ms...\n      AND \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP3 \t\t\tIERC20(tokenB).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 40\t\t\tIERC20(tokenB).transferFrom(ms...\n      MSTORE \t\t\tIERC20(tokenB).transferFrom(ms...\n      POP \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP2 \t\t\tIERC20(tokenB).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 125\t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP2 \t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 82\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMP \t\t\tIERC20(tokenB).transferFrom(ms...\n    tag 125\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMPDEST \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 126\t\t\trequire(\\n            IERC20(t...\n      JUMPI \t\t\trequire(\\n            IERC20(t...\n      PUSH 40\t\t\trequire(\\n            IERC20(t...\n      MLOAD \t\t\trequire(\\n            IERC20(t...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(\\n            IERC20(t...\n      DUP2 \t\t\trequire(\\n            IERC20(t...\n      MSTORE \t\t\trequire(\\n            IERC20(t...\n      PUSH 4\t\t\trequire(\\n            IERC20(t...\n      ADD \t\t\trequire(\\n            IERC20(t...\n      PUSH [tag] 127\t\t\trequire(\\n            IERC20(t...\n      SWAP1 \t\t\trequire(\\n            IERC20(t...\n      PUSH [tag] 85\t\t\trequire(\\n            IERC20(t...\n      JUMP \t\t\trequire(\\n            IERC20(t...\n    tag 127\t\t\trequire(\\n            IERC20(t...\n      JUMPDEST \t\t\trequire(\\n            IERC20(t...\n      PUSH 40\t\t\trequire(\\n            IERC20(t...\n      MLOAD \t\t\trequire(\\n            IERC20(t...\n      DUP1 \t\t\trequire(\\n            IERC20(t...\n      SWAP2 \t\t\trequire(\\n            IERC20(t...\n      SUB \t\t\trequire(\\n            IERC20(t...\n      SWAP1 \t\t\trequire(\\n            IERC20(t...\n      REVERT \t\t\trequire(\\n            IERC20(t...\n    tag 126\t\t\trequire(\\n            IERC20(t...\n      JUMPDEST \t\t\trequire(\\n            IERC20(t...\n      DUP1 \t\t\tamount\n      PUSH 2\t\t\tstakedBalance\n      PUSH 0\t\t\tstakedBalance[msg.sender]\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tstakedBalance[msg.sender]\n      AND \t\t\tstakedBalance[msg.sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tstakedBalance[msg.sender]\n      AND \t\t\tstakedBalance[msg.sender]\n      DUP2 \t\t\tstakedBalance[msg.sender]\n      MSTORE \t\t\tstakedBalance[msg.sender]\n      PUSH 20\t\t\tstakedBalance[msg.sender]\n      ADD \t\t\tstakedBalance[msg.sender]\n      SWAP1 \t\t\tstakedBalance[msg.sender]\n      DUP2 \t\t\tstakedBalance[msg.sender]\n      MSTORE \t\t\tstakedBalance[msg.sender]\n      PUSH 20\t\t\tstakedBalance[msg.sender]\n      ADD \t\t\tstakedBalance[msg.sender]\n      PUSH 0\t\t\tstakedBalance[msg.sender]\n      KECCAK256 \t\t\tstakedBalance[msg.sender]\n      PUSH 0\t\t\tstakedBalance[msg.sender]\n      DUP3 \t\t\tstakedBalance[msg.sender] += a...\n      DUP3 \t\t\tstakedBalance[msg.sender] += a...\n      SLOAD \t\t\tstakedBalance[msg.sender] += a...\n      PUSH [tag] 128\t\t\tstakedBalance[msg.sender] += a...\n      SWAP2 \t\t\tstakedBalance[msg.sender] += a...\n      SWAP1 \t\t\tstakedBalance[msg.sender] += a...\n      PUSH [tag] 129\t\t\tstakedBalance[msg.sender] += a...\n      JUMP \t\t\tstakedBalance[msg.sender] += a...\n    tag 128\t\t\tstakedBalance[msg.sender] += a...\n      JUMPDEST \t\t\tstakedBalance[msg.sender] += a...\n      SWAP3 \t\t\tstakedBalance[msg.sender] += a...\n      POP \t\t\tstakedBalance[msg.sender] += a...\n      POP \t\t\tstakedBalance[msg.sender] += a...\n      DUP2 \t\t\tstakedBalance[msg.sender] += a...\n      SWAP1 \t\t\tstakedBalance[msg.sender] += a...\n      SSTORE \t\t\tstakedBalance[msg.sender] += a...\n      POP \t\t\tstakedBalance[msg.sender] += a...\n      DUP1 \t\t\tamount\n      PUSH 4\t\t\ttotalStaked\n      PUSH 0\t\t\ttotalStaked\n      DUP3 \t\t\ttotalStaked += amount\n      DUP3 \t\t\ttotalStaked += amount\n      SLOAD \t\t\ttotalStaked += amount\n      PUSH [tag] 130\t\t\ttotalStaked += amount\n      SWAP2 \t\t\ttotalStaked += amount\n      SWAP1 \t\t\ttotalStaked += amount\n      PUSH [tag] 129\t\t\ttotalStaked += amount\n      JUMP \t\t\ttotalStaked += amount\n    tag 130\t\t\ttotalStaked += amount\n      JUMPDEST \t\t\ttotalStaked += amount\n      SWAP3 \t\t\ttotalStaked += amount\n      POP \t\t\ttotalStaked += amount\n      POP \t\t\ttotalStaked += amount\n      DUP2 \t\t\ttotalStaked += amount\n      SWAP1 \t\t\ttotalStaked += amount\n      SSTORE \t\t\ttotalStaked += amount\n      POP \t\t\ttotalStaked += amount\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tStaked(msg.sender, amount)\n      AND \t\t\tStaked(msg.sender, amount)\n      PUSH 9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D\t\t\tStaked(msg.sender, amount)\n      DUP3 \t\t\tamount\n      PUSH 40\t\t\tStaked(msg.sender, amount)\n      MLOAD \t\t\tStaked(msg.sender, amount)\n      PUSH [tag] 131\t\t\tStaked(msg.sender, amount)\n      SWAP2 \t\t\tStaked(msg.sender, amount)\n      SWAP1 \t\t\tStaked(msg.sender, amount)\n      PUSH [tag] 27\t\t\tStaked(msg.sender, amount)\n      JUMP \t\t\tStaked(msg.sender, amount)\n    tag 131\t\t\tStaked(msg.sender, amount)\n      JUMPDEST \t\t\tStaked(msg.sender, amount)\n      PUSH 40\t\t\tStaked(msg.sender, amount)\n      MLOAD \t\t\tStaked(msg.sender, amount)\n      DUP1 \t\t\tStaked(msg.sender, amount)\n      SWAP2 \t\t\tStaked(msg.sender, amount)\n      SUB \t\t\tStaked(msg.sender, amount)\n      SWAP1 \t\t\tStaked(msg.sender, amount)\n      LOG2 \t\t\tStaked(msg.sender, amount)\n      POP \t\t\tfunction stake(uint256 amount)...\n      JUMP \t\t\tfunction stake(uint256 amount)...\n    tag 58\t\t\tfunction deposit(uint256 amoun...\n      JUMPDEST \t\t\tfunction deposit(uint256 amoun...\n      PUSH 0\t\t\t0\n      DUP2 \t\t\tamount\n      GT \t\t\tamount > 0\n      PUSH [tag] 133\t\t\trequire(amount > 0, \"Must depo...\n      JUMPI \t\t\trequire(amount > 0, \"Must depo...\n      PUSH 40\t\t\trequire(amount > 0, \"Must depo...\n      MLOAD \t\t\trequire(amount > 0, \"Must depo...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(amount > 0, \"Must depo...\n      DUP2 \t\t\trequire(amount > 0, \"Must depo...\n      MSTORE \t\t\trequire(amount > 0, \"Must depo...\n      PUSH 4\t\t\trequire(amount > 0, \"Must depo...\n      ADD \t\t\trequire(amount > 0, \"Must depo...\n      PUSH [tag] 134\t\t\trequire(amount > 0, \"Must depo...\n      SWAP1 \t\t\trequire(amount > 0, \"Must depo...\n      PUSH [tag] 135\t\t\trequire(amount > 0, \"Must depo...\n      JUMP \t\t\trequire(amount > 0, \"Must depo...\n    tag 134\t\t\trequire(amount > 0, \"Must depo...\n      JUMPDEST \t\t\trequire(amount > 0, \"Must depo...\n      PUSH 40\t\t\trequire(amount > 0, \"Must depo...\n      MLOAD \t\t\trequire(amount > 0, \"Must depo...\n      DUP1 \t\t\trequire(amount > 0, \"Must depo...\n      SWAP2 \t\t\trequire(amount > 0, \"Must depo...\n      SUB \t\t\trequire(amount > 0, \"Must depo...\n      SWAP1 \t\t\trequire(amount > 0, \"Must depo...\n      REVERT \t\t\trequire(amount > 0, \"Must depo...\n    tag 133\t\t\trequire(amount > 0, \"Must depo...\n      JUMPDEST \t\t\trequire(amount > 0, \"Must depo...\n      PUSH 1\t\t\ttokenB\n      PUSH 0\t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      SLOAD \t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      PUSH 100\t\t\ttokenB\n      EXP \t\t\ttokenB\n      SWAP1 \t\t\ttokenB\n      DIV \t\t\ttokenB\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenB\n      AND \t\t\ttokenB\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tIERC20(tokenB).transferFrom\n      AND \t\t\tIERC20(tokenB).transferFrom\n      PUSH 23B872DD\t\t\tIERC20(tokenB).transferFrom\n      CALLER \t\t\tmsg.sender\n      ADDRESS \t\t\tthis\n      DUP5 \t\t\tamount\n      PUSH 40\t\t\tIERC20(tokenB).transferFrom(ms...\n      MLOAD \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP5 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH FFFFFFFF\t\t\tIERC20(tokenB).transferFrom(ms...\n      AND \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH E0\t\t\tIERC20(tokenB).transferFrom(ms...\n      SHL \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP2 \t\t\tIERC20(tokenB).transferFrom(ms...\n      MSTORE \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 4\t\t\tIERC20(tokenB).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 136\t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP4 \t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP3 \t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP2 \t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 102\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMP \t\t\tIERC20(tokenB).transferFrom(ms...\n    tag 136\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMPDEST \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 20\t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 40\t\t\tIERC20(tokenB).transferFrom(ms...\n      MLOAD \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP4 \t\t\tIERC20(tokenB).transferFrom(ms...\n      SUB \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP2 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP8 \t\t\tIERC20(tokenB).transferFrom(ms...\n      GAS \t\t\tIERC20(tokenB).transferFrom(ms...\n      CALL \t\t\tIERC20(tokenB).transferFrom(ms...\n      ISZERO \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      ISZERO \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 138\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMPI \t\t\tIERC20(tokenB).transferFrom(ms...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenB).transferFrom(ms...\n      RETURNDATACOPY \t\t\tIERC20(tokenB).transferFrom(ms...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 0\t\t\tIERC20(tokenB).transferFrom(ms...\n      REVERT \t\t\tIERC20(tokenB).transferFrom(ms...\n    tag 138\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMPDEST \t\t\tIERC20(tokenB).transferFrom(ms...\n      POP \t\t\tIERC20(tokenB).transferFrom(ms...\n      POP \t\t\tIERC20(tokenB).transferFrom(ms...\n      POP \t\t\tIERC20(tokenB).transferFrom(ms...\n      POP \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 40\t\t\tIERC20(tokenB).transferFrom(ms...\n      MLOAD \t\t\tIERC20(tokenB).transferFrom(ms...\n      RETURNDATASIZE \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 1F\t\t\tIERC20(tokenB).transferFrom(ms...\n      NOT \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 1F\t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP3 \t\t\tIERC20(tokenB).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenB).transferFrom(ms...\n      AND \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP3 \t\t\tIERC20(tokenB).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH 40\t\t\tIERC20(tokenB).transferFrom(ms...\n      MSTORE \t\t\tIERC20(tokenB).transferFrom(ms...\n      POP \t\t\tIERC20(tokenB).transferFrom(ms...\n      DUP2 \t\t\tIERC20(tokenB).transferFrom(ms...\n      ADD \t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 139\t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP2 \t\t\tIERC20(tokenB).transferFrom(ms...\n      SWAP1 \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 82\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMP \t\t\tIERC20(tokenB).transferFrom(ms...\n    tag 139\t\t\tIERC20(tokenB).transferFrom(ms...\n      JUMPDEST \t\t\tIERC20(tokenB).transferFrom(ms...\n      PUSH [tag] 140\t\t\trequire(\\n            IERC20(t...\n      JUMPI \t\t\trequire(\\n            IERC20(t...\n      PUSH 40\t\t\trequire(\\n            IERC20(t...\n      MLOAD \t\t\trequire(\\n            IERC20(t...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(\\n            IERC20(t...\n      DUP2 \t\t\trequire(\\n            IERC20(t...\n      MSTORE \t\t\trequire(\\n            IERC20(t...\n      PUSH 4\t\t\trequire(\\n            IERC20(t...\n      ADD \t\t\trequire(\\n            IERC20(t...\n      PUSH [tag] 141\t\t\trequire(\\n            IERC20(t...\n      SWAP1 \t\t\trequire(\\n            IERC20(t...\n      PUSH [tag] 85\t\t\trequire(\\n            IERC20(t...\n      JUMP \t\t\trequire(\\n            IERC20(t...\n    tag 141\t\t\trequire(\\n            IERC20(t...\n      JUMPDEST \t\t\trequire(\\n            IERC20(t...\n      PUSH 40\t\t\trequire(\\n            IERC20(t...\n      MLOAD \t\t\trequire(\\n            IERC20(t...\n      DUP1 \t\t\trequire(\\n            IERC20(t...\n      SWAP2 \t\t\trequire(\\n            IERC20(t...\n      SUB \t\t\trequire(\\n            IERC20(t...\n      SWAP1 \t\t\trequire(\\n            IERC20(t...\n      REVERT \t\t\trequire(\\n            IERC20(t...\n    tag 140\t\t\trequire(\\n            IERC20(t...\n      JUMPDEST \t\t\trequire(\\n            IERC20(t...\n      DUP1 \t\t\tamount\n      PUSH 3\t\t\tdepositedBalance\n      PUSH 0\t\t\tdepositedBalance[msg.sender]\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdepositedBalance[msg.sender]\n      AND \t\t\tdepositedBalance[msg.sender]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdepositedBalance[msg.sender]\n      AND \t\t\tdepositedBalance[msg.sender]\n      DUP2 \t\t\tdepositedBalance[msg.sender]\n      MSTORE \t\t\tdepositedBalance[msg.sender]\n      PUSH 20\t\t\tdepositedBalance[msg.sender]\n      ADD \t\t\tdepositedBalance[msg.sender]\n      SWAP1 \t\t\tdepositedBalance[msg.sender]\n      DUP2 \t\t\tdepositedBalance[msg.sender]\n      MSTORE \t\t\tdepositedBalance[msg.sender]\n      PUSH 20\t\t\tdepositedBalance[msg.sender]\n      ADD \t\t\tdepositedBalance[msg.sender]\n      PUSH 0\t\t\tdepositedBalance[msg.sender]\n      KECCAK256 \t\t\tdepositedBalance[msg.sender]\n      PUSH 0\t\t\tdepositedBalance[msg.sender]\n      DUP3 \t\t\tdepositedBalance[msg.sender] +...\n      DUP3 \t\t\tdepositedBalance[msg.sender] +...\n      SLOAD \t\t\tdepositedBalance[msg.sender] +...\n      PUSH [tag] 142\t\t\tdepositedBalance[msg.sender] +...\n      SWAP2 \t\t\tdepositedBalance[msg.sender] +...\n      SWAP1 \t\t\tdepositedBalance[msg.sender] +...\n      PUSH [tag] 129\t\t\tdepositedBalance[msg.sender] +...\n      JUMP \t\t\tdepositedBalance[msg.sender] +...\n    tag 142\t\t\tdepositedBalance[msg.sender] +...\n      JUMPDEST \t\t\tdepositedBalance[msg.sender] +...\n      SWAP3 \t\t\tdepositedBalance[msg.sender] +...\n      POP \t\t\tdepositedBalance[msg.sender] +...\n      POP \t\t\tdepositedBalance[msg.sender] +...\n      DUP2 \t\t\tdepositedBalance[msg.sender] +...\n      SWAP1 \t\t\tdepositedBalance[msg.sender] +...\n      SSTORE \t\t\tdepositedBalance[msg.sender] +...\n      POP \t\t\tdepositedBalance[msg.sender] +...\n      DUP1 \t\t\tamount\n      PUSH 5\t\t\ttotalDeposited\n      PUSH 0\t\t\ttotalDeposited\n      DUP3 \t\t\ttotalDeposited += amount\n      DUP3 \t\t\ttotalDeposited += amount\n      SLOAD \t\t\ttotalDeposited += amount\n      PUSH [tag] 143\t\t\ttotalDeposited += amount\n      SWAP2 \t\t\ttotalDeposited += amount\n      SWAP1 \t\t\ttotalDeposited += amount\n      PUSH [tag] 129\t\t\ttotalDeposited += amount\n      JUMP \t\t\ttotalDeposited += amount\n    tag 143\t\t\ttotalDeposited += amount\n      JUMPDEST \t\t\ttotalDeposited += amount\n      SWAP3 \t\t\ttotalDeposited += amount\n      POP \t\t\ttotalDeposited += amount\n      POP \t\t\ttotalDeposited += amount\n      DUP2 \t\t\ttotalDeposited += amount\n      SWAP1 \t\t\ttotalDeposited += amount\n      SSTORE \t\t\ttotalDeposited += amount\n      POP \t\t\ttotalDeposited += amount\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tDeposited(msg.sender, amount)\n      AND \t\t\tDeposited(msg.sender, amount)\n      PUSH 2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4\t\t\tDeposited(msg.sender, amount)\n      DUP3 \t\t\tamount\n      PUSH 40\t\t\tDeposited(msg.sender, amount)\n      MLOAD \t\t\tDeposited(msg.sender, amount)\n      PUSH [tag] 144\t\t\tDeposited(msg.sender, amount)\n      SWAP2 \t\t\tDeposited(msg.sender, amount)\n      SWAP1 \t\t\tDeposited(msg.sender, amount)\n      PUSH [tag] 27\t\t\tDeposited(msg.sender, amount)\n      JUMP \t\t\tDeposited(msg.sender, amount)\n    tag 144\t\t\tDeposited(msg.sender, amount)\n      JUMPDEST \t\t\tDeposited(msg.sender, amount)\n      PUSH 40\t\t\tDeposited(msg.sender, amount)\n      MLOAD \t\t\tDeposited(msg.sender, amount)\n      DUP1 \t\t\tDeposited(msg.sender, amount)\n      SWAP2 \t\t\tDeposited(msg.sender, amount)\n      SUB \t\t\tDeposited(msg.sender, amount)\n      SWAP1 \t\t\tDeposited(msg.sender, amount)\n      LOG2 \t\t\tDeposited(msg.sender, amount)\n      POP \t\t\tfunction deposit(uint256 amoun...\n      JUMP \t\t\tfunction deposit(uint256 amoun...\n    tag 61\t\t\tmapping(address => uint256) pu...\n      JUMPDEST \t\t\tmapping(address => uint256) pu...\n      PUSH 3\t\t\tmapping(address => uint256) pu...\n      PUSH 20\t\t\tmapping(address => uint256) pu...\n      MSTORE \t\t\tmapping(address => uint256) pu...\n      DUP1 \t\t\tmapping(address => uint256) pu...\n      PUSH 0\t\t\tmapping(address => uint256) pu...\n      MSTORE \t\t\tmapping(address => uint256) pu...\n      PUSH 40\t\t\tmapping(address => uint256) pu...\n      PUSH 0\t\t\tmapping(address => uint256) pu...\n      KECCAK256 \t\t\tmapping(address => uint256) pu...\n      PUSH 0\t\t\tmapping(address => uint256) pu...\n      SWAP2 \t\t\tmapping(address => uint256) pu...\n      POP \t\t\tmapping(address => uint256) pu...\n      SWAP1 \t\t\tmapping(address => uint256) pu...\n      POP \t\t\tmapping(address => uint256) pu...\n      SLOAD \t\t\tmapping(address => uint256) pu...\n      DUP2 \t\t\tmapping(address => uint256) pu...\n      JUMP \t\t\tmapping(address => uint256) pu...\n    tag 64\t\t\tuint256 public totalDeposited\n      JUMPDEST \t\t\tuint256 public totalDeposited\n      PUSH 5\t\t\tuint256 public totalDeposited\n      SLOAD \t\t\tuint256 public totalDeposited\n      DUP2 \t\t\tuint256 public totalDeposited\n      JUMP \t\t\tuint256 public totalDeposited\n    tag 145\t\t\t-License-Identifier: MIT\\nprag...\n      JUMPDEST \t\t\t-License-Identifier: MIT\\nprag...\n      PUSH 0\t\t\tity ^0.\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tction transferFrom(address sen...\n      DUP3 \t\t\t    f\n      AND \t\t\t0 {\\n    function transferFrom...\n      SWAP1 \t\t\trface IERC20 {\\n    function t...\n      POP \t\t\trface IERC20 {\\n    function t...\n      SWAP2 \t\t\t-License-Identifier: MIT\\nprag...\n      SWAP1 \t\t\t-License-Identifier: MIT\\nprag...\n      POP \t\t\t-License-Identifier: MIT\\nprag...\n      JUMP \t\t\t-License-Identifier: MIT\\nprag...\n    tag 146\t\t\tint256 amount) external return...\n      JUMPDEST \t\t\tint256 amount) external return...\n      PUSH 0\t\t\t);\\n    \n      PUSH [tag] 182\t\t\tess recipient, uint256 a\n      DUP3 \t\t\tt256 \n      PUSH [tag] 145\t\t\tess recipient, uint256 a\n      JUMP \t\t\tess recipient, uint256 a\n    tag 182\t\t\tess recipient, uint256 a\n      JUMPDEST \t\t\tess recipient, uint256 a\n      SWAP1 \t\t\tansfer(address recipient, uint...\n      POP \t\t\tansfer(address recipient, uint...\n      SWAP2 \t\t\tint256 amount) external return...\n      SWAP1 \t\t\tint256 amount) external return...\n      POP \t\t\tint256 amount) external return...\n      JUMP \t\t\tint256 amount) external return...\n    tag 147\t\t\tnal returns (bool);\\n    funct...\n      JUMPDEST \t\t\tnal returns (bool);\\n    funct...\n      PUSH [tag] 184\t\t\t256);\\n}\\n\\n/**\\n * @title S\n      DUP2 \t\t\title \n      PUSH [tag] 146\t\t\t256);\\n}\\n\\n/**\\n * @title S\n      JUMP \t\t\t256);\\n}\\n\\n/**\\n * @title S\n    tag 184\t\t\t256);\\n}\\n\\n/**\\n * @title S\n      JUMPDEST \t\t\t256);\\n}\\n\\n/**\\n * @title S\n      DUP3 \t\t\t(ui\n      MSTORE \t\t\teturns (uint256);\\n}\\n\\n/**\\n ...\n      POP \t\t\tnal returns (bool);\\n    funct...\n      POP \t\t\tnal returns (bool);\\n    funct...\n      JUMP \t\t\tnal returns (bool);\\n    funct...\n    tag 21\t\t\t * @dev A contract with tokenB...\n      JUMPDEST \t\t\t * @dev A contract with tokenB...\n      PUSH 0\t\t\tleSt\n      PUSH 20\t\t\t a\n      DUP3 \t\t\tdresses\\n \n      ADD \t\t\tn addresses\\n    ad\n      SWAP1 \t\t\t // Token addresses\\n    ad\n      POP \t\t\t // Token addresses\\n    ad\n      PUSH [tag] 186\t\t\tic tokenA;\\n    address public...\n      PUSH 0\t\t\ta\n      DUP4 \t\t\t to track\n      ADD \t\t\tping to track eac\n      DUP5 \t\t\t   // \n      PUSH [tag] 147\t\t\tic tokenA;\\n    address public...\n      JUMP \t\t\tic tokenA;\\n    address public...\n    tag 186\t\t\tic tokenA;\\n    address public...\n      JUMPDEST \t\t\tic tokenA;\\n    address public...\n      SWAP3 \t\t\t * @dev A contract with tokenB...\n      SWAP2 \t\t\t * @dev A contract with tokenB...\n      POP \t\t\t * @dev A contract with tokenB...\n      POP \t\t\t * @dev A contract with tokenB...\n      JUMP \t\t\t * @dev A contract with tokenB...\n    tag 149\t\t\t/ Mapping to track each user's...\n      JUMPDEST \t\t\t/ Mapping to track each user's...\n      PUSH 0\t\t\tp\n      PUSH 0\t\t\t6\n      REVERT \t\t\t uint256) pu\n    tag 151\t\t\tosited for swaps\\n    uint256 ...\n      JUMPDEST \t\t\tosited for swaps\\n    uint256 ...\n      PUSH [tag] 191\t\t\t  event Staked(address i\n      DUP2 \t\t\tress \n      PUSH [tag] 146\t\t\t  event Staked(address i\n      JUMP \t\t\t  event Staked(address i\n    tag 191\t\t\t  event Staked(address i\n      JUMPDEST \t\t\t  event Staked(address i\n      DUP2 \t\t\tents\\n\n      EQ \t\t\t Events\\n    event Staked(addr...\n      PUSH [tag] 192\t\t\t   \\n    // Events\\n    event ...\n      JUMPI \t\t\t   \\n    // Events\\n    event ...\n      PUSH 0\t\t\tn\n      PUSH 0\t\t\t \n      REVERT \t\t\td user, uint\n    tag 192\t\t\t   \\n    // Events\\n    event ...\n      JUMPDEST \t\t\t   \\n    // Events\\n    event ...\n      POP \t\t\tosited for swaps\\n    uint256 ...\n      JUMP \t\t\tosited for swaps\\n    uint256 ...\n    tag 152\t\t\t   event Withdrawn(address ind...\n      JUMPDEST \t\t\t   event Withdrawn(address ind...\n      PUSH 0\t\t\t56 am\n      DUP2 \t\t\ts inde\n      CALLDATALOAD \t\t\tosited(address index\n      SWAP1 \t\t\tevent Deposited(address index\n      POP \t\t\tevent Deposited(address index\n      PUSH [tag] 194\t\t\tuint256 amount);\\n    event Sw...\n      DUP2 \t\t\tSwapp\n      PUSH [tag] 151\t\t\tuint256 amount);\\n    event Sw...\n      JUMP \t\t\tuint256 amount);\\n    event Sw...\n    tag 194\t\t\tuint256 amount);\\n    event Sw...\n      JUMPDEST \t\t\tuint256 amount);\\n    event Sw...\n      SWAP3 \t\t\t   event Withdrawn(address ind...\n      SWAP2 \t\t\t   event Withdrawn(address ind...\n      POP \t\t\t   event Withdrawn(address ind...\n      POP \t\t\t   event Withdrawn(address ind...\n      JUMP \t\t\t   event Withdrawn(address ind...\n    tag 24\t\t\tdexed user, uint256 amountIn, ...\n      JUMPDEST \t\t\tdexed user, uint256 amountIn, ...\n      PUSH 0\t\t\t/**\\n  \n      PUSH 20\t\t\ts\\n\n      DUP3 \t\t\tken addre\n      DUP5 \t\t\tto set \n      SUB \t\t\ttor to set token addres\n      SLT \t\t\ttructor to set token addresses...\n      ISZERO \t\t\tonstructor to set token addres...\n      PUSH [tag] 196\t\t\tonstructor to set token addres...\n      JUMPI \t\t\tonstructor to set token addres...\n      PUSH [tag] 197\t\t\t * @param _tokenA Address of t...\n      PUSH [tag] 149\t\t\t * @param _tokenA Address of t...\n      JUMP \t\t\t * @param _tokenA Address of t...\n    tag 197\t\t\t * @param _tokenA Address of t...\n      JUMPDEST \t\t\t * @param _tokenA Address of t...\n    tag 196\t\t\tonstructor to set token addres...\n      JUMPDEST \t\t\tonstructor to set token addres...\n      PUSH 0\t\t\td\n      PUSH [tag] 198\t\t\t require(_tokenA != address(0)...\n      DUP5 \t\t\tnA addr\n      DUP3 \t\t\talid t\n      DUP6 \t\t\tss(0), \"I\n      ADD \t\t\tddress(0), \"Invalid to\n      PUSH [tag] 152\t\t\t require(_tokenA != address(0)...\n      JUMP \t\t\t require(_tokenA != address(0)...\n    tag 198\t\t\t require(_tokenA != address(0)...\n      JUMPDEST \t\t\t require(_tokenA != address(0)...\n      SWAP2 \t\t\t {\\n        require(_tokenA !=...\n      POP \t\t\t {\\n        require(_tokenA !=...\n      POP \t\t\tonstructor(address _tokenA, ad...\n      SWAP3 \t\t\tdexed user, uint256 amountIn, ...\n      SWAP2 \t\t\tdexed user, uint256 amountIn, ...\n      POP \t\t\tdexed user, uint256 amountIn, ...\n      POP \t\t\tdexed user, uint256 amountIn, ...\n      JUMP \t\t\tdexed user, uint256 amountIn, ...\n    tag 153\t\t\ttokenB != address(0), \"Invalid...\n      JUMPDEST \t\t\ttokenB != address(0), \"Invalid...\n      PUSH 0\t\t\t addres\n      DUP2 \t\t\t_toke\n      SWAP1 \t\t\t  tokenA = _toke\n      POP \t\t\t  tokenA = _toke\n      SWAP2 \t\t\ttokenB != address(0), \"Invalid...\n      SWAP1 \t\t\ttokenB != address(0), \"Invalid...\n      POP \t\t\ttokenB != address(0), \"Invalid...\n      JUMP \t\t\ttokenB != address(0), \"Invalid...\n    tag 154\t\t\ttokenB = _tokenB;\\n    }\\n    ...\n      JUMPDEST \t\t\ttokenB = _tokenB;\\n    }\\n    ...\n      PUSH [tag] 201\t\t\tovide swap liquidity\\n   \n      DUP2 \t\t\tty\\n  \n      PUSH [tag] 153\t\t\tovide swap liquidity\\n   \n      JUMP \t\t\tovide swap liquidity\\n   \n    tag 201\t\t\tovide swap liquidity\\n   \n      JUMPDEST \t\t\tovide swap liquidity\\n   \n      DUP3 \t\t\tto \n      MSTORE \t\t\tntract to provide swap liquidi...\n      POP \t\t\ttokenB = _tokenB;\\n    }\\n    ...\n      POP \t\t\ttokenB = _tokenB;\\n    }\\n    ...\n      JUMP \t\t\ttokenB = _tokenB;\\n    }\\n    ...\n    tag 27\t\t\tount The amount of tokenB to d...\n      JUMPDEST \t\t\tount The amount of tokenB to d...\n      PUSH 0\t\t\t    \n      PUSH 20\t\t\tsi\n      DUP3 \t\t\t \"Must de\n      ADD \t\t\t> 0, \"Must deposit\n      SWAP1 \t\t\t(amount > 0, \"Must deposit\n      POP \t\t\t(amount > 0, \"Must deposit\n      PUSH [tag] 203\t\t\t 0\");\\n        \\n        // Tr...\n      PUSH 0\t\t\t \n      DUP4 \t\t\tntract\\n  \n      ADD \t\t\to contract\\n      \n      DUP5 \t\t\tom use\n      PUSH [tag] 154\t\t\t 0\");\\n        \\n        // Tr...\n      JUMP \t\t\t 0\");\\n        \\n        // Tr...\n    tag 203\t\t\t 0\");\\n        \\n        // Tr...\n      JUMPDEST \t\t\t 0\");\\n        \\n        // Tr...\n      SWAP3 \t\t\tount The amount of tokenB to d...\n      SWAP2 \t\t\tount The amount of tokenB to d...\n      POP \t\t\tount The amount of tokenB to d...\n      POP \t\t\tount The amount of tokenB to d...\n      JUMP \t\t\tount The amount of tokenB to d...\n    tag 155\t\t\t         IERC20(tokenB).transf...\n      JUMPDEST \t\t\t         IERC20(tokenB).transf...\n      PUSH [tag] 205\t\t\t            \"TokenB tran\n      DUP2 \t\t\tB tra\n      PUSH [tag] 153\t\t\t            \"TokenB tran\n      JUMP \t\t\t            \"TokenB tran\n    tag 205\t\t\t            \"TokenB tran\n      JUMPDEST \t\t\t            \"TokenB tran\n      DUP2 \t\t\tount)\n      EQ \t\t\t amount),\\n            \"TokenB...\n      PUSH [tag] 206\t\t\tess(this), amount),\\n         ...\n      JUMPI \t\t\tess(this), amount),\\n         ...\n      PUSH 0\t\t\t \n      PUSH 0\t\t\t\\n\n      REVERT \t\t\tfailed\"\\n    \n    tag 206\t\t\tess(this), amount),\\n         ...\n      JUMPDEST \t\t\tess(this), amount),\\n         ...\n      POP \t\t\t         IERC20(tokenB).transf...\n      JUMP \t\t\t         IERC20(tokenB).transf...\n    tag 156\t\t\t \\n        depositedBalance[ms...\n      JUMPDEST \t\t\t \\n        depositedBalance[ms...\n      PUSH 0\t\t\tnt;\\n \n      DUP2 \t\t\t      \n      CALLDATALOAD \t\t\td += amount;\\n       \n      SWAP1 \t\t\tlDeposited += amount;\\n       \n      POP \t\t\tlDeposited += amount;\\n       \n      PUSH [tag] 208\t\t\t emit Deposited(msg.sender, am...\n      DUP2 \t\t\t amou\n      PUSH [tag] 155\t\t\t emit Deposited(msg.sender, am...\n      JUMP \t\t\t emit Deposited(msg.sender, am...\n    tag 208\t\t\t emit Deposited(msg.sender, am...\n      JUMPDEST \t\t\t emit Deposited(msg.sender, am...\n      SWAP3 \t\t\t \\n        depositedBalance[ms...\n      SWAP2 \t\t\t \\n        depositedBalance[ms...\n      POP \t\t\t \\n        depositedBalance[ms...\n      POP \t\t\t \\n        depositedBalance[ms...\n      JUMP \t\t\t \\n        depositedBalance[ms...\n    tag 30\t\t\t  \\n    /**\\n     * @dev Stake...\n      JUMPDEST \t\t\t  \\n    /**\\n     * @dev Stake...\n      PUSH 0\t\t\t* @par\n      PUSH 20\t\t\t  \n      DUP3 \t\t\tto stake\\n\n      DUP5 \t\t\tf token\n      SUB \t\t\tnt of tokenB to stake\\n \n      SLT \t\t\tamount of tokenB to stake\\n   ...\n      ISZERO \t\t\the amount of tokenB to stake\\n...\n      PUSH [tag] 210\t\t\the amount of tokenB to stake\\n...\n      JUMPI \t\t\the amount of tokenB to stake\\n...\n      PUSH [tag] 211\t\t\t   function stake(uint256 amou...\n      PUSH [tag] 149\t\t\t   function stake(uint256 amou...\n      JUMP \t\t\t   function stake(uint256 amou...\n    tag 211\t\t\t   function stake(uint256 amou...\n      JUMPDEST \t\t\t   function stake(uint256 amou...\n    tag 210\t\t\the amount of tokenB to stake\\n...\n      JUMPDEST \t\t\the amount of tokenB to stake\\n...\n      PUSH 0\t\t\tT\n      PUSH [tag] 212\t\t\t to contract\\n        require(...\n      DUP5 \t\t\tC20(tok\n      DUP3 \t\t\t      \n      DUP6 \t\t\tire(\\n    \n      ADD \t\t\trequire(\\n            I\n      PUSH [tag] 156\t\t\t to contract\\n        require(...\n      JUMP \t\t\t to contract\\n        require(...\n    tag 212\t\t\t to contract\\n        require(...\n      JUMPDEST \t\t\t to contract\\n        require(...\n      SWAP2 \t\t\t from user to contract\\n      ...\n      POP \t\t\t from user to contract\\n      ...\n      POP \t\t\than 0\");\\n        \\n        //...\n      SWAP3 \t\t\t  \\n    /**\\n     * @dev Stake...\n      SWAP2 \t\t\t  \\n    /**\\n     * @dev Stake...\n      POP \t\t\t  \\n    /**\\n     * @dev Stake...\n      POP \t\t\t  \\n    /**\\n     * @dev Stake...\n      JUMP \t\t\t  \\n    /**\\n     * @dev Stake...\n    tag 157\t\t\tnder, address(this), amount),\\...\n      JUMPDEST \t\t\tnder, address(this), amount),\\...\n      PUSH 0\t\t\t  \\n        \n      DUP3 \t\t\tr] += \n      DUP3 \t\t\tsen\n      MSTORE \t\t\tce[msg.sender] += a\n      PUSH 20\t\t\tunt;\n      DUP3 \t\t\t= a\n      ADD \t\t\ted += amount;\\n\n      SWAP1 \t\t\t      totalStaked += amount;\\n\n      POP \t\t\t      totalStaked += amount;\\n\n      SWAP3 \t\t\tnder, address(this), amount),\\...\n      SWAP2 \t\t\tnder, address(this), amount),\\...\n      POP \t\t\tnder, address(this), amount),\\...\n      POP \t\t\tnder, address(this), amount),\\...\n      JUMP \t\t\tnder, address(this), amount),\\...\n    tag 158\t\t\t     emit Staked(msg.sender, a...\n      JUMPDEST \t\t\t     emit Staked(msg.sender, a...\n      PUSH 4D757374207769746864726177206D6F7265207468616E203000000000000000\t\t\t */\\n    function withdraw(u\n      PUSH 0\t\t\t \n      DUP3 \t\t\tithdra\n      ADD \t\t\tto withdraw\\n  \n      MSTORE \t\t\tamount to withdraw\\n     */\\n ...\n      POP \t\t\t     emit Staked(msg.sender, a...\n      JUMP \t\t\t     emit Staked(msg.sender, a...\n    tag 159\t\t\t external {\\n        require(a...\n      JUMPDEST \t\t\t external {\\n        require(a...\n      PUSH 0\t\t\td b\n      PUSH [tag] 216\t\t\t\\n        stakedBalance[msg.se...\n      PUSH 19\t\t\td \n      DUP4 \t\t\tSta\n      PUSH [tag] 157\t\t\t\\n        stakedBalance[msg.se...\n      JUMP \t\t\t\\n        stakedBalance[msg.se...\n    tag 216\t\t\t\\n        stakedBalance[msg.se...\n      JUMPDEST \t\t\t\\n        stakedBalance[msg.se...\n      SWAP2 \t\t\t       \\n        stakedBalance...\n      POP \t\t\t       \\n        stakedBalance...\n      PUSH [tag] 217\t\t\t\\n        \\n        // Transfe...\n      DUP3 \t\t\t   \n      PUSH [tag] 158\t\t\t\\n        \\n        // Transfe...\n      JUMP \t\t\t\\n        \\n        // Transfe...\n    tag 217\t\t\t\\n        \\n        // Transfe...\n      JUMPDEST \t\t\t\\n        \\n        // Transfe...\n      PUSH 20\t\t\tsg\n      DUP3 \t\t\tfer\n      ADD \t\t\transfer(msg.\n      SWAP1 \t\t\tkenB).transfer(msg.\n      POP \t\t\tkenB).transfer(msg.\n      SWAP2 \t\t\t external {\\n        require(a...\n      SWAP1 \t\t\t external {\\n        require(a...\n      POP \t\t\t external {\\n        require(a...\n      JUMP \t\t\t external {\\n        require(a...\n    tag 70\t\t\tnt),\\n            \"TokenB tran...\n      JUMPDEST \t\t\tnt),\\n            \"TokenB tran...\n      PUSH 0\t\t\tatio\n      PUSH 20\t\t\tei\n      DUP3 \t\t\tenA and r\n      ADD \t\t\t tokenA and receiv\n      SWAP1 \t\t\ter sends tokenA and receiv\n      POP \t\t\ter sends tokenA and receiv\n      DUP2 \t\t\tam amount\n      DUP2 \t\t\t* @p\n      SUB \t\t\t    * @param amount \n      PUSH 0\t\t\tt\n      DUP4 \t\t\tted liqui\n      ADD \t\t\tposited liquidity\n      MSTORE \t\t\tfrom deposited liquidity\\n    ...\n      PUSH [tag] 219\t\t\tns to swap\\n     */\\n    funct...\n      DUP2 \t\t\t\\n   \n      PUSH [tag] 159\t\t\tns to swap\\n     */\\n    funct...\n      JUMP \t\t\tns to swap\\n     */\\n    funct...\n    tag 219\t\t\tns to swap\\n     */\\n    funct...\n      JUMPDEST \t\t\tns to swap\\n     */\\n    funct...\n      SWAP1 \t\t\t of tokens to swap\\n     */\\n ...\n      POP \t\t\t of tokens to swap\\n     */\\n ...\n      SWAP2 \t\t\tnt),\\n            \"TokenB tran...\n      SWAP1 \t\t\tnt),\\n            \"TokenB tran...\n      POP \t\t\tnt),\\n            \"TokenB tran...\n      JUMP \t\t\tnt),\\n            \"TokenB tran...\n    tag 160\t\t\tcontract has enough tokenB in ...\n      JUMPDEST \t\t\tcontract has enough tokenB in ...\n      PUSH 496E73756666696369656E74207374616B65642062616C616E63650000000000\t\t\t Transfer tokenA from user to\n      PUSH 0\t\t\t \n      DUP3 \t\t\t \\n    \n      ADD \t\t\t     \\n        \n      MSTORE \t\t\t\");\\n        \\n        // Tran...\n      POP \t\t\tcontract has enough tokenB in ...\n      JUMP \t\t\tcontract has enough tokenB in ...\n    tag 161\t\t\t    require(\\n            IERC...\n      JUMPDEST \t\t\t    require(\\n            IERC...\n      PUSH 0\t\t\t   \n      PUSH [tag] 222\t\t\ter tokenB from contract to use...\n      PUSH 1B\t\t\tC2\n      DUP4 \t\t\t  I\n      PUSH [tag] 157\t\t\ter tokenB from contract to use...\n      JUMP \t\t\ter tokenB from contract to use...\n    tag 222\t\t\ter tokenB from contract to use...\n      JUMPDEST \t\t\ter tokenB from contract to use...\n      SWAP2 \t\t\t Transfer tokenB from contract...\n      POP \t\t\t Transfer tokenB from contract...\n      PUSH [tag] 223\t\t\ttransfer(msg.sender, amount),\\...\n      DUP3 \t\t\t   \n      PUSH [tag] 160\t\t\ttransfer(msg.sender, amount),\\...\n      JUMP \t\t\ttransfer(msg.sender, amount),\\...\n    tag 223\t\t\ttransfer(msg.sender, amount),\\...\n      JUMPDEST \t\t\ttransfer(msg.sender, amount),\\...\n      PUSH 20\t\t\ted\n      DUP3 \t\t\tpos\n      ADD \t\t\tl deposited \n      SWAP1 \t\t\tce total deposited \n      POP \t\t\tce total deposited \n      SWAP2 \t\t\t    require(\\n            IERC...\n      SWAP1 \t\t\t    require(\\n            IERC...\n      POP \t\t\t    require(\\n            IERC...\n      JUMP \t\t\t    require(\\n            IERC...\n    tag 73\t\t\t was sent out\\n        totalDe...\n      JUMPDEST \t\t\t was sent out\\n        totalDe...\n      PUSH 0\t\t\tuser\n      PUSH 20\t\t\t c\n      DUP3 \t\t\t address \n      ADD \t\t\t The address to ch\n      SWAP1 \t\t\tram user The address to ch\n      POP \t\t\tram user The address to ch\n      DUP2 \t\t\t    */\\n  \n      DUP2 \t\t\tance\n      SUB \t\t\t balance\\n     */\\n   \n      PUSH 0\t\t\tk\n      DUP4 \t\t\te staked \n      ADD \t\t\tn The staked toke\n      MSTORE \t\t\t @return The staked tokenB bal...\n      PUSH [tag] 225\t\t\tdBalance(address user) externa...\n      DUP2 \t\t\tt th\n      PUSH [tag] 161\t\t\tdBalance(address user) externa...\n      JUMP \t\t\tdBalance(address user) externa...\n    tag 225\t\t\tdBalance(address user) externa...\n      JUMPDEST \t\t\tdBalance(address user) externa...\n      SWAP1 \t\t\tgetStakedBalance(address user)...\n      POP \t\t\tgetStakedBalance(address user)...\n      SWAP2 \t\t\t was sent out\\n        totalDe...\n      SWAP1 \t\t\t was sent out\\n        totalDe...\n      POP \t\t\t was sent out\\n        totalDe...\n      JUMP \t\t\t was sent out\\n        totalDe...\n    tag 162\t\t\tlance of a user\\n     * @param...\n      JUMPDEST \t\t\tlance of a user\\n     * @param...\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\to check\\n     * @return The de...\n      PUSH 0\t\t\ts\n      MSTORE \t\t\t address to check\\n     * @ret...\n      PUSH 11\t\t\tess \n      PUSH 4\t\t\td\n      MSTORE \t\t\tlance(address u\n      PUSH 24\t\t\tretu\n      PUSH 0\t\t\te\n      REVERT \t\t\trnal view retur\n    tag 75\t\t\t {\\n        return depositedBa...\n      JUMPDEST \t\t\t {\\n        return depositedBa...\n      PUSH 0\t\t\t;\\n  \n      PUSH [tag] 228\t\t\t\\n     * @dev Get the\n      DUP3 \t\t\th\n      PUSH [tag] 153\t\t\t\\n     * @dev Get the\n      JUMP \t\t\t\\n     * @dev Get the\n    tag 228\t\t\t\\n     * @dev Get the\n      JUMPDEST \t\t\t\\n     * @dev Get the\n      SWAP2 \t\t\t  /**\\n     * @dev Get the\n      POP \t\t\t  /**\\n     * @dev Get the\n      PUSH [tag] 229\t\t\tken balance\\n     * @\n      DUP4 \t\t\t \n      PUSH [tag] 153\t\t\tken balance\\n     * @\n      JUMP \t\t\tken balance\\n     * @\n    tag 229\t\t\tken balance\\n     * @\n      JUMPDEST \t\t\tken balance\\n     * @\n      SWAP3 \t\t\t's token balance\\n     * @\n      POP \t\t\t's token balance\\n     * @\n      DUP3 \t\t\td\n      DUP3 \t\t\t \n      SUB \t\t\token addr\n      SWAP1 \t\t\ten The token addr\n      POP \t\t\ten The token addr\n      DUP2 \t\t\te\n      DUP2 \t\t\t  * \n      GT \t\t\t     * @ret\n      ISZERO \t\t\tck\\n     * @return The token b...\n      PUSH [tag] 230\t\t\tck\\n     * @return The token b...\n      JUMPI \t\t\tck\\n     * @return The token b...\n      PUSH [tag] 231\t\t\t The token balance\n      PUSH [tag] 162\t\t\t The token balance\n      JUMP \t\t\t The token balance\n    tag 231\t\t\t The token balance\n      JUMPDEST \t\t\t The token balance\n    tag 230\t\t\tck\\n     * @return The token b...\n      JUMPDEST \t\t\tck\\n     * @return The token b...\n      SWAP3 \t\t\t {\\n        return depositedBa...\n      SWAP2 \t\t\t {\\n        return depositedBa...\n      POP \t\t\t {\\n        return depositedBa...\n      POP \t\t\t {\\n        return depositedBa...\n      JUMP \t\t\t {\\n        return depositedBa...\n    tag 78\t\t\tnction getTokenBalance(address...\n      JUMPDEST \t\t\tnction getTokenBalance(address...\n      PUSH 0\t\t\tis))\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 233\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 147\t\t\t\n      JUMP \t\t\t\n    tag 233\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 234\t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 154\t\t\t\n      JUMP \t\t\t\n    tag 234\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\tnction getTokenBalance(address...\n      SWAP3 \t\t\tnction getTokenBalance(address...\n      POP \t\t\tnction getTokenBalance(address...\n      POP \t\t\tnction getTokenBalance(address...\n      POP \t\t\tnction getTokenBalance(address...\n      JUMP \t\t\tnction getTokenBalance(address...\n    tag 163\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      ISZERO \t\t\t\n      ISZERO \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 164\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 237\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 163\t\t\t\n      JUMP \t\t\t\n    tag 237\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 238\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 238\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 165\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 240\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 164\t\t\t\n      JUMP \t\t\t\n    tag 240\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 82\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 242\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 243\t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMP \t\t\t\n    tag 243\t\t\t\n      JUMPDEST \t\t\t\n    tag 242\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 244\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 165\t\t\t\n      JUMP \t\t\t\n    tag 244\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 166\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 546F6B656E42207472616E73666572206661696C656400000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 167\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 247\t\t\t\n      PUSH 16\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 157\t\t\t\n      JUMP \t\t\t\n    tag 247\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 248\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 166\t\t\t\n      JUMP \t\t\t\n    tag 248\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 85\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 250\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 167\t\t\t\n      JUMP \t\t\t\n    tag 250\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 168\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 252\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 155\t\t\t\n      JUMP \t\t\t\n    tag 252\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 93\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 254\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 255\t\t\t\n      PUSH [tag] 149\t\t\t\n      JUMP \t\t\t\n    tag 255\t\t\t\n      JUMPDEST \t\t\t\n    tag 254\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 256\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 168\t\t\t\n      JUMP \t\t\t\n    tag 256\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 169\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4D7573742073776170206D6F7265207468616E20300000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 170\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 259\t\t\t\n      PUSH 15\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 157\t\t\t\n      JUMP \t\t\t\n    tag 259\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 260\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 169\t\t\t\n      JUMP \t\t\t\n    tag 260\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 97\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 262\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 170\t\t\t\n      JUMP \t\t\t\n    tag 262\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 171\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 496E73756666696369656E7420746F6B656E42206C6971756964697479000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 172\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 265\t\t\t\n      PUSH 1D\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 157\t\t\t\n      JUMP \t\t\t\n    tag 265\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 266\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 171\t\t\t\n      JUMP \t\t\t\n    tag 266\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 100\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 268\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 172\t\t\t\n      JUMP \t\t\t\n    tag 268\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 102\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 270\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 147\t\t\t\n      JUMP \t\t\t\n    tag 270\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 271\t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 147\t\t\t\n      JUMP \t\t\t\n    tag 271\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 272\t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 154\t\t\t\n      JUMP \t\t\t\n    tag 272\t\t\t\n      JUMPDEST \t\t\t\n      SWAP5 \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 173\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 546F6B656E41207472616E73666572206661696C656400000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 174\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 275\t\t\t\n      PUSH 16\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 157\t\t\t\n      JUMP \t\t\t\n    tag 275\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 276\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 173\t\t\t\n      JUMP \t\t\t\n    tag 276\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 108\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 278\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 174\t\t\t\n      JUMP \t\t\t\n    tag 278\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 117\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 280\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 154\t\t\t\n      JUMP \t\t\t\n    tag 280\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 281\t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 154\t\t\t\n      JUMP \t\t\t\n    tag 281\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 175\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4D757374207374616B65206D6F7265207468616E203000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 176\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 284\t\t\t\n      PUSH 16\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 157\t\t\t\n      JUMP \t\t\t\n    tag 284\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 285\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 175\t\t\t\n      JUMP \t\t\t\n    tag 285\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 121\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 287\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 176\t\t\t\n      JUMP \t\t\t\n    tag 287\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 129\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 289\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 153\t\t\t\n      JUMP \t\t\t\n    tag 289\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 290\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 153\t\t\t\n      JUMP \t\t\t\n    tag 290\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 291\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 292\t\t\t\n      PUSH [tag] 162\t\t\t\n      JUMP \t\t\t\n    tag 292\t\t\t\n      JUMPDEST \t\t\t\n    tag 291\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 177\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4D757374206465706F736974206D6F7265207468616E20300000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 178\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 295\t\t\t\n      PUSH 18\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 157\t\t\t\n      JUMP \t\t\t\n    tag 295\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 296\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 177\t\t\t\n      JUMP \t\t\t\n    tag 296\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 135\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 298\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 178\t\t\t\n      JUMP \t\t\t\n    tag 298\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}